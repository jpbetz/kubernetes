/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ManagedFieldsEntryBuilder represents an declarative configuration of the ManagedFieldsEntry type for use
// with apply.
type ManagedFieldsEntryBuilder struct {
	fields *managedFieldsEntryFields
}

// managedFieldsEntryFields is used by ManagedFieldsEntryBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ManagedFieldsEntryBuilder before marshalling, and
// are copied out to the builder type in ManagedFieldsEntryBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type managedFieldsEntryFields struct {
	Manager    *string                        `json:"manager,omitempty"`
	Operation  *v1.ManagedFieldsOperationType `json:"operation,omitempty"`
	APIVersion *string                        `json:"apiVersion,omitempty"`
	Time       *v1.Time                       `json:"time,omitempty"`
	FieldsType *string                        `json:"fieldsType,omitempty"`
	FieldsV1   *v1.FieldsV1                   `json:"fieldsV1,omitempty"`
}

func (b *ManagedFieldsEntryBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &managedFieldsEntryFields{}
	}
}

// ManagedFieldsEntry constructs an declarative configuration of the ManagedFieldsEntry type for use with
// apply.
// Provided as a convenience.
func ManagedFieldsEntry() ManagedFieldsEntryBuilder {
	return ManagedFieldsEntryBuilder{fields: &managedFieldsEntryFields{}}
}

// SetManager sets the Manager field in the declarative configuration to the given value.
func (b ManagedFieldsEntryBuilder) SetManager(value string) ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.Manager = &value
	return b
}

// RemoveManager removes the Manager field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) RemoveManager() ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.Manager = nil
	return b
}

// GetManager gets the Manager field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) GetManager() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Manager; v != nil {
		return *v, true
	}
	return value, false
}

// SetOperation sets the Operation field in the declarative configuration to the given value.
func (b ManagedFieldsEntryBuilder) SetOperation(value v1.ManagedFieldsOperationType) ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.Operation = &value
	return b
}

// RemoveOperation removes the Operation field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) RemoveOperation() ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.Operation = nil
	return b
}

// GetOperation gets the Operation field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) GetOperation() (value v1.ManagedFieldsOperationType, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Operation; v != nil {
		return *v, true
	}
	return value, false
}

// SetAPIVersion sets the APIVersion field in the declarative configuration to the given value.
func (b ManagedFieldsEntryBuilder) SetAPIVersion(value string) ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.APIVersion = &value
	return b
}

// RemoveAPIVersion removes the APIVersion field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) RemoveAPIVersion() ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.APIVersion = nil
	return b
}

// GetAPIVersion gets the APIVersion field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) GetAPIVersion() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.APIVersion; v != nil {
		return *v, true
	}
	return value, false
}

// SetTime sets the Time field in the declarative configuration to the given value.
func (b ManagedFieldsEntryBuilder) SetTime(value v1.Time) ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.Time = &value
	return b
}

// RemoveTime removes the Time field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) RemoveTime() ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.Time = nil
	return b
}

// GetTime gets the Time field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) GetTime() (value v1.Time, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Time; v != nil {
		return *v, true
	}
	return value, false
}

// SetFieldsType sets the FieldsType field in the declarative configuration to the given value.
func (b ManagedFieldsEntryBuilder) SetFieldsType(value string) ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.FieldsType = &value
	return b
}

// RemoveFieldsType removes the FieldsType field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) RemoveFieldsType() ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.FieldsType = nil
	return b
}

// GetFieldsType gets the FieldsType field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) GetFieldsType() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.FieldsType; v != nil {
		return *v, true
	}
	return value, false
}

// SetFieldsV1 sets the FieldsV1 field in the declarative configuration to the given value.
func (b ManagedFieldsEntryBuilder) SetFieldsV1(value v1.FieldsV1) ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.FieldsV1 = &value
	return b
}

// RemoveFieldsV1 removes the FieldsV1 field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) RemoveFieldsV1() ManagedFieldsEntryBuilder {
	b.ensureInitialized()
	b.fields.FieldsV1 = nil
	return b
}

// GetFieldsV1 gets the FieldsV1 field from the declarative configuration.
func (b ManagedFieldsEntryBuilder) GetFieldsV1() (value v1.FieldsV1, ok bool) {
	b.ensureInitialized()
	if v := b.fields.FieldsV1; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ManagedFieldsEntryBuilder to unstructured.
func (b *ManagedFieldsEntryBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ManagedFieldsEntryBuilder, replacing the contents
// of ManagedFieldsEntryBuilder.
func (b *ManagedFieldsEntryBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &managedFieldsEntryFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ManagedFieldsEntryBuilder to JSON.
func (b *ManagedFieldsEntryBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ManagedFieldsEntryBuilder, replacing the contents of
// ManagedFieldsEntryBuilder.
func (b *ManagedFieldsEntryBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ManagedFieldsEntryList represents a list of ManagedFieldsEntryBuilder.
// Provided as a convenience.
type ManagedFieldsEntryList []ManagedFieldsEntryBuilder

// ManagedFieldsEntryList represents a map of ManagedFieldsEntryBuilder.
// Provided as a convenience.
type ManagedFieldsEntryMap map[string]ManagedFieldsEntryBuilder

func (b *ManagedFieldsEntryBuilder) preMarshal() {
}
func (b *ManagedFieldsEntryBuilder) postUnmarshal() {
}

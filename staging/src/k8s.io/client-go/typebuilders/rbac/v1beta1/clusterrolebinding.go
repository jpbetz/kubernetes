/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// ClusterRoleBindingBuilder represents an declarative configuration of the ClusterRoleBinding type for use
// with apply.
type ClusterRoleBindingBuilder struct {
	typeMeta v1.TypeMetaBuilder // inlined type
	fields   *clusterRoleBindingFields
}

// clusterRoleBindingFields is used by ClusterRoleBindingBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ClusterRoleBindingBuilder before marshalling, and
// are copied out to the builder type in ClusterRoleBindingBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type clusterRoleBindingFields struct {
	Kind       *string               `json:"kind,omitempty"`       // inlined ClusterRoleBindingBuilder.typeMeta.Kind field
	APIVersion *string               `json:"apiVersion,omitempty"` // inlined ClusterRoleBindingBuilder.typeMeta.APIVersion field
	ObjectMeta *v1.ObjectMetaBuilder `json:"metadata,omitempty"`
	Subjects   *SubjectList          `json:"subjects,omitempty"`
	RoleRef    *RoleRefBuilder       `json:"roleRef,omitempty"`
}

func (b *ClusterRoleBindingBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &clusterRoleBindingFields{}
	}
}

// ClusterRoleBinding constructs an declarative configuration of the ClusterRoleBinding type for use with
// apply.
// Provided as a convenience.
func ClusterRoleBinding() ClusterRoleBindingBuilder {
	return ClusterRoleBindingBuilder{fields: &clusterRoleBindingFields{}}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b ClusterRoleBindingBuilder) SetTypeMeta(value v1.TypeMetaBuilder) ClusterRoleBindingBuilder {
	b.ensureInitialized()
	b.typeMeta = value
	return b
}

// RemoveTypeMeta removes the TypeMeta field from the declarative configuration.
func (b ClusterRoleBindingBuilder) RemoveTypeMeta() ClusterRoleBindingBuilder {
	b.ensureInitialized()
	b.typeMeta = v1.TypeMetaBuilder{}
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b ClusterRoleBindingBuilder) GetTypeMeta() (value v1.TypeMetaBuilder, ok bool) {
	b.ensureInitialized()
	return b.typeMeta, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b ClusterRoleBindingBuilder) SetObjectMeta(value v1.ObjectMetaBuilder) ClusterRoleBindingBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = &value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b ClusterRoleBindingBuilder) RemoveObjectMeta() ClusterRoleBindingBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b ClusterRoleBindingBuilder) GetObjectMeta() (value v1.ObjectMetaBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ObjectMeta; v != nil {
		return *v, true
	}
	return value, false
}

// SetSubjects sets the Subjects field in the declarative configuration to the given value.
func (b ClusterRoleBindingBuilder) SetSubjects(value SubjectList) ClusterRoleBindingBuilder {
	b.ensureInitialized()
	b.fields.Subjects = &value
	return b
}

// RemoveSubjects removes the Subjects field from the declarative configuration.
func (b ClusterRoleBindingBuilder) RemoveSubjects() ClusterRoleBindingBuilder {
	b.ensureInitialized()
	b.fields.Subjects = nil
	return b
}

// GetSubjects gets the Subjects field from the declarative configuration.
func (b ClusterRoleBindingBuilder) GetSubjects() (value SubjectList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Subjects; v != nil {
		return *v, true
	}
	return value, false
}

// SetRoleRef sets the RoleRef field in the declarative configuration to the given value.
func (b ClusterRoleBindingBuilder) SetRoleRef(value RoleRefBuilder) ClusterRoleBindingBuilder {
	b.ensureInitialized()
	b.fields.RoleRef = &value
	return b
}

// RemoveRoleRef removes the RoleRef field from the declarative configuration.
func (b ClusterRoleBindingBuilder) RemoveRoleRef() ClusterRoleBindingBuilder {
	b.ensureInitialized()
	b.fields.RoleRef = nil
	return b
}

// GetRoleRef gets the RoleRef field from the declarative configuration.
func (b ClusterRoleBindingBuilder) GetRoleRef() (value RoleRefBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.RoleRef; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ClusterRoleBindingBuilder to unstructured.
func (b *ClusterRoleBindingBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ClusterRoleBindingBuilder, replacing the contents
// of ClusterRoleBindingBuilder.
func (b *ClusterRoleBindingBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &clusterRoleBindingFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ClusterRoleBindingBuilder to JSON.
func (b *ClusterRoleBindingBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into ClusterRoleBindingBuilder, replacing the contents of
// ClusterRoleBindingBuilder.
func (b *ClusterRoleBindingBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ClusterRoleBindingList represents a list of ClusterRoleBindingBuilder.
// Provided as a convenience.
type ClusterRoleBindingList []ClusterRoleBindingBuilder

// ClusterRoleBindingList represents a map of ClusterRoleBindingBuilder.
// Provided as a convenience.
type ClusterRoleBindingMap map[string]ClusterRoleBindingBuilder

func (b *ClusterRoleBindingBuilder) preMarshal() {
	if v, ok := b.typeMeta.GetKind(); ok {
		b.fields.Kind = &v
	}
	if v, ok := b.typeMeta.GetAPIVersion(); ok {
		b.fields.APIVersion = &v
	}
}
func (b *ClusterRoleBindingBuilder) postUnmarshal() {
	if b.fields.Kind != nil {
		b.typeMeta.SetKind(*b.fields.Kind)
	}
	if b.fields.APIVersion != nil {
		b.typeMeta.SetAPIVersion(*b.fields.APIVersion)
	}
}

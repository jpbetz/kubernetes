/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1alpha1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// ClusterRoleBuilder represents an declarative configuration of the ClusterRole type for use
// with apply.
type ClusterRoleBuilder struct {
	typeMeta v1.TypeMetaBuilder // inlined type
	fields   *clusterRoleFields
}

// clusterRoleFields is used by ClusterRoleBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ClusterRoleBuilder before marshalling, and
// are copied out to the builder type in ClusterRoleBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type clusterRoleFields struct {
	Kind            *string                 `json:"kind,omitempty"`       // inlined ClusterRoleBuilder.typeMeta.Kind field
	APIVersion      *string                 `json:"apiVersion,omitempty"` // inlined ClusterRoleBuilder.typeMeta.APIVersion field
	ObjectMeta      *v1.ObjectMetaBuilder   `json:"metadata,omitempty"`
	Rules           *PolicyRuleList         `json:"rules,omitempty"`
	AggregationRule *AggregationRuleBuilder `json:"aggregationRule,omitempty"`
}

func (b *ClusterRoleBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &clusterRoleFields{}
	}
}

// ClusterRole constructs an declarative configuration of the ClusterRole type for use with
// apply.
// Provided as a convenience.
func ClusterRole() ClusterRoleBuilder {
	return ClusterRoleBuilder{fields: &clusterRoleFields{}}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b ClusterRoleBuilder) SetTypeMeta(value v1.TypeMetaBuilder) ClusterRoleBuilder {
	b.ensureInitialized()
	b.typeMeta = value
	return b
}

// RemoveTypeMeta removes the TypeMeta field from the declarative configuration.
func (b ClusterRoleBuilder) RemoveTypeMeta() ClusterRoleBuilder {
	b.ensureInitialized()
	b.typeMeta = v1.TypeMetaBuilder{}
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b ClusterRoleBuilder) GetTypeMeta() (value v1.TypeMetaBuilder, ok bool) {
	b.ensureInitialized()
	return b.typeMeta, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b ClusterRoleBuilder) SetObjectMeta(value v1.ObjectMetaBuilder) ClusterRoleBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = &value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b ClusterRoleBuilder) RemoveObjectMeta() ClusterRoleBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b ClusterRoleBuilder) GetObjectMeta() (value v1.ObjectMetaBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ObjectMeta; v != nil {
		return *v, true
	}
	return value, false
}

// SetRules sets the Rules field in the declarative configuration to the given value.
func (b ClusterRoleBuilder) SetRules(value PolicyRuleList) ClusterRoleBuilder {
	b.ensureInitialized()
	b.fields.Rules = &value
	return b
}

// RemoveRules removes the Rules field from the declarative configuration.
func (b ClusterRoleBuilder) RemoveRules() ClusterRoleBuilder {
	b.ensureInitialized()
	b.fields.Rules = nil
	return b
}

// GetRules gets the Rules field from the declarative configuration.
func (b ClusterRoleBuilder) GetRules() (value PolicyRuleList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Rules; v != nil {
		return *v, true
	}
	return value, false
}

// SetAggregationRule sets the AggregationRule field in the declarative configuration to the given value.
func (b ClusterRoleBuilder) SetAggregationRule(value AggregationRuleBuilder) ClusterRoleBuilder {
	b.ensureInitialized()
	b.fields.AggregationRule = &value
	return b
}

// RemoveAggregationRule removes the AggregationRule field from the declarative configuration.
func (b ClusterRoleBuilder) RemoveAggregationRule() ClusterRoleBuilder {
	b.ensureInitialized()
	b.fields.AggregationRule = nil
	return b
}

// GetAggregationRule gets the AggregationRule field from the declarative configuration.
func (b ClusterRoleBuilder) GetAggregationRule() (value AggregationRuleBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.AggregationRule; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ClusterRoleBuilder to unstructured.
func (b *ClusterRoleBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ClusterRoleBuilder, replacing the contents
// of ClusterRoleBuilder.
func (b *ClusterRoleBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &clusterRoleFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ClusterRoleBuilder to JSON.
func (b *ClusterRoleBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ClusterRoleBuilder, replacing the contents of
// ClusterRoleBuilder.
func (b *ClusterRoleBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ClusterRoleList represents a list of ClusterRoleBuilder.
// Provided as a convenience.
type ClusterRoleList []ClusterRoleBuilder

// ClusterRoleList represents a map of ClusterRoleBuilder.
// Provided as a convenience.
type ClusterRoleMap map[string]ClusterRoleBuilder

func (b *ClusterRoleBuilder) preMarshal() {
	if v, ok := b.typeMeta.GetKind(); ok {
		b.fields.Kind = &v
	}
	if v, ok := b.typeMeta.GetAPIVersion(); ok {
		b.fields.APIVersion = &v
	}
}
func (b *ClusterRoleBuilder) postUnmarshal() {
	if b.fields.Kind != nil {
		b.typeMeta.SetKind(*b.fields.Kind)
	}
	if b.fields.APIVersion != nil {
		b.typeMeta.SetAPIVersion(*b.fields.APIVersion)
	}
}

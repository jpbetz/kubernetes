/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// TokenReviewStatusBuilder represents an declarative configuration of the TokenReviewStatus type for use
// with apply.
type TokenReviewStatusBuilder struct {
	fields *tokenReviewStatusFields
}

// tokenReviewStatusFields is used by TokenReviewStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in TokenReviewStatusBuilder before marshalling, and
// are copied out to the builder type in TokenReviewStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type tokenReviewStatusFields struct {
	Authenticated *bool            `json:"authenticated,omitempty"`
	User          *UserInfoBuilder `json:"user,omitempty"`
	Audiences     *[]string        `json:"audiences,omitempty"`
	Error         *string          `json:"error,omitempty"`
}

func (b *TokenReviewStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &tokenReviewStatusFields{}
	}
}

// TokenReviewStatus constructs an declarative configuration of the TokenReviewStatus type for use with
// apply.
// Provided as a convenience.
func TokenReviewStatus() TokenReviewStatusBuilder {
	return TokenReviewStatusBuilder{fields: &tokenReviewStatusFields{}}
}

// SetAuthenticated sets the Authenticated field in the declarative configuration to the given value.
func (b TokenReviewStatusBuilder) SetAuthenticated(value bool) TokenReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Authenticated = &value
	return b
}

// RemoveAuthenticated removes the Authenticated field from the declarative configuration.
func (b TokenReviewStatusBuilder) RemoveAuthenticated() TokenReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Authenticated = nil
	return b
}

// GetAuthenticated gets the Authenticated field from the declarative configuration.
func (b TokenReviewStatusBuilder) GetAuthenticated() (value bool, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Authenticated; v != nil {
		return *v, true
	}
	return value, false
}

// SetUser sets the User field in the declarative configuration to the given value.
func (b TokenReviewStatusBuilder) SetUser(value UserInfoBuilder) TokenReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.User = &value
	return b
}

// RemoveUser removes the User field from the declarative configuration.
func (b TokenReviewStatusBuilder) RemoveUser() TokenReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.User = nil
	return b
}

// GetUser gets the User field from the declarative configuration.
func (b TokenReviewStatusBuilder) GetUser() (value UserInfoBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.User; v != nil {
		return *v, true
	}
	return value, false
}

// SetAudiences sets the Audiences field in the declarative configuration to the given value.
func (b TokenReviewStatusBuilder) SetAudiences(value []string) TokenReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Audiences = &value
	return b
}

// RemoveAudiences removes the Audiences field from the declarative configuration.
func (b TokenReviewStatusBuilder) RemoveAudiences() TokenReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Audiences = nil
	return b
}

// GetAudiences gets the Audiences field from the declarative configuration.
func (b TokenReviewStatusBuilder) GetAudiences() (value []string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Audiences; v != nil {
		return *v, true
	}
	return value, false
}

// SetError sets the Error field in the declarative configuration to the given value.
func (b TokenReviewStatusBuilder) SetError(value string) TokenReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Error = &value
	return b
}

// RemoveError removes the Error field from the declarative configuration.
func (b TokenReviewStatusBuilder) RemoveError() TokenReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Error = nil
	return b
}

// GetError gets the Error field from the declarative configuration.
func (b TokenReviewStatusBuilder) GetError() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Error; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts TokenReviewStatusBuilder to unstructured.
func (b *TokenReviewStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to TokenReviewStatusBuilder, replacing the contents
// of TokenReviewStatusBuilder.
func (b *TokenReviewStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &tokenReviewStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals TokenReviewStatusBuilder to JSON.
func (b *TokenReviewStatusBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into TokenReviewStatusBuilder, replacing the contents of
// TokenReviewStatusBuilder.
func (b *TokenReviewStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// TokenReviewStatusList represents a list of TokenReviewStatusBuilder.
// Provided as a convenience.
type TokenReviewStatusList []TokenReviewStatusBuilder

// TokenReviewStatusList represents a map of TokenReviewStatusBuilder.
// Provided as a convenience.
type TokenReviewStatusMap map[string]TokenReviewStatusBuilder

func (b *TokenReviewStatusBuilder) preMarshal() {
}
func (b *TokenReviewStatusBuilder) postUnmarshal() {
}

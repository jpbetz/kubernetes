/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// TokenReviewSpecBuilder represents an declarative configuration of the TokenReviewSpec type for use
// with apply.
type TokenReviewSpecBuilder struct {
	fields *tokenReviewSpecFields
}

// tokenReviewSpecFields is used by TokenReviewSpecBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in TokenReviewSpecBuilder before marshalling, and
// are copied out to the builder type in TokenReviewSpecBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type tokenReviewSpecFields struct {
	Token     *string   `json:"token,omitempty"`
	Audiences *[]string `json:"audiences,omitempty"`
}

func (b *TokenReviewSpecBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &tokenReviewSpecFields{}
	}
}

// TokenReviewSpec constructs an declarative configuration of the TokenReviewSpec type for use with
// apply.
// Provided as a convenience.
func TokenReviewSpec() TokenReviewSpecBuilder {
	return TokenReviewSpecBuilder{fields: &tokenReviewSpecFields{}}
}

// SetToken sets the Token field in the declarative configuration to the given value.
func (b TokenReviewSpecBuilder) SetToken(value string) TokenReviewSpecBuilder {
	b.ensureInitialized()
	b.fields.Token = &value
	return b
}

// RemoveToken removes the Token field from the declarative configuration.
func (b TokenReviewSpecBuilder) RemoveToken() TokenReviewSpecBuilder {
	b.ensureInitialized()
	b.fields.Token = nil
	return b
}

// GetToken gets the Token field from the declarative configuration.
func (b TokenReviewSpecBuilder) GetToken() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Token; v != nil {
		return *v, true
	}
	return value, false
}

// SetAudiences sets the Audiences field in the declarative configuration to the given value.
func (b TokenReviewSpecBuilder) SetAudiences(value []string) TokenReviewSpecBuilder {
	b.ensureInitialized()
	b.fields.Audiences = &value
	return b
}

// RemoveAudiences removes the Audiences field from the declarative configuration.
func (b TokenReviewSpecBuilder) RemoveAudiences() TokenReviewSpecBuilder {
	b.ensureInitialized()
	b.fields.Audiences = nil
	return b
}

// GetAudiences gets the Audiences field from the declarative configuration.
func (b TokenReviewSpecBuilder) GetAudiences() (value []string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Audiences; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts TokenReviewSpecBuilder to unstructured.
func (b *TokenReviewSpecBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to TokenReviewSpecBuilder, replacing the contents
// of TokenReviewSpecBuilder.
func (b *TokenReviewSpecBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &tokenReviewSpecFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals TokenReviewSpecBuilder to JSON.
func (b *TokenReviewSpecBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into TokenReviewSpecBuilder, replacing the contents of
// TokenReviewSpecBuilder.
func (b *TokenReviewSpecBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// TokenReviewSpecList represents a list of TokenReviewSpecBuilder.
// Provided as a convenience.
type TokenReviewSpecList []TokenReviewSpecBuilder

// TokenReviewSpecList represents a map of TokenReviewSpecBuilder.
// Provided as a convenience.
type TokenReviewSpecMap map[string]TokenReviewSpecBuilder

func (b *TokenReviewSpecBuilder) preMarshal() {
}
func (b *TokenReviewSpecBuilder) postUnmarshal() {
}

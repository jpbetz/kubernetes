/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	v1beta1 "k8s.io/api/policy/v1beta1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RunAsGroupStrategyOptionsBuilder represents an declarative configuration of the RunAsGroupStrategyOptions type for use
// with apply.
type RunAsGroupStrategyOptionsBuilder struct {
	fields *runAsGroupStrategyOptionsFields
}

// runAsGroupStrategyOptionsFields is used by RunAsGroupStrategyOptionsBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in RunAsGroupStrategyOptionsBuilder before marshalling, and
// are copied out to the builder type in RunAsGroupStrategyOptionsBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type runAsGroupStrategyOptionsFields struct {
	Rule   *v1beta1.RunAsGroupStrategy `json:"rule,omitempty"`
	Ranges *IDRangeList                `json:"ranges,omitempty"`
}

func (b *RunAsGroupStrategyOptionsBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &runAsGroupStrategyOptionsFields{}
	}
}

// RunAsGroupStrategyOptions constructs an declarative configuration of the RunAsGroupStrategyOptions type for use with
// apply.
// Provided as a convenience.
func RunAsGroupStrategyOptions() RunAsGroupStrategyOptionsBuilder {
	return RunAsGroupStrategyOptionsBuilder{fields: &runAsGroupStrategyOptionsFields{}}
}

// SetRule sets the Rule field in the declarative configuration to the given value.
func (b RunAsGroupStrategyOptionsBuilder) SetRule(value v1beta1.RunAsGroupStrategy) RunAsGroupStrategyOptionsBuilder {
	b.ensureInitialized()
	b.fields.Rule = &value
	return b
}

// RemoveRule removes the Rule field from the declarative configuration.
func (b RunAsGroupStrategyOptionsBuilder) RemoveRule() RunAsGroupStrategyOptionsBuilder {
	b.ensureInitialized()
	b.fields.Rule = nil
	return b
}

// GetRule gets the Rule field from the declarative configuration.
func (b RunAsGroupStrategyOptionsBuilder) GetRule() (value v1beta1.RunAsGroupStrategy, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Rule; v != nil {
		return *v, true
	}
	return value, false
}

// SetRanges sets the Ranges field in the declarative configuration to the given value.
func (b RunAsGroupStrategyOptionsBuilder) SetRanges(value IDRangeList) RunAsGroupStrategyOptionsBuilder {
	b.ensureInitialized()
	b.fields.Ranges = &value
	return b
}

// RemoveRanges removes the Ranges field from the declarative configuration.
func (b RunAsGroupStrategyOptionsBuilder) RemoveRanges() RunAsGroupStrategyOptionsBuilder {
	b.ensureInitialized()
	b.fields.Ranges = nil
	return b
}

// GetRanges gets the Ranges field from the declarative configuration.
func (b RunAsGroupStrategyOptionsBuilder) GetRanges() (value IDRangeList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Ranges; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts RunAsGroupStrategyOptionsBuilder to unstructured.
func (b *RunAsGroupStrategyOptionsBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to RunAsGroupStrategyOptionsBuilder, replacing the contents
// of RunAsGroupStrategyOptionsBuilder.
func (b *RunAsGroupStrategyOptionsBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &runAsGroupStrategyOptionsFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals RunAsGroupStrategyOptionsBuilder to JSON.
func (b *RunAsGroupStrategyOptionsBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into RunAsGroupStrategyOptionsBuilder, replacing the contents of
// RunAsGroupStrategyOptionsBuilder.
func (b *RunAsGroupStrategyOptionsBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// RunAsGroupStrategyOptionsList represents a list of RunAsGroupStrategyOptionsBuilder.
// Provided as a convenience.
type RunAsGroupStrategyOptionsList []RunAsGroupStrategyOptionsBuilder

// RunAsGroupStrategyOptionsList represents a map of RunAsGroupStrategyOptionsBuilder.
// Provided as a convenience.
type RunAsGroupStrategyOptionsMap map[string]RunAsGroupStrategyOptionsBuilder

func (b *RunAsGroupStrategyOptionsBuilder) preMarshal() {
}
func (b *RunAsGroupStrategyOptionsBuilder) postUnmarshal() {
}

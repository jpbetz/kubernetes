/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// IDRangeBuilder represents an declarative configuration of the IDRange type for use
// with apply.
type IDRangeBuilder struct {
	fields *iDRangeFields
}

// iDRangeFields is used by IDRangeBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in IDRangeBuilder before marshalling, and
// are copied out to the builder type in IDRangeBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type iDRangeFields struct {
	Min *int64 `json:"min,omitempty"`
	Max *int64 `json:"max,omitempty"`
}

func (b *IDRangeBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &iDRangeFields{}
	}
}

// IDRange constructs an declarative configuration of the IDRange type for use with
// apply.
// Provided as a convenience.
func IDRange() IDRangeBuilder {
	return IDRangeBuilder{fields: &iDRangeFields{}}
}

// SetMin sets the Min field in the declarative configuration to the given value.
func (b IDRangeBuilder) SetMin(value int64) IDRangeBuilder {
	b.ensureInitialized()
	b.fields.Min = &value
	return b
}

// RemoveMin removes the Min field from the declarative configuration.
func (b IDRangeBuilder) RemoveMin() IDRangeBuilder {
	b.ensureInitialized()
	b.fields.Min = nil
	return b
}

// GetMin gets the Min field from the declarative configuration.
func (b IDRangeBuilder) GetMin() (value int64, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Min; v != nil {
		return *v, true
	}
	return value, false
}

// SetMax sets the Max field in the declarative configuration to the given value.
func (b IDRangeBuilder) SetMax(value int64) IDRangeBuilder {
	b.ensureInitialized()
	b.fields.Max = &value
	return b
}

// RemoveMax removes the Max field from the declarative configuration.
func (b IDRangeBuilder) RemoveMax() IDRangeBuilder {
	b.ensureInitialized()
	b.fields.Max = nil
	return b
}

// GetMax gets the Max field from the declarative configuration.
func (b IDRangeBuilder) GetMax() (value int64, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Max; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts IDRangeBuilder to unstructured.
func (b *IDRangeBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to IDRangeBuilder, replacing the contents
// of IDRangeBuilder.
func (b *IDRangeBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &iDRangeFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals IDRangeBuilder to JSON.
func (b *IDRangeBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into IDRangeBuilder, replacing the contents of
// IDRangeBuilder.
func (b *IDRangeBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// IDRangeList represents a list of IDRangeBuilder.
// Provided as a convenience.
type IDRangeList []IDRangeBuilder

// IDRangeList represents a map of IDRangeBuilder.
// Provided as a convenience.
type IDRangeMap map[string]IDRangeBuilder

func (b *IDRangeBuilder) preMarshal() {
}
func (b *IDRangeBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// AllowedFlexVolumeBuilder represents an declarative configuration of the AllowedFlexVolume type for use
// with apply.
type AllowedFlexVolumeBuilder struct {
	fields *allowedFlexVolumeFields
}

// allowedFlexVolumeFields is used by AllowedFlexVolumeBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in AllowedFlexVolumeBuilder before marshalling, and
// are copied out to the builder type in AllowedFlexVolumeBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type allowedFlexVolumeFields struct {
	Driver *string `json:"driver,omitempty"`
}

func (b *AllowedFlexVolumeBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &allowedFlexVolumeFields{}
	}
}

// AllowedFlexVolume constructs an declarative configuration of the AllowedFlexVolume type for use with
// apply.
// Provided as a convenience.
func AllowedFlexVolume() AllowedFlexVolumeBuilder {
	return AllowedFlexVolumeBuilder{fields: &allowedFlexVolumeFields{}}
}

// SetDriver sets the Driver field in the declarative configuration to the given value.
func (b AllowedFlexVolumeBuilder) SetDriver(value string) AllowedFlexVolumeBuilder {
	b.ensureInitialized()
	b.fields.Driver = &value
	return b
}

// RemoveDriver removes the Driver field from the declarative configuration.
func (b AllowedFlexVolumeBuilder) RemoveDriver() AllowedFlexVolumeBuilder {
	b.ensureInitialized()
	b.fields.Driver = nil
	return b
}

// GetDriver gets the Driver field from the declarative configuration.
func (b AllowedFlexVolumeBuilder) GetDriver() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Driver; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts AllowedFlexVolumeBuilder to unstructured.
func (b *AllowedFlexVolumeBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to AllowedFlexVolumeBuilder, replacing the contents
// of AllowedFlexVolumeBuilder.
func (b *AllowedFlexVolumeBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &allowedFlexVolumeFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals AllowedFlexVolumeBuilder to JSON.
func (b *AllowedFlexVolumeBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into AllowedFlexVolumeBuilder, replacing the contents of
// AllowedFlexVolumeBuilder.
func (b *AllowedFlexVolumeBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// AllowedFlexVolumeList represents a list of AllowedFlexVolumeBuilder.
// Provided as a convenience.
type AllowedFlexVolumeList []AllowedFlexVolumeBuilder

// AllowedFlexVolumeList represents a map of AllowedFlexVolumeBuilder.
// Provided as a convenience.
type AllowedFlexVolumeMap map[string]AllowedFlexVolumeBuilder

func (b *AllowedFlexVolumeBuilder) preMarshal() {
}
func (b *AllowedFlexVolumeBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// VolumeNodeResourcesBuilder represents an declarative configuration of the VolumeNodeResources type for use
// with apply.
type VolumeNodeResourcesBuilder struct {
	fields *volumeNodeResourcesFields
}

// volumeNodeResourcesFields is used by VolumeNodeResourcesBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in VolumeNodeResourcesBuilder before marshalling, and
// are copied out to the builder type in VolumeNodeResourcesBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type volumeNodeResourcesFields struct {
	Count *int32 `json:"count,omitempty"`
}

func (b *VolumeNodeResourcesBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &volumeNodeResourcesFields{}
	}
}

// VolumeNodeResources constructs an declarative configuration of the VolumeNodeResources type for use with
// apply.
// Provided as a convenience.
func VolumeNodeResources() VolumeNodeResourcesBuilder {
	return VolumeNodeResourcesBuilder{fields: &volumeNodeResourcesFields{}}
}

// SetCount sets the Count field in the declarative configuration to the given value.
func (b VolumeNodeResourcesBuilder) SetCount(value int32) VolumeNodeResourcesBuilder {
	b.ensureInitialized()
	b.fields.Count = &value
	return b
}

// RemoveCount removes the Count field from the declarative configuration.
func (b VolumeNodeResourcesBuilder) RemoveCount() VolumeNodeResourcesBuilder {
	b.ensureInitialized()
	b.fields.Count = nil
	return b
}

// GetCount gets the Count field from the declarative configuration.
func (b VolumeNodeResourcesBuilder) GetCount() (value int32, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Count; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts VolumeNodeResourcesBuilder to unstructured.
func (b *VolumeNodeResourcesBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to VolumeNodeResourcesBuilder, replacing the contents
// of VolumeNodeResourcesBuilder.
func (b *VolumeNodeResourcesBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &volumeNodeResourcesFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals VolumeNodeResourcesBuilder to JSON.
func (b *VolumeNodeResourcesBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into VolumeNodeResourcesBuilder, replacing the contents of
// VolumeNodeResourcesBuilder.
func (b *VolumeNodeResourcesBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// VolumeNodeResourcesList represents a list of VolumeNodeResourcesBuilder.
// Provided as a convenience.
type VolumeNodeResourcesList []VolumeNodeResourcesBuilder

// VolumeNodeResourcesList represents a map of VolumeNodeResourcesBuilder.
// Provided as a convenience.
type VolumeNodeResourcesMap map[string]VolumeNodeResourcesBuilder

func (b *VolumeNodeResourcesBuilder) preMarshal() {
}
func (b *VolumeNodeResourcesBuilder) postUnmarshal() {
}

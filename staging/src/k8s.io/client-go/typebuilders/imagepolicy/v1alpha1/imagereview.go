/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1alpha1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// ImageReviewBuilder represents an declarative configuration of the ImageReview type for use
// with apply.
type ImageReviewBuilder struct {
	typeMeta v1.TypeMetaBuilder // inlined type
	fields   *imageReviewFields
}

// imageReviewFields is used by ImageReviewBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ImageReviewBuilder before marshalling, and
// are copied out to the builder type in ImageReviewBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type imageReviewFields struct {
	Kind       *string                   `json:"kind,omitempty"`       // inlined ImageReviewBuilder.typeMeta.Kind field
	APIVersion *string                   `json:"apiVersion,omitempty"` // inlined ImageReviewBuilder.typeMeta.APIVersion field
	ObjectMeta *v1.ObjectMetaBuilder     `json:"metadata,omitempty"`
	Spec       *ImageReviewSpecBuilder   `json:"spec,omitempty"`
	Status     *ImageReviewStatusBuilder `json:"status,omitempty"`
}

func (b *ImageReviewBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &imageReviewFields{}
	}
}

// ImageReview constructs an declarative configuration of the ImageReview type for use with
// apply.
// Provided as a convenience.
func ImageReview() ImageReviewBuilder {
	return ImageReviewBuilder{fields: &imageReviewFields{}}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b ImageReviewBuilder) SetTypeMeta(value v1.TypeMetaBuilder) ImageReviewBuilder {
	b.ensureInitialized()
	b.typeMeta = value
	return b
}

// RemoveTypeMeta removes the TypeMeta field from the declarative configuration.
func (b ImageReviewBuilder) RemoveTypeMeta() ImageReviewBuilder {
	b.ensureInitialized()
	b.typeMeta = v1.TypeMetaBuilder{}
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b ImageReviewBuilder) GetTypeMeta() (value v1.TypeMetaBuilder, ok bool) {
	b.ensureInitialized()
	return b.typeMeta, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b ImageReviewBuilder) SetObjectMeta(value v1.ObjectMetaBuilder) ImageReviewBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = &value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b ImageReviewBuilder) RemoveObjectMeta() ImageReviewBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b ImageReviewBuilder) GetObjectMeta() (value v1.ObjectMetaBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ObjectMeta; v != nil {
		return *v, true
	}
	return value, false
}

// SetSpec sets the Spec field in the declarative configuration to the given value.
func (b ImageReviewBuilder) SetSpec(value ImageReviewSpecBuilder) ImageReviewBuilder {
	b.ensureInitialized()
	b.fields.Spec = &value
	return b
}

// RemoveSpec removes the Spec field from the declarative configuration.
func (b ImageReviewBuilder) RemoveSpec() ImageReviewBuilder {
	b.ensureInitialized()
	b.fields.Spec = nil
	return b
}

// GetSpec gets the Spec field from the declarative configuration.
func (b ImageReviewBuilder) GetSpec() (value ImageReviewSpecBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Spec; v != nil {
		return *v, true
	}
	return value, false
}

// SetStatus sets the Status field in the declarative configuration to the given value.
func (b ImageReviewBuilder) SetStatus(value ImageReviewStatusBuilder) ImageReviewBuilder {
	b.ensureInitialized()
	b.fields.Status = &value
	return b
}

// RemoveStatus removes the Status field from the declarative configuration.
func (b ImageReviewBuilder) RemoveStatus() ImageReviewBuilder {
	b.ensureInitialized()
	b.fields.Status = nil
	return b
}

// GetStatus gets the Status field from the declarative configuration.
func (b ImageReviewBuilder) GetStatus() (value ImageReviewStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Status; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ImageReviewBuilder to unstructured.
func (b *ImageReviewBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ImageReviewBuilder, replacing the contents
// of ImageReviewBuilder.
func (b *ImageReviewBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &imageReviewFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ImageReviewBuilder to JSON.
func (b *ImageReviewBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into ImageReviewBuilder, replacing the contents of
// ImageReviewBuilder.
func (b *ImageReviewBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ImageReviewList represents a list of ImageReviewBuilder.
// Provided as a convenience.
type ImageReviewList []ImageReviewBuilder

// ImageReviewList represents a map of ImageReviewBuilder.
// Provided as a convenience.
type ImageReviewMap map[string]ImageReviewBuilder

func (b *ImageReviewBuilder) preMarshal() {
	if v, ok := b.typeMeta.GetKind(); ok {
		b.fields.Kind = &v
	}
	if v, ok := b.typeMeta.GetAPIVersion(); ok {
		b.fields.APIVersion = &v
	}
}
func (b *ImageReviewBuilder) postUnmarshal() {
	if b.fields.Kind != nil {
		b.typeMeta.SetKind(*b.fields.Kind)
	}
	if b.fields.APIVersion != nil {
		b.typeMeta.SetAPIVersion(*b.fields.APIVersion)
	}
}

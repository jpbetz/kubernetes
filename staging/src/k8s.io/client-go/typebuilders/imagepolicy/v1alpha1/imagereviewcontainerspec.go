/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1alpha1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ImageReviewContainerSpecBuilder represents an declarative configuration of the ImageReviewContainerSpec type for use
// with apply.
type ImageReviewContainerSpecBuilder struct {
	fields *imageReviewContainerSpecFields
}

// imageReviewContainerSpecFields is used by ImageReviewContainerSpecBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ImageReviewContainerSpecBuilder before marshalling, and
// are copied out to the builder type in ImageReviewContainerSpecBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type imageReviewContainerSpecFields struct {
	Image *string `json:"image,omitempty"`
}

func (b *ImageReviewContainerSpecBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &imageReviewContainerSpecFields{}
	}
}

// ImageReviewContainerSpec constructs an declarative configuration of the ImageReviewContainerSpec type for use with
// apply.
// Provided as a convenience.
func ImageReviewContainerSpec() ImageReviewContainerSpecBuilder {
	return ImageReviewContainerSpecBuilder{fields: &imageReviewContainerSpecFields{}}
}

// SetImage sets the Image field in the declarative configuration to the given value.
func (b ImageReviewContainerSpecBuilder) SetImage(value string) ImageReviewContainerSpecBuilder {
	b.ensureInitialized()
	b.fields.Image = &value
	return b
}

// RemoveImage removes the Image field from the declarative configuration.
func (b ImageReviewContainerSpecBuilder) RemoveImage() ImageReviewContainerSpecBuilder {
	b.ensureInitialized()
	b.fields.Image = nil
	return b
}

// GetImage gets the Image field from the declarative configuration.
func (b ImageReviewContainerSpecBuilder) GetImage() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Image; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ImageReviewContainerSpecBuilder to unstructured.
func (b *ImageReviewContainerSpecBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ImageReviewContainerSpecBuilder, replacing the contents
// of ImageReviewContainerSpecBuilder.
func (b *ImageReviewContainerSpecBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &imageReviewContainerSpecFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ImageReviewContainerSpecBuilder to JSON.
func (b *ImageReviewContainerSpecBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ImageReviewContainerSpecBuilder, replacing the contents of
// ImageReviewContainerSpecBuilder.
func (b *ImageReviewContainerSpecBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ImageReviewContainerSpecList represents a list of ImageReviewContainerSpecBuilder.
// Provided as a convenience.
type ImageReviewContainerSpecList []ImageReviewContainerSpecBuilder

// ImageReviewContainerSpecList represents a map of ImageReviewContainerSpecBuilder.
// Provided as a convenience.
type ImageReviewContainerSpecMap map[string]ImageReviewContainerSpecBuilder

func (b *ImageReviewContainerSpecBuilder) preMarshal() {
}
func (b *ImageReviewContainerSpecBuilder) postUnmarshal() {
}

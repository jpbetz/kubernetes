/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// EndpointsBuilder represents an declarative configuration of the Endpoints type for use
// with apply.
type EndpointsBuilder struct {
	typeMeta *v1.TypeMetaBuilder // inlined type
	fields   endpointsFields
}

// endpointsFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in EndpointsBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type endpointsFields struct {
	Kind       *string               `json:"kind,omitempty"`       // inlined EndpointsBuilder.typeMeta.Kind field
	APIVersion *string               `json:"apiVersion,omitempty"` // inlined EndpointsBuilder.typeMeta.APIVersion field
	ObjectMeta *v1.ObjectMetaBuilder `json:"metadata,omitempty"`
	Subsets    *EndpointSubsetList   `json:"subsets,omitempty"`
}

// Endpoints constructs an declarative configuration of the Endpoints type for use with
// apply.
func Endpoints() *EndpointsBuilder {
	return &EndpointsBuilder{}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b *EndpointsBuilder) SetTypeMeta(value *v1.TypeMetaBuilder) *EndpointsBuilder {
	b.typeMeta = value
	return b
}

// RemoveTypeMeta removes the TypeMeta field from the declarative configuration.
func (b *EndpointsBuilder) RemoveTypeMeta() *EndpointsBuilder {
	b.typeMeta = nil
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b *EndpointsBuilder) GetTypeMeta() (value *v1.TypeMetaBuilder, ok bool) {
	return b.typeMeta, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b *EndpointsBuilder) SetObjectMeta(value *v1.ObjectMetaBuilder) *EndpointsBuilder {
	b.fields.ObjectMeta = value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b *EndpointsBuilder) RemoveObjectMeta() *EndpointsBuilder {
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b *EndpointsBuilder) GetObjectMeta() (value *v1.ObjectMetaBuilder, ok bool) {
	return b.fields.ObjectMeta, b.fields.ObjectMeta != nil
}

// SetSubsets sets the Subsets field in the declarative configuration to the given value.
func (b *EndpointsBuilder) SetSubsets(value EndpointSubsetList) *EndpointsBuilder {
	b.fields.Subsets = &value
	return b
}

// RemoveSubsets removes the Subsets field from the declarative configuration.
func (b *EndpointsBuilder) RemoveSubsets() *EndpointsBuilder {
	b.fields.Subsets = nil
	return b
}

// GetSubsets gets the Subsets field from the declarative configuration.
func (b *EndpointsBuilder) GetSubsets() (value EndpointSubsetList, ok bool) {
	if v := b.fields.Subsets; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts EndpointsBuilder to unstructured.
func (b *EndpointsBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to EndpointsBuilder, replacing the contents
// of EndpointsBuilder.
func (b *EndpointsBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &endpointsFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals EndpointsBuilder to JSON.
func (b *EndpointsBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into EndpointsBuilder, replacing the contents of
// EndpointsBuilder.
func (b *EndpointsBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// EndpointsList represents a list of EndpointsBuilder.
type EndpointsList []*EndpointsBuilder

// EndpointsList represents a map of EndpointsBuilder.
type EndpointsMap map[string]EndpointsBuilder

func (b *EndpointsBuilder) preMarshal() {
	if b.typeMeta != nil {
		if v, ok := b.typeMeta.GetKind(); ok {
			b.fields.Kind = &v
		}
		if v, ok := b.typeMeta.GetAPIVersion(); ok {
			b.fields.APIVersion = &v
		}
	}
}
func (b *EndpointsBuilder) postUnmarshal() {
	if b.typeMeta == nil {
		b.typeMeta = &v1.TypeMetaBuilder{}
	}
	if b.fields.Kind != nil {
		b.typeMeta.SetKind(*b.fields.Kind)
	}
	if b.fields.APIVersion != nil {
		b.typeMeta.SetAPIVersion(*b.fields.APIVersion)
	}
}

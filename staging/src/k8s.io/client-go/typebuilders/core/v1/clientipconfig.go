/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ClientIPConfigBuilder represents an declarative configuration of the ClientIPConfig type for use
// with apply.
type ClientIPConfigBuilder struct {
	fields clientIPConfigFields
}

// clientIPConfigFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in ClientIPConfigBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type clientIPConfigFields struct {
	TimeoutSeconds *int32 `json:"timeoutSeconds,omitempty"`
}

// ClientIPConfig constructs an declarative configuration of the ClientIPConfig type for use with
// apply.
func ClientIPConfig() *ClientIPConfigBuilder {
	return &ClientIPConfigBuilder{}
}

// SetTimeoutSeconds sets the TimeoutSeconds field in the declarative configuration to the given value.
func (b *ClientIPConfigBuilder) SetTimeoutSeconds(value int32) *ClientIPConfigBuilder {
	b.fields.TimeoutSeconds = &value
	return b
}

// RemoveTimeoutSeconds removes the TimeoutSeconds field from the declarative configuration.
func (b *ClientIPConfigBuilder) RemoveTimeoutSeconds() *ClientIPConfigBuilder {
	b.fields.TimeoutSeconds = nil
	return b
}

// GetTimeoutSeconds gets the TimeoutSeconds field from the declarative configuration.
func (b *ClientIPConfigBuilder) GetTimeoutSeconds() (value int32, ok bool) {
	if v := b.fields.TimeoutSeconds; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ClientIPConfigBuilder to unstructured.
func (b *ClientIPConfigBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ClientIPConfigBuilder, replacing the contents
// of ClientIPConfigBuilder.
func (b *ClientIPConfigBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &clientIPConfigFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ClientIPConfigBuilder to JSON.
func (b *ClientIPConfigBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ClientIPConfigBuilder, replacing the contents of
// ClientIPConfigBuilder.
func (b *ClientIPConfigBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ClientIPConfigList represents a list of ClientIPConfigBuilder.
type ClientIPConfigList []*ClientIPConfigBuilder

// ClientIPConfigList represents a map of ClientIPConfigBuilder.
type ClientIPConfigMap map[string]ClientIPConfigBuilder

func (b *ClientIPConfigBuilder) preMarshal() {
}
func (b *ClientIPConfigBuilder) postUnmarshal() {
}

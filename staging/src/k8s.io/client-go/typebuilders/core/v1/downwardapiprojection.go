/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DownwardAPIProjectionBuilder represents an declarative configuration of the DownwardAPIProjection type for use
// with apply.
type DownwardAPIProjectionBuilder struct {
	fields *downwardAPIProjectionFields
}

// downwardAPIProjectionFields is used by DownwardAPIProjectionBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in DownwardAPIProjectionBuilder before marshalling, and
// are copied out to the builder type in DownwardAPIProjectionBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type downwardAPIProjectionFields struct {
	Items *DownwardAPIVolumeFileList `json:"items,omitempty"`
}

func (b *DownwardAPIProjectionBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &downwardAPIProjectionFields{}
	}
}

// DownwardAPIProjection constructs an declarative configuration of the DownwardAPIProjection type for use with
// apply.
// Provided as a convenience.
func DownwardAPIProjection() DownwardAPIProjectionBuilder {
	return DownwardAPIProjectionBuilder{fields: &downwardAPIProjectionFields{}}
}

// SetItems sets the Items field in the declarative configuration to the given value.
func (b DownwardAPIProjectionBuilder) SetItems(value DownwardAPIVolumeFileList) DownwardAPIProjectionBuilder {
	b.ensureInitialized()
	b.fields.Items = &value
	return b
}

// RemoveItems removes the Items field from the declarative configuration.
func (b DownwardAPIProjectionBuilder) RemoveItems() DownwardAPIProjectionBuilder {
	b.ensureInitialized()
	b.fields.Items = nil
	return b
}

// GetItems gets the Items field from the declarative configuration.
func (b DownwardAPIProjectionBuilder) GetItems() (value DownwardAPIVolumeFileList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Items; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts DownwardAPIProjectionBuilder to unstructured.
func (b *DownwardAPIProjectionBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to DownwardAPIProjectionBuilder, replacing the contents
// of DownwardAPIProjectionBuilder.
func (b *DownwardAPIProjectionBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &downwardAPIProjectionFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals DownwardAPIProjectionBuilder to JSON.
func (b *DownwardAPIProjectionBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into DownwardAPIProjectionBuilder, replacing the contents of
// DownwardAPIProjectionBuilder.
func (b *DownwardAPIProjectionBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// DownwardAPIProjectionList represents a list of DownwardAPIProjectionBuilder.
// Provided as a convenience.
type DownwardAPIProjectionList []DownwardAPIProjectionBuilder

// DownwardAPIProjectionList represents a map of DownwardAPIProjectionBuilder.
// Provided as a convenience.
type DownwardAPIProjectionMap map[string]DownwardAPIProjectionBuilder

func (b *DownwardAPIProjectionBuilder) preMarshal() {
}
func (b *DownwardAPIProjectionBuilder) postUnmarshal() {
}

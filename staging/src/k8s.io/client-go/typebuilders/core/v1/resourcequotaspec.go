/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ResourceQuotaSpecBuilder represents an declarative configuration of the ResourceQuotaSpec type for use
// with apply.
type ResourceQuotaSpecBuilder struct {
	fields resourceQuotaSpecFields
}

// resourceQuotaSpecFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in ResourceQuotaSpecBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type resourceQuotaSpecFields struct {
	Hard          *v1.ResourceList         `json:"hard,omitempty"`
	Scopes        *[]v1.ResourceQuotaScope `json:"scopes,omitempty"`
	ScopeSelector *ScopeSelectorBuilder    `json:"scopeSelector,omitempty"`
}

// ResourceQuotaSpec constructs an declarative configuration of the ResourceQuotaSpec type for use with
// apply.
func ResourceQuotaSpec() *ResourceQuotaSpecBuilder {
	return &ResourceQuotaSpecBuilder{}
}

// SetHard sets the Hard field in the declarative configuration to the given value.
func (b *ResourceQuotaSpecBuilder) SetHard(value v1.ResourceList) *ResourceQuotaSpecBuilder {
	b.fields.Hard = &value
	return b
}

// RemoveHard removes the Hard field from the declarative configuration.
func (b *ResourceQuotaSpecBuilder) RemoveHard() *ResourceQuotaSpecBuilder {
	b.fields.Hard = nil
	return b
}

// GetHard gets the Hard field from the declarative configuration.
func (b *ResourceQuotaSpecBuilder) GetHard() (value v1.ResourceList, ok bool) {
	if v := b.fields.Hard; v != nil {
		return *v, true
	}
	return value, false
}

// SetScopes sets the Scopes field in the declarative configuration to the given value.
func (b *ResourceQuotaSpecBuilder) SetScopes(value []v1.ResourceQuotaScope) *ResourceQuotaSpecBuilder {
	b.fields.Scopes = &value
	return b
}

// RemoveScopes removes the Scopes field from the declarative configuration.
func (b *ResourceQuotaSpecBuilder) RemoveScopes() *ResourceQuotaSpecBuilder {
	b.fields.Scopes = nil
	return b
}

// GetScopes gets the Scopes field from the declarative configuration.
func (b *ResourceQuotaSpecBuilder) GetScopes() (value []v1.ResourceQuotaScope, ok bool) {
	if v := b.fields.Scopes; v != nil {
		return *v, true
	}
	return value, false
}

// SetScopeSelector sets the ScopeSelector field in the declarative configuration to the given value.
func (b *ResourceQuotaSpecBuilder) SetScopeSelector(value *ScopeSelectorBuilder) *ResourceQuotaSpecBuilder {
	b.fields.ScopeSelector = value
	return b
}

// RemoveScopeSelector removes the ScopeSelector field from the declarative configuration.
func (b *ResourceQuotaSpecBuilder) RemoveScopeSelector() *ResourceQuotaSpecBuilder {
	b.fields.ScopeSelector = nil
	return b
}

// GetScopeSelector gets the ScopeSelector field from the declarative configuration.
func (b *ResourceQuotaSpecBuilder) GetScopeSelector() (value *ScopeSelectorBuilder, ok bool) {
	return b.fields.ScopeSelector, b.fields.ScopeSelector != nil
}

// ToUnstructured converts ResourceQuotaSpecBuilder to unstructured.
func (b *ResourceQuotaSpecBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ResourceQuotaSpecBuilder, replacing the contents
// of ResourceQuotaSpecBuilder.
func (b *ResourceQuotaSpecBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &resourceQuotaSpecFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ResourceQuotaSpecBuilder to JSON.
func (b *ResourceQuotaSpecBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ResourceQuotaSpecBuilder, replacing the contents of
// ResourceQuotaSpecBuilder.
func (b *ResourceQuotaSpecBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ResourceQuotaSpecList represents a list of ResourceQuotaSpecBuilder.
type ResourceQuotaSpecList []*ResourceQuotaSpecBuilder

// ResourceQuotaSpecList represents a map of ResourceQuotaSpecBuilder.
type ResourceQuotaSpecMap map[string]ResourceQuotaSpecBuilder

func (b *ResourceQuotaSpecBuilder) preMarshal() {
}
func (b *ResourceQuotaSpecBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// TypedLocalObjectReferenceBuilder represents an declarative configuration of the TypedLocalObjectReference type for use
// with apply.
type TypedLocalObjectReferenceBuilder struct {
	fields *typedLocalObjectReferenceFields
}

// typedLocalObjectReferenceFields is used by TypedLocalObjectReferenceBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in TypedLocalObjectReferenceBuilder before marshalling, and
// are copied out to the builder type in TypedLocalObjectReferenceBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type typedLocalObjectReferenceFields struct {
	APIGroup *string `json:"apiGroup,omitempty"`
	Kind     *string `json:"kind,omitempty"`
	Name     *string `json:"name,omitempty"`
}

func (b *TypedLocalObjectReferenceBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &typedLocalObjectReferenceFields{}
	}
}

// TypedLocalObjectReference constructs an declarative configuration of the TypedLocalObjectReference type for use with
// apply.
// Provided as a convenience.
func TypedLocalObjectReference() TypedLocalObjectReferenceBuilder {
	return TypedLocalObjectReferenceBuilder{fields: &typedLocalObjectReferenceFields{}}
}

// SetAPIGroup sets the APIGroup field in the declarative configuration to the given value.
func (b TypedLocalObjectReferenceBuilder) SetAPIGroup(value string) TypedLocalObjectReferenceBuilder {
	b.ensureInitialized()
	b.fields.APIGroup = &value
	return b
}

// RemoveAPIGroup removes the APIGroup field from the declarative configuration.
func (b TypedLocalObjectReferenceBuilder) RemoveAPIGroup() TypedLocalObjectReferenceBuilder {
	b.ensureInitialized()
	b.fields.APIGroup = nil
	return b
}

// GetAPIGroup gets the APIGroup field from the declarative configuration.
func (b TypedLocalObjectReferenceBuilder) GetAPIGroup() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.APIGroup; v != nil {
		return *v, true
	}
	return value, false
}

// SetKind sets the Kind field in the declarative configuration to the given value.
func (b TypedLocalObjectReferenceBuilder) SetKind(value string) TypedLocalObjectReferenceBuilder {
	b.ensureInitialized()
	b.fields.Kind = &value
	return b
}

// RemoveKind removes the Kind field from the declarative configuration.
func (b TypedLocalObjectReferenceBuilder) RemoveKind() TypedLocalObjectReferenceBuilder {
	b.ensureInitialized()
	b.fields.Kind = nil
	return b
}

// GetKind gets the Kind field from the declarative configuration.
func (b TypedLocalObjectReferenceBuilder) GetKind() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Kind; v != nil {
		return *v, true
	}
	return value, false
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b TypedLocalObjectReferenceBuilder) SetName(value string) TypedLocalObjectReferenceBuilder {
	b.ensureInitialized()
	b.fields.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b TypedLocalObjectReferenceBuilder) RemoveName() TypedLocalObjectReferenceBuilder {
	b.ensureInitialized()
	b.fields.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b TypedLocalObjectReferenceBuilder) GetName() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Name; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts TypedLocalObjectReferenceBuilder to unstructured.
func (b *TypedLocalObjectReferenceBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to TypedLocalObjectReferenceBuilder, replacing the contents
// of TypedLocalObjectReferenceBuilder.
func (b *TypedLocalObjectReferenceBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &typedLocalObjectReferenceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals TypedLocalObjectReferenceBuilder to JSON.
func (b *TypedLocalObjectReferenceBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into TypedLocalObjectReferenceBuilder, replacing the contents of
// TypedLocalObjectReferenceBuilder.
func (b *TypedLocalObjectReferenceBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// TypedLocalObjectReferenceList represents a list of TypedLocalObjectReferenceBuilder.
// Provided as a convenience.
type TypedLocalObjectReferenceList []TypedLocalObjectReferenceBuilder

// TypedLocalObjectReferenceList represents a map of TypedLocalObjectReferenceBuilder.
// Provided as a convenience.
type TypedLocalObjectReferenceMap map[string]TypedLocalObjectReferenceBuilder

func (b *TypedLocalObjectReferenceBuilder) preMarshal() {
}
func (b *TypedLocalObjectReferenceBuilder) postUnmarshal() {
}

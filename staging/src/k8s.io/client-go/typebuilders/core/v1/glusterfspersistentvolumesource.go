/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// GlusterfsPersistentVolumeSourceBuilder represents an declarative configuration of the GlusterfsPersistentVolumeSource type for use
// with apply.
type GlusterfsPersistentVolumeSourceBuilder struct {
	fields *glusterfsPersistentVolumeSourceFields
}

// glusterfsPersistentVolumeSourceFields is used by GlusterfsPersistentVolumeSourceBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in GlusterfsPersistentVolumeSourceBuilder before marshalling, and
// are copied out to the builder type in GlusterfsPersistentVolumeSourceBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type glusterfsPersistentVolumeSourceFields struct {
	EndpointsName      *string `json:"endpoints,omitempty"`
	Path               *string `json:"path,omitempty"`
	ReadOnly           *bool   `json:"readOnly,omitempty"`
	EndpointsNamespace *string `json:"endpointsNamespace,omitempty"`
}

func (b *GlusterfsPersistentVolumeSourceBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &glusterfsPersistentVolumeSourceFields{}
	}
}

// GlusterfsPersistentVolumeSource constructs an declarative configuration of the GlusterfsPersistentVolumeSource type for use with
// apply.
// Provided as a convenience.
func GlusterfsPersistentVolumeSource() GlusterfsPersistentVolumeSourceBuilder {
	return GlusterfsPersistentVolumeSourceBuilder{fields: &glusterfsPersistentVolumeSourceFields{}}
}

// SetEndpointsName sets the EndpointsName field in the declarative configuration to the given value.
func (b GlusterfsPersistentVolumeSourceBuilder) SetEndpointsName(value string) GlusterfsPersistentVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.EndpointsName = &value
	return b
}

// RemoveEndpointsName removes the EndpointsName field from the declarative configuration.
func (b GlusterfsPersistentVolumeSourceBuilder) RemoveEndpointsName() GlusterfsPersistentVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.EndpointsName = nil
	return b
}

// GetEndpointsName gets the EndpointsName field from the declarative configuration.
func (b GlusterfsPersistentVolumeSourceBuilder) GetEndpointsName() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.EndpointsName; v != nil {
		return *v, true
	}
	return value, false
}

// SetPath sets the Path field in the declarative configuration to the given value.
func (b GlusterfsPersistentVolumeSourceBuilder) SetPath(value string) GlusterfsPersistentVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.Path = &value
	return b
}

// RemovePath removes the Path field from the declarative configuration.
func (b GlusterfsPersistentVolumeSourceBuilder) RemovePath() GlusterfsPersistentVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.Path = nil
	return b
}

// GetPath gets the Path field from the declarative configuration.
func (b GlusterfsPersistentVolumeSourceBuilder) GetPath() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Path; v != nil {
		return *v, true
	}
	return value, false
}

// SetReadOnly sets the ReadOnly field in the declarative configuration to the given value.
func (b GlusterfsPersistentVolumeSourceBuilder) SetReadOnly(value bool) GlusterfsPersistentVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.ReadOnly = &value
	return b
}

// RemoveReadOnly removes the ReadOnly field from the declarative configuration.
func (b GlusterfsPersistentVolumeSourceBuilder) RemoveReadOnly() GlusterfsPersistentVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.ReadOnly = nil
	return b
}

// GetReadOnly gets the ReadOnly field from the declarative configuration.
func (b GlusterfsPersistentVolumeSourceBuilder) GetReadOnly() (value bool, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ReadOnly; v != nil {
		return *v, true
	}
	return value, false
}

// SetEndpointsNamespace sets the EndpointsNamespace field in the declarative configuration to the given value.
func (b GlusterfsPersistentVolumeSourceBuilder) SetEndpointsNamespace(value string) GlusterfsPersistentVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.EndpointsNamespace = &value
	return b
}

// RemoveEndpointsNamespace removes the EndpointsNamespace field from the declarative configuration.
func (b GlusterfsPersistentVolumeSourceBuilder) RemoveEndpointsNamespace() GlusterfsPersistentVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.EndpointsNamespace = nil
	return b
}

// GetEndpointsNamespace gets the EndpointsNamespace field from the declarative configuration.
func (b GlusterfsPersistentVolumeSourceBuilder) GetEndpointsNamespace() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.EndpointsNamespace; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts GlusterfsPersistentVolumeSourceBuilder to unstructured.
func (b *GlusterfsPersistentVolumeSourceBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to GlusterfsPersistentVolumeSourceBuilder, replacing the contents
// of GlusterfsPersistentVolumeSourceBuilder.
func (b *GlusterfsPersistentVolumeSourceBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &glusterfsPersistentVolumeSourceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals GlusterfsPersistentVolumeSourceBuilder to JSON.
func (b *GlusterfsPersistentVolumeSourceBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into GlusterfsPersistentVolumeSourceBuilder, replacing the contents of
// GlusterfsPersistentVolumeSourceBuilder.
func (b *GlusterfsPersistentVolumeSourceBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// GlusterfsPersistentVolumeSourceList represents a list of GlusterfsPersistentVolumeSourceBuilder.
// Provided as a convenience.
type GlusterfsPersistentVolumeSourceList []GlusterfsPersistentVolumeSourceBuilder

// GlusterfsPersistentVolumeSourceList represents a map of GlusterfsPersistentVolumeSourceBuilder.
// Provided as a convenience.
type GlusterfsPersistentVolumeSourceMap map[string]GlusterfsPersistentVolumeSourceBuilder

func (b *GlusterfsPersistentVolumeSourceBuilder) preMarshal() {
}
func (b *GlusterfsPersistentVolumeSourceBuilder) postUnmarshal() {
}

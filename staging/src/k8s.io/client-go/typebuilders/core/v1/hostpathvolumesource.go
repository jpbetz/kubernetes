/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// HostPathVolumeSourceBuilder represents an declarative configuration of the HostPathVolumeSource type for use
// with apply.
type HostPathVolumeSourceBuilder struct {
	fields hostPathVolumeSourceFields
}

// hostPathVolumeSourceFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in HostPathVolumeSourceBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type hostPathVolumeSourceFields struct {
	Path *string          `json:"path,omitempty"`
	Type *v1.HostPathType `json:"type,omitempty"`
}

// HostPathVolumeSource constructs an declarative configuration of the HostPathVolumeSource type for use with
// apply.
func HostPathVolumeSource() *HostPathVolumeSourceBuilder {
	return &HostPathVolumeSourceBuilder{}
}

// SetPath sets the Path field in the declarative configuration to the given value.
func (b *HostPathVolumeSourceBuilder) SetPath(value string) *HostPathVolumeSourceBuilder {
	b.fields.Path = &value
	return b
}

// RemovePath removes the Path field from the declarative configuration.
func (b *HostPathVolumeSourceBuilder) RemovePath() *HostPathVolumeSourceBuilder {
	b.fields.Path = nil
	return b
}

// GetPath gets the Path field from the declarative configuration.
func (b *HostPathVolumeSourceBuilder) GetPath() (value string, ok bool) {
	if v := b.fields.Path; v != nil {
		return *v, true
	}
	return value, false
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *HostPathVolumeSourceBuilder) SetType(value v1.HostPathType) *HostPathVolumeSourceBuilder {
	b.fields.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b *HostPathVolumeSourceBuilder) RemoveType() *HostPathVolumeSourceBuilder {
	b.fields.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b *HostPathVolumeSourceBuilder) GetType() (value v1.HostPathType, ok bool) {
	if v := b.fields.Type; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts HostPathVolumeSourceBuilder to unstructured.
func (b *HostPathVolumeSourceBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to HostPathVolumeSourceBuilder, replacing the contents
// of HostPathVolumeSourceBuilder.
func (b *HostPathVolumeSourceBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &hostPathVolumeSourceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals HostPathVolumeSourceBuilder to JSON.
func (b *HostPathVolumeSourceBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into HostPathVolumeSourceBuilder, replacing the contents of
// HostPathVolumeSourceBuilder.
func (b *HostPathVolumeSourceBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// HostPathVolumeSourceList represents a list of HostPathVolumeSourceBuilder.
type HostPathVolumeSourceList []*HostPathVolumeSourceBuilder

// HostPathVolumeSourceList represents a map of HostPathVolumeSourceBuilder.
type HostPathVolumeSourceMap map[string]HostPathVolumeSourceBuilder

func (b *HostPathVolumeSourceBuilder) preMarshal() {
}
func (b *HostPathVolumeSourceBuilder) postUnmarshal() {
}

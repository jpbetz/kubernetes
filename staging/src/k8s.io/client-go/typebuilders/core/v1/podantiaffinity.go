/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// PodAntiAffinityBuilder represents an declarative configuration of the PodAntiAffinity type for use
// with apply.
type PodAntiAffinityBuilder struct {
	fields podAntiAffinityFields
}

// podAntiAffinityFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in PodAntiAffinityBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type podAntiAffinityFields struct {
	RequiredDuringSchedulingIgnoredDuringExecution  *PodAffinityTermList         `json:"requiredDuringSchedulingIgnoredDuringExecution,omitempty"`
	PreferredDuringSchedulingIgnoredDuringExecution *WeightedPodAffinityTermList `json:"preferredDuringSchedulingIgnoredDuringExecution,omitempty"`
}

// PodAntiAffinity constructs an declarative configuration of the PodAntiAffinity type for use with
// apply.
func PodAntiAffinity() *PodAntiAffinityBuilder {
	return &PodAntiAffinityBuilder{}
}

// SetRequiredDuringSchedulingIgnoredDuringExecution sets the RequiredDuringSchedulingIgnoredDuringExecution field in the declarative configuration to the given value.
func (b *PodAntiAffinityBuilder) SetRequiredDuringSchedulingIgnoredDuringExecution(value PodAffinityTermList) *PodAntiAffinityBuilder {
	b.fields.RequiredDuringSchedulingIgnoredDuringExecution = &value
	return b
}

// RemoveRequiredDuringSchedulingIgnoredDuringExecution removes the RequiredDuringSchedulingIgnoredDuringExecution field from the declarative configuration.
func (b *PodAntiAffinityBuilder) RemoveRequiredDuringSchedulingIgnoredDuringExecution() *PodAntiAffinityBuilder {
	b.fields.RequiredDuringSchedulingIgnoredDuringExecution = nil
	return b
}

// GetRequiredDuringSchedulingIgnoredDuringExecution gets the RequiredDuringSchedulingIgnoredDuringExecution field from the declarative configuration.
func (b *PodAntiAffinityBuilder) GetRequiredDuringSchedulingIgnoredDuringExecution() (value PodAffinityTermList, ok bool) {
	if v := b.fields.RequiredDuringSchedulingIgnoredDuringExecution; v != nil {
		return *v, true
	}
	return value, false
}

// SetPreferredDuringSchedulingIgnoredDuringExecution sets the PreferredDuringSchedulingIgnoredDuringExecution field in the declarative configuration to the given value.
func (b *PodAntiAffinityBuilder) SetPreferredDuringSchedulingIgnoredDuringExecution(value WeightedPodAffinityTermList) *PodAntiAffinityBuilder {
	b.fields.PreferredDuringSchedulingIgnoredDuringExecution = &value
	return b
}

// RemovePreferredDuringSchedulingIgnoredDuringExecution removes the PreferredDuringSchedulingIgnoredDuringExecution field from the declarative configuration.
func (b *PodAntiAffinityBuilder) RemovePreferredDuringSchedulingIgnoredDuringExecution() *PodAntiAffinityBuilder {
	b.fields.PreferredDuringSchedulingIgnoredDuringExecution = nil
	return b
}

// GetPreferredDuringSchedulingIgnoredDuringExecution gets the PreferredDuringSchedulingIgnoredDuringExecution field from the declarative configuration.
func (b *PodAntiAffinityBuilder) GetPreferredDuringSchedulingIgnoredDuringExecution() (value WeightedPodAffinityTermList, ok bool) {
	if v := b.fields.PreferredDuringSchedulingIgnoredDuringExecution; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts PodAntiAffinityBuilder to unstructured.
func (b *PodAntiAffinityBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to PodAntiAffinityBuilder, replacing the contents
// of PodAntiAffinityBuilder.
func (b *PodAntiAffinityBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &podAntiAffinityFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals PodAntiAffinityBuilder to JSON.
func (b *PodAntiAffinityBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into PodAntiAffinityBuilder, replacing the contents of
// PodAntiAffinityBuilder.
func (b *PodAntiAffinityBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// PodAntiAffinityList represents a list of PodAntiAffinityBuilder.
type PodAntiAffinityList []*PodAntiAffinityBuilder

// PodAntiAffinityList represents a map of PodAntiAffinityBuilder.
type PodAntiAffinityMap map[string]PodAntiAffinityBuilder

func (b *PodAntiAffinityBuilder) preMarshal() {
}
func (b *PodAntiAffinityBuilder) postUnmarshal() {
}

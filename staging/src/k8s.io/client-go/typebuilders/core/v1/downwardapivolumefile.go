/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DownwardAPIVolumeFileBuilder represents an declarative configuration of the DownwardAPIVolumeFile type for use
// with apply.
type DownwardAPIVolumeFileBuilder struct {
	fields *downwardAPIVolumeFileFields
}

// downwardAPIVolumeFileFields is used by DownwardAPIVolumeFileBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in DownwardAPIVolumeFileBuilder before marshalling, and
// are copied out to the builder type in DownwardAPIVolumeFileBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type downwardAPIVolumeFileFields struct {
	Path             *string                       `json:"path,omitempty"`
	FieldRef         *ObjectFieldSelectorBuilder   `json:"fieldRef,omitempty"`
	ResourceFieldRef *ResourceFieldSelectorBuilder `json:"resourceFieldRef,omitempty"`
	Mode             *int32                        `json:"mode,omitempty"`
}

func (b *DownwardAPIVolumeFileBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &downwardAPIVolumeFileFields{}
	}
}

// DownwardAPIVolumeFile constructs an declarative configuration of the DownwardAPIVolumeFile type for use with
// apply.
// Provided as a convenience.
func DownwardAPIVolumeFile() DownwardAPIVolumeFileBuilder {
	return DownwardAPIVolumeFileBuilder{fields: &downwardAPIVolumeFileFields{}}
}

// SetPath sets the Path field in the declarative configuration to the given value.
func (b DownwardAPIVolumeFileBuilder) SetPath(value string) DownwardAPIVolumeFileBuilder {
	b.ensureInitialized()
	b.fields.Path = &value
	return b
}

// RemovePath removes the Path field from the declarative configuration.
func (b DownwardAPIVolumeFileBuilder) RemovePath() DownwardAPIVolumeFileBuilder {
	b.ensureInitialized()
	b.fields.Path = nil
	return b
}

// GetPath gets the Path field from the declarative configuration.
func (b DownwardAPIVolumeFileBuilder) GetPath() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Path; v != nil {
		return *v, true
	}
	return value, false
}

// SetFieldRef sets the FieldRef field in the declarative configuration to the given value.
func (b DownwardAPIVolumeFileBuilder) SetFieldRef(value ObjectFieldSelectorBuilder) DownwardAPIVolumeFileBuilder {
	b.ensureInitialized()
	b.fields.FieldRef = &value
	return b
}

// RemoveFieldRef removes the FieldRef field from the declarative configuration.
func (b DownwardAPIVolumeFileBuilder) RemoveFieldRef() DownwardAPIVolumeFileBuilder {
	b.ensureInitialized()
	b.fields.FieldRef = nil
	return b
}

// GetFieldRef gets the FieldRef field from the declarative configuration.
func (b DownwardAPIVolumeFileBuilder) GetFieldRef() (value ObjectFieldSelectorBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.FieldRef; v != nil {
		return *v, true
	}
	return value, false
}

// SetResourceFieldRef sets the ResourceFieldRef field in the declarative configuration to the given value.
func (b DownwardAPIVolumeFileBuilder) SetResourceFieldRef(value ResourceFieldSelectorBuilder) DownwardAPIVolumeFileBuilder {
	b.ensureInitialized()
	b.fields.ResourceFieldRef = &value
	return b
}

// RemoveResourceFieldRef removes the ResourceFieldRef field from the declarative configuration.
func (b DownwardAPIVolumeFileBuilder) RemoveResourceFieldRef() DownwardAPIVolumeFileBuilder {
	b.ensureInitialized()
	b.fields.ResourceFieldRef = nil
	return b
}

// GetResourceFieldRef gets the ResourceFieldRef field from the declarative configuration.
func (b DownwardAPIVolumeFileBuilder) GetResourceFieldRef() (value ResourceFieldSelectorBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ResourceFieldRef; v != nil {
		return *v, true
	}
	return value, false
}

// SetMode sets the Mode field in the declarative configuration to the given value.
func (b DownwardAPIVolumeFileBuilder) SetMode(value int32) DownwardAPIVolumeFileBuilder {
	b.ensureInitialized()
	b.fields.Mode = &value
	return b
}

// RemoveMode removes the Mode field from the declarative configuration.
func (b DownwardAPIVolumeFileBuilder) RemoveMode() DownwardAPIVolumeFileBuilder {
	b.ensureInitialized()
	b.fields.Mode = nil
	return b
}

// GetMode gets the Mode field from the declarative configuration.
func (b DownwardAPIVolumeFileBuilder) GetMode() (value int32, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Mode; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts DownwardAPIVolumeFileBuilder to unstructured.
func (b *DownwardAPIVolumeFileBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to DownwardAPIVolumeFileBuilder, replacing the contents
// of DownwardAPIVolumeFileBuilder.
func (b *DownwardAPIVolumeFileBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &downwardAPIVolumeFileFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals DownwardAPIVolumeFileBuilder to JSON.
func (b *DownwardAPIVolumeFileBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into DownwardAPIVolumeFileBuilder, replacing the contents of
// DownwardAPIVolumeFileBuilder.
func (b *DownwardAPIVolumeFileBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// DownwardAPIVolumeFileList represents a list of DownwardAPIVolumeFileBuilder.
// Provided as a convenience.
type DownwardAPIVolumeFileList []DownwardAPIVolumeFileBuilder

// DownwardAPIVolumeFileList represents a map of DownwardAPIVolumeFileBuilder.
// Provided as a convenience.
type DownwardAPIVolumeFileMap map[string]DownwardAPIVolumeFileBuilder

func (b *DownwardAPIVolumeFileBuilder) preMarshal() {
}
func (b *DownwardAPIVolumeFileBuilder) postUnmarshal() {
}

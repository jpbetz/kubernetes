/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ServiceAccountTokenProjectionBuilder represents an declarative configuration of the ServiceAccountTokenProjection type for use
// with apply.
type ServiceAccountTokenProjectionBuilder struct {
	fields *serviceAccountTokenProjectionFields
}

// serviceAccountTokenProjectionFields is used by ServiceAccountTokenProjectionBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ServiceAccountTokenProjectionBuilder before marshalling, and
// are copied out to the builder type in ServiceAccountTokenProjectionBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type serviceAccountTokenProjectionFields struct {
	Audience          *string `json:"audience,omitempty"`
	ExpirationSeconds *int64  `json:"expirationSeconds,omitempty"`
	Path              *string `json:"path,omitempty"`
}

func (b *ServiceAccountTokenProjectionBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &serviceAccountTokenProjectionFields{}
	}
}

// ServiceAccountTokenProjection constructs an declarative configuration of the ServiceAccountTokenProjection type for use with
// apply.
// Provided as a convenience.
func ServiceAccountTokenProjection() ServiceAccountTokenProjectionBuilder {
	return ServiceAccountTokenProjectionBuilder{fields: &serviceAccountTokenProjectionFields{}}
}

// SetAudience sets the Audience field in the declarative configuration to the given value.
func (b ServiceAccountTokenProjectionBuilder) SetAudience(value string) ServiceAccountTokenProjectionBuilder {
	b.ensureInitialized()
	b.fields.Audience = &value
	return b
}

// RemoveAudience removes the Audience field from the declarative configuration.
func (b ServiceAccountTokenProjectionBuilder) RemoveAudience() ServiceAccountTokenProjectionBuilder {
	b.ensureInitialized()
	b.fields.Audience = nil
	return b
}

// GetAudience gets the Audience field from the declarative configuration.
func (b ServiceAccountTokenProjectionBuilder) GetAudience() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Audience; v != nil {
		return *v, true
	}
	return value, false
}

// SetExpirationSeconds sets the ExpirationSeconds field in the declarative configuration to the given value.
func (b ServiceAccountTokenProjectionBuilder) SetExpirationSeconds(value int64) ServiceAccountTokenProjectionBuilder {
	b.ensureInitialized()
	b.fields.ExpirationSeconds = &value
	return b
}

// RemoveExpirationSeconds removes the ExpirationSeconds field from the declarative configuration.
func (b ServiceAccountTokenProjectionBuilder) RemoveExpirationSeconds() ServiceAccountTokenProjectionBuilder {
	b.ensureInitialized()
	b.fields.ExpirationSeconds = nil
	return b
}

// GetExpirationSeconds gets the ExpirationSeconds field from the declarative configuration.
func (b ServiceAccountTokenProjectionBuilder) GetExpirationSeconds() (value int64, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ExpirationSeconds; v != nil {
		return *v, true
	}
	return value, false
}

// SetPath sets the Path field in the declarative configuration to the given value.
func (b ServiceAccountTokenProjectionBuilder) SetPath(value string) ServiceAccountTokenProjectionBuilder {
	b.ensureInitialized()
	b.fields.Path = &value
	return b
}

// RemovePath removes the Path field from the declarative configuration.
func (b ServiceAccountTokenProjectionBuilder) RemovePath() ServiceAccountTokenProjectionBuilder {
	b.ensureInitialized()
	b.fields.Path = nil
	return b
}

// GetPath gets the Path field from the declarative configuration.
func (b ServiceAccountTokenProjectionBuilder) GetPath() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Path; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ServiceAccountTokenProjectionBuilder to unstructured.
func (b *ServiceAccountTokenProjectionBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ServiceAccountTokenProjectionBuilder, replacing the contents
// of ServiceAccountTokenProjectionBuilder.
func (b *ServiceAccountTokenProjectionBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &serviceAccountTokenProjectionFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ServiceAccountTokenProjectionBuilder to JSON.
func (b *ServiceAccountTokenProjectionBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ServiceAccountTokenProjectionBuilder, replacing the contents of
// ServiceAccountTokenProjectionBuilder.
func (b *ServiceAccountTokenProjectionBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ServiceAccountTokenProjectionList represents a list of ServiceAccountTokenProjectionBuilder.
// Provided as a convenience.
type ServiceAccountTokenProjectionList []ServiceAccountTokenProjectionBuilder

// ServiceAccountTokenProjectionList represents a map of ServiceAccountTokenProjectionBuilder.
// Provided as a convenience.
type ServiceAccountTokenProjectionMap map[string]ServiceAccountTokenProjectionBuilder

func (b *ServiceAccountTokenProjectionBuilder) preMarshal() {
}
func (b *ServiceAccountTokenProjectionBuilder) postUnmarshal() {
}

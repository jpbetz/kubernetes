/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// LimitRangeItemBuilder represents an declarative configuration of the LimitRangeItem type for use
// with apply.
type LimitRangeItemBuilder struct {
	fields limitRangeItemFields
}

// limitRangeItemFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in LimitRangeItemBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type limitRangeItemFields struct {
	Type                 *v1.LimitType    `json:"type,omitempty"`
	Max                  *v1.ResourceList `json:"max,omitempty"`
	Min                  *v1.ResourceList `json:"min,omitempty"`
	Default              *v1.ResourceList `json:"default,omitempty"`
	DefaultRequest       *v1.ResourceList `json:"defaultRequest,omitempty"`
	MaxLimitRequestRatio *v1.ResourceList `json:"maxLimitRequestRatio,omitempty"`
}

// LimitRangeItem constructs an declarative configuration of the LimitRangeItem type for use with
// apply.
func LimitRangeItem() *LimitRangeItemBuilder {
	return &LimitRangeItemBuilder{}
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *LimitRangeItemBuilder) SetType(value v1.LimitType) *LimitRangeItemBuilder {
	b.fields.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b *LimitRangeItemBuilder) RemoveType() *LimitRangeItemBuilder {
	b.fields.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b *LimitRangeItemBuilder) GetType() (value v1.LimitType, ok bool) {
	if v := b.fields.Type; v != nil {
		return *v, true
	}
	return value, false
}

// SetMax sets the Max field in the declarative configuration to the given value.
func (b *LimitRangeItemBuilder) SetMax(value v1.ResourceList) *LimitRangeItemBuilder {
	b.fields.Max = &value
	return b
}

// RemoveMax removes the Max field from the declarative configuration.
func (b *LimitRangeItemBuilder) RemoveMax() *LimitRangeItemBuilder {
	b.fields.Max = nil
	return b
}

// GetMax gets the Max field from the declarative configuration.
func (b *LimitRangeItemBuilder) GetMax() (value v1.ResourceList, ok bool) {
	if v := b.fields.Max; v != nil {
		return *v, true
	}
	return value, false
}

// SetMin sets the Min field in the declarative configuration to the given value.
func (b *LimitRangeItemBuilder) SetMin(value v1.ResourceList) *LimitRangeItemBuilder {
	b.fields.Min = &value
	return b
}

// RemoveMin removes the Min field from the declarative configuration.
func (b *LimitRangeItemBuilder) RemoveMin() *LimitRangeItemBuilder {
	b.fields.Min = nil
	return b
}

// GetMin gets the Min field from the declarative configuration.
func (b *LimitRangeItemBuilder) GetMin() (value v1.ResourceList, ok bool) {
	if v := b.fields.Min; v != nil {
		return *v, true
	}
	return value, false
}

// SetDefault sets the Default field in the declarative configuration to the given value.
func (b *LimitRangeItemBuilder) SetDefault(value v1.ResourceList) *LimitRangeItemBuilder {
	b.fields.Default = &value
	return b
}

// RemoveDefault removes the Default field from the declarative configuration.
func (b *LimitRangeItemBuilder) RemoveDefault() *LimitRangeItemBuilder {
	b.fields.Default = nil
	return b
}

// GetDefault gets the Default field from the declarative configuration.
func (b *LimitRangeItemBuilder) GetDefault() (value v1.ResourceList, ok bool) {
	if v := b.fields.Default; v != nil {
		return *v, true
	}
	return value, false
}

// SetDefaultRequest sets the DefaultRequest field in the declarative configuration to the given value.
func (b *LimitRangeItemBuilder) SetDefaultRequest(value v1.ResourceList) *LimitRangeItemBuilder {
	b.fields.DefaultRequest = &value
	return b
}

// RemoveDefaultRequest removes the DefaultRequest field from the declarative configuration.
func (b *LimitRangeItemBuilder) RemoveDefaultRequest() *LimitRangeItemBuilder {
	b.fields.DefaultRequest = nil
	return b
}

// GetDefaultRequest gets the DefaultRequest field from the declarative configuration.
func (b *LimitRangeItemBuilder) GetDefaultRequest() (value v1.ResourceList, ok bool) {
	if v := b.fields.DefaultRequest; v != nil {
		return *v, true
	}
	return value, false
}

// SetMaxLimitRequestRatio sets the MaxLimitRequestRatio field in the declarative configuration to the given value.
func (b *LimitRangeItemBuilder) SetMaxLimitRequestRatio(value v1.ResourceList) *LimitRangeItemBuilder {
	b.fields.MaxLimitRequestRatio = &value
	return b
}

// RemoveMaxLimitRequestRatio removes the MaxLimitRequestRatio field from the declarative configuration.
func (b *LimitRangeItemBuilder) RemoveMaxLimitRequestRatio() *LimitRangeItemBuilder {
	b.fields.MaxLimitRequestRatio = nil
	return b
}

// GetMaxLimitRequestRatio gets the MaxLimitRequestRatio field from the declarative configuration.
func (b *LimitRangeItemBuilder) GetMaxLimitRequestRatio() (value v1.ResourceList, ok bool) {
	if v := b.fields.MaxLimitRequestRatio; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts LimitRangeItemBuilder to unstructured.
func (b *LimitRangeItemBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to LimitRangeItemBuilder, replacing the contents
// of LimitRangeItemBuilder.
func (b *LimitRangeItemBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &limitRangeItemFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals LimitRangeItemBuilder to JSON.
func (b *LimitRangeItemBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into LimitRangeItemBuilder, replacing the contents of
// LimitRangeItemBuilder.
func (b *LimitRangeItemBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// LimitRangeItemList represents a list of LimitRangeItemBuilder.
type LimitRangeItemList []*LimitRangeItemBuilder

// LimitRangeItemList represents a map of LimitRangeItemBuilder.
type LimitRangeItemMap map[string]LimitRangeItemBuilder

func (b *LimitRangeItemBuilder) preMarshal() {
}
func (b *LimitRangeItemBuilder) postUnmarshal() {
}

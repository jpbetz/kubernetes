/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// WeightedPodAffinityTermBuilder represents an declarative configuration of the WeightedPodAffinityTerm type for use
// with apply.
type WeightedPodAffinityTermBuilder struct {
	fields weightedPodAffinityTermFields
}

// weightedPodAffinityTermFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in WeightedPodAffinityTermBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type weightedPodAffinityTermFields struct {
	Weight          *int32                  `json:"weight,omitempty"`
	PodAffinityTerm *PodAffinityTermBuilder `json:"podAffinityTerm,omitempty"`
}

// WeightedPodAffinityTerm constructs an declarative configuration of the WeightedPodAffinityTerm type for use with
// apply.
func WeightedPodAffinityTerm() *WeightedPodAffinityTermBuilder {
	return &WeightedPodAffinityTermBuilder{}
}

// SetWeight sets the Weight field in the declarative configuration to the given value.
func (b *WeightedPodAffinityTermBuilder) SetWeight(value int32) *WeightedPodAffinityTermBuilder {
	b.fields.Weight = &value
	return b
}

// RemoveWeight removes the Weight field from the declarative configuration.
func (b *WeightedPodAffinityTermBuilder) RemoveWeight() *WeightedPodAffinityTermBuilder {
	b.fields.Weight = nil
	return b
}

// GetWeight gets the Weight field from the declarative configuration.
func (b *WeightedPodAffinityTermBuilder) GetWeight() (value int32, ok bool) {
	if v := b.fields.Weight; v != nil {
		return *v, true
	}
	return value, false
}

// SetPodAffinityTerm sets the PodAffinityTerm field in the declarative configuration to the given value.
func (b *WeightedPodAffinityTermBuilder) SetPodAffinityTerm(value *PodAffinityTermBuilder) *WeightedPodAffinityTermBuilder {
	b.fields.PodAffinityTerm = value
	return b
}

// RemovePodAffinityTerm removes the PodAffinityTerm field from the declarative configuration.
func (b *WeightedPodAffinityTermBuilder) RemovePodAffinityTerm() *WeightedPodAffinityTermBuilder {
	b.fields.PodAffinityTerm = nil
	return b
}

// GetPodAffinityTerm gets the PodAffinityTerm field from the declarative configuration.
func (b *WeightedPodAffinityTermBuilder) GetPodAffinityTerm() (value *PodAffinityTermBuilder, ok bool) {
	return b.fields.PodAffinityTerm, b.fields.PodAffinityTerm != nil
}

// ToUnstructured converts WeightedPodAffinityTermBuilder to unstructured.
func (b *WeightedPodAffinityTermBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to WeightedPodAffinityTermBuilder, replacing the contents
// of WeightedPodAffinityTermBuilder.
func (b *WeightedPodAffinityTermBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &weightedPodAffinityTermFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals WeightedPodAffinityTermBuilder to JSON.
func (b *WeightedPodAffinityTermBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into WeightedPodAffinityTermBuilder, replacing the contents of
// WeightedPodAffinityTermBuilder.
func (b *WeightedPodAffinityTermBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// WeightedPodAffinityTermList represents a list of WeightedPodAffinityTermBuilder.
type WeightedPodAffinityTermList []*WeightedPodAffinityTermBuilder

// WeightedPodAffinityTermList represents a map of WeightedPodAffinityTermBuilder.
type WeightedPodAffinityTermMap map[string]WeightedPodAffinityTermBuilder

func (b *WeightedPodAffinityTermBuilder) preMarshal() {
}
func (b *WeightedPodAffinityTermBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// HTTPGetActionBuilder represents an declarative configuration of the HTTPGetAction type for use
// with apply.
type HTTPGetActionBuilder struct {
	fields *hTTPGetActionFields
}

// hTTPGetActionFields is used by HTTPGetActionBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in HTTPGetActionBuilder before marshalling, and
// are copied out to the builder type in HTTPGetActionBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type hTTPGetActionFields struct {
	Path        *string             `json:"path,omitempty"`
	Port        *intstr.IntOrString `json:"port,omitempty"`
	Host        *string             `json:"host,omitempty"`
	Scheme      *v1.URIScheme       `json:"scheme,omitempty"`
	HTTPHeaders *HTTPHeaderList     `json:"httpHeaders,omitempty"`
}

func (b *HTTPGetActionBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &hTTPGetActionFields{}
	}
}

// HTTPGetAction constructs an declarative configuration of the HTTPGetAction type for use with
// apply.
// Provided as a convenience.
func HTTPGetAction() HTTPGetActionBuilder {
	return HTTPGetActionBuilder{fields: &hTTPGetActionFields{}}
}

// SetPath sets the Path field in the declarative configuration to the given value.
func (b HTTPGetActionBuilder) SetPath(value string) HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.Path = &value
	return b
}

// RemovePath removes the Path field from the declarative configuration.
func (b HTTPGetActionBuilder) RemovePath() HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.Path = nil
	return b
}

// GetPath gets the Path field from the declarative configuration.
func (b HTTPGetActionBuilder) GetPath() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Path; v != nil {
		return *v, true
	}
	return value, false
}

// SetPort sets the Port field in the declarative configuration to the given value.
func (b HTTPGetActionBuilder) SetPort(value intstr.IntOrString) HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.Port = &value
	return b
}

// RemovePort removes the Port field from the declarative configuration.
func (b HTTPGetActionBuilder) RemovePort() HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.Port = nil
	return b
}

// GetPort gets the Port field from the declarative configuration.
func (b HTTPGetActionBuilder) GetPort() (value intstr.IntOrString, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Port; v != nil {
		return *v, true
	}
	return value, false
}

// SetHost sets the Host field in the declarative configuration to the given value.
func (b HTTPGetActionBuilder) SetHost(value string) HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.Host = &value
	return b
}

// RemoveHost removes the Host field from the declarative configuration.
func (b HTTPGetActionBuilder) RemoveHost() HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.Host = nil
	return b
}

// GetHost gets the Host field from the declarative configuration.
func (b HTTPGetActionBuilder) GetHost() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Host; v != nil {
		return *v, true
	}
	return value, false
}

// SetScheme sets the Scheme field in the declarative configuration to the given value.
func (b HTTPGetActionBuilder) SetScheme(value v1.URIScheme) HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.Scheme = &value
	return b
}

// RemoveScheme removes the Scheme field from the declarative configuration.
func (b HTTPGetActionBuilder) RemoveScheme() HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.Scheme = nil
	return b
}

// GetScheme gets the Scheme field from the declarative configuration.
func (b HTTPGetActionBuilder) GetScheme() (value v1.URIScheme, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Scheme; v != nil {
		return *v, true
	}
	return value, false
}

// SetHTTPHeaders sets the HTTPHeaders field in the declarative configuration to the given value.
func (b HTTPGetActionBuilder) SetHTTPHeaders(value HTTPHeaderList) HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.HTTPHeaders = &value
	return b
}

// RemoveHTTPHeaders removes the HTTPHeaders field from the declarative configuration.
func (b HTTPGetActionBuilder) RemoveHTTPHeaders() HTTPGetActionBuilder {
	b.ensureInitialized()
	b.fields.HTTPHeaders = nil
	return b
}

// GetHTTPHeaders gets the HTTPHeaders field from the declarative configuration.
func (b HTTPGetActionBuilder) GetHTTPHeaders() (value HTTPHeaderList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.HTTPHeaders; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts HTTPGetActionBuilder to unstructured.
func (b *HTTPGetActionBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to HTTPGetActionBuilder, replacing the contents
// of HTTPGetActionBuilder.
func (b *HTTPGetActionBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &hTTPGetActionFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals HTTPGetActionBuilder to JSON.
func (b *HTTPGetActionBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into HTTPGetActionBuilder, replacing the contents of
// HTTPGetActionBuilder.
func (b *HTTPGetActionBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// HTTPGetActionList represents a list of HTTPGetActionBuilder.
// Provided as a convenience.
type HTTPGetActionList []HTTPGetActionBuilder

// HTTPGetActionList represents a map of HTTPGetActionBuilder.
// Provided as a convenience.
type HTTPGetActionMap map[string]HTTPGetActionBuilder

func (b *HTTPGetActionBuilder) preMarshal() {
}
func (b *HTTPGetActionBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// PodReadinessGateBuilder represents an declarative configuration of the PodReadinessGate type for use
// with apply.
type PodReadinessGateBuilder struct {
	fields *podReadinessGateFields
}

// podReadinessGateFields is used by PodReadinessGateBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in PodReadinessGateBuilder before marshalling, and
// are copied out to the builder type in PodReadinessGateBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type podReadinessGateFields struct {
	ConditionType *v1.PodConditionType `json:"conditionType,omitempty"`
}

func (b *PodReadinessGateBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &podReadinessGateFields{}
	}
}

// PodReadinessGate constructs an declarative configuration of the PodReadinessGate type for use with
// apply.
// Provided as a convenience.
func PodReadinessGate() PodReadinessGateBuilder {
	return PodReadinessGateBuilder{fields: &podReadinessGateFields{}}
}

// SetConditionType sets the ConditionType field in the declarative configuration to the given value.
func (b PodReadinessGateBuilder) SetConditionType(value v1.PodConditionType) PodReadinessGateBuilder {
	b.ensureInitialized()
	b.fields.ConditionType = &value
	return b
}

// RemoveConditionType removes the ConditionType field from the declarative configuration.
func (b PodReadinessGateBuilder) RemoveConditionType() PodReadinessGateBuilder {
	b.ensureInitialized()
	b.fields.ConditionType = nil
	return b
}

// GetConditionType gets the ConditionType field from the declarative configuration.
func (b PodReadinessGateBuilder) GetConditionType() (value v1.PodConditionType, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ConditionType; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts PodReadinessGateBuilder to unstructured.
func (b *PodReadinessGateBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to PodReadinessGateBuilder, replacing the contents
// of PodReadinessGateBuilder.
func (b *PodReadinessGateBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &podReadinessGateFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals PodReadinessGateBuilder to JSON.
func (b *PodReadinessGateBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into PodReadinessGateBuilder, replacing the contents of
// PodReadinessGateBuilder.
func (b *PodReadinessGateBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// PodReadinessGateList represents a list of PodReadinessGateBuilder.
// Provided as a convenience.
type PodReadinessGateList []PodReadinessGateBuilder

// PodReadinessGateList represents a map of PodReadinessGateBuilder.
// Provided as a convenience.
type PodReadinessGateMap map[string]PodReadinessGateBuilder

func (b *PodReadinessGateBuilder) preMarshal() {
}
func (b *PodReadinessGateBuilder) postUnmarshal() {
}

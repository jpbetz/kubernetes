/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// TCPSocketActionBuilder represents an declarative configuration of the TCPSocketAction type for use
// with apply.
type TCPSocketActionBuilder struct {
	fields *tCPSocketActionFields
}

// tCPSocketActionFields is used by TCPSocketActionBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in TCPSocketActionBuilder before marshalling, and
// are copied out to the builder type in TCPSocketActionBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type tCPSocketActionFields struct {
	Port *intstr.IntOrString `json:"port,omitempty"`
	Host *string             `json:"host,omitempty"`
}

func (b *TCPSocketActionBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &tCPSocketActionFields{}
	}
}

// TCPSocketAction constructs an declarative configuration of the TCPSocketAction type for use with
// apply.
// Provided as a convenience.
func TCPSocketAction() TCPSocketActionBuilder {
	return TCPSocketActionBuilder{fields: &tCPSocketActionFields{}}
}

// SetPort sets the Port field in the declarative configuration to the given value.
func (b TCPSocketActionBuilder) SetPort(value intstr.IntOrString) TCPSocketActionBuilder {
	b.ensureInitialized()
	b.fields.Port = &value
	return b
}

// RemovePort removes the Port field from the declarative configuration.
func (b TCPSocketActionBuilder) RemovePort() TCPSocketActionBuilder {
	b.ensureInitialized()
	b.fields.Port = nil
	return b
}

// GetPort gets the Port field from the declarative configuration.
func (b TCPSocketActionBuilder) GetPort() (value intstr.IntOrString, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Port; v != nil {
		return *v, true
	}
	return value, false
}

// SetHost sets the Host field in the declarative configuration to the given value.
func (b TCPSocketActionBuilder) SetHost(value string) TCPSocketActionBuilder {
	b.ensureInitialized()
	b.fields.Host = &value
	return b
}

// RemoveHost removes the Host field from the declarative configuration.
func (b TCPSocketActionBuilder) RemoveHost() TCPSocketActionBuilder {
	b.ensureInitialized()
	b.fields.Host = nil
	return b
}

// GetHost gets the Host field from the declarative configuration.
func (b TCPSocketActionBuilder) GetHost() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Host; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts TCPSocketActionBuilder to unstructured.
func (b *TCPSocketActionBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to TCPSocketActionBuilder, replacing the contents
// of TCPSocketActionBuilder.
func (b *TCPSocketActionBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &tCPSocketActionFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals TCPSocketActionBuilder to JSON.
func (b *TCPSocketActionBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into TCPSocketActionBuilder, replacing the contents of
// TCPSocketActionBuilder.
func (b *TCPSocketActionBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// TCPSocketActionList represents a list of TCPSocketActionBuilder.
// Provided as a convenience.
type TCPSocketActionList []TCPSocketActionBuilder

// TCPSocketActionList represents a map of TCPSocketActionBuilder.
// Provided as a convenience.
type TCPSocketActionMap map[string]TCPSocketActionBuilder

func (b *TCPSocketActionBuilder) preMarshal() {
}
func (b *TCPSocketActionBuilder) postUnmarshal() {
}

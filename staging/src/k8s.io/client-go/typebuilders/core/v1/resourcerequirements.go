/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ResourceRequirementsBuilder represents an declarative configuration of the ResourceRequirements type for use
// with apply.
type ResourceRequirementsBuilder struct {
	fields *resourceRequirementsFields
}

// resourceRequirementsFields is used by ResourceRequirementsBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ResourceRequirementsBuilder before marshalling, and
// are copied out to the builder type in ResourceRequirementsBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type resourceRequirementsFields struct {
	Limits   *v1.ResourceList `json:"limits,omitempty"`
	Requests *v1.ResourceList `json:"requests,omitempty"`
}

func (b *ResourceRequirementsBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &resourceRequirementsFields{}
	}
}

// ResourceRequirements constructs an declarative configuration of the ResourceRequirements type for use with
// apply.
// Provided as a convenience.
func ResourceRequirements() ResourceRequirementsBuilder {
	return ResourceRequirementsBuilder{fields: &resourceRequirementsFields{}}
}

// SetLimits sets the Limits field in the declarative configuration to the given value.
func (b ResourceRequirementsBuilder) SetLimits(value v1.ResourceList) ResourceRequirementsBuilder {
	b.ensureInitialized()
	b.fields.Limits = &value
	return b
}

// RemoveLimits removes the Limits field from the declarative configuration.
func (b ResourceRequirementsBuilder) RemoveLimits() ResourceRequirementsBuilder {
	b.ensureInitialized()
	b.fields.Limits = nil
	return b
}

// GetLimits gets the Limits field from the declarative configuration.
func (b ResourceRequirementsBuilder) GetLimits() (value v1.ResourceList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Limits; v != nil {
		return *v, true
	}
	return value, false
}

// SetRequests sets the Requests field in the declarative configuration to the given value.
func (b ResourceRequirementsBuilder) SetRequests(value v1.ResourceList) ResourceRequirementsBuilder {
	b.ensureInitialized()
	b.fields.Requests = &value
	return b
}

// RemoveRequests removes the Requests field from the declarative configuration.
func (b ResourceRequirementsBuilder) RemoveRequests() ResourceRequirementsBuilder {
	b.ensureInitialized()
	b.fields.Requests = nil
	return b
}

// GetRequests gets the Requests field from the declarative configuration.
func (b ResourceRequirementsBuilder) GetRequests() (value v1.ResourceList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Requests; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ResourceRequirementsBuilder to unstructured.
func (b *ResourceRequirementsBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ResourceRequirementsBuilder, replacing the contents
// of ResourceRequirementsBuilder.
func (b *ResourceRequirementsBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &resourceRequirementsFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ResourceRequirementsBuilder to JSON.
func (b *ResourceRequirementsBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ResourceRequirementsBuilder, replacing the contents of
// ResourceRequirementsBuilder.
func (b *ResourceRequirementsBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ResourceRequirementsList represents a list of ResourceRequirementsBuilder.
// Provided as a convenience.
type ResourceRequirementsList []ResourceRequirementsBuilder

// ResourceRequirementsList represents a map of ResourceRequirementsBuilder.
// Provided as a convenience.
type ResourceRequirementsMap map[string]ResourceRequirementsBuilder

func (b *ResourceRequirementsBuilder) preMarshal() {
}
func (b *ResourceRequirementsBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DaemonEndpointBuilder represents an declarative configuration of the DaemonEndpoint type for use
// with apply.
type DaemonEndpointBuilder struct {
	fields *daemonEndpointFields
}

// daemonEndpointFields is used by DaemonEndpointBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in DaemonEndpointBuilder before marshalling, and
// are copied out to the builder type in DaemonEndpointBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type daemonEndpointFields struct {
	Port *int32 `json:"Port,omitempty"`
}

func (b *DaemonEndpointBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &daemonEndpointFields{}
	}
}

// DaemonEndpoint constructs an declarative configuration of the DaemonEndpoint type for use with
// apply.
// Provided as a convenience.
func DaemonEndpoint() DaemonEndpointBuilder {
	return DaemonEndpointBuilder{fields: &daemonEndpointFields{}}
}

// SetPort sets the Port field in the declarative configuration to the given value.
func (b DaemonEndpointBuilder) SetPort(value int32) DaemonEndpointBuilder {
	b.ensureInitialized()
	b.fields.Port = &value
	return b
}

// RemovePort removes the Port field from the declarative configuration.
func (b DaemonEndpointBuilder) RemovePort() DaemonEndpointBuilder {
	b.ensureInitialized()
	b.fields.Port = nil
	return b
}

// GetPort gets the Port field from the declarative configuration.
func (b DaemonEndpointBuilder) GetPort() (value int32, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Port; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts DaemonEndpointBuilder to unstructured.
func (b *DaemonEndpointBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to DaemonEndpointBuilder, replacing the contents
// of DaemonEndpointBuilder.
func (b *DaemonEndpointBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &daemonEndpointFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals DaemonEndpointBuilder to JSON.
func (b *DaemonEndpointBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into DaemonEndpointBuilder, replacing the contents of
// DaemonEndpointBuilder.
func (b *DaemonEndpointBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// DaemonEndpointList represents a list of DaemonEndpointBuilder.
// Provided as a convenience.
type DaemonEndpointList []DaemonEndpointBuilder

// DaemonEndpointList represents a map of DaemonEndpointBuilder.
// Provided as a convenience.
type DaemonEndpointMap map[string]DaemonEndpointBuilder

func (b *DaemonEndpointBuilder) preMarshal() {
}
func (b *DaemonEndpointBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// PersistentVolumeClaimTemplateApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimTemplate type for use
// with apply.
type PersistentVolumeClaimTemplateApplyConfiguration struct {
	fields persistentVolumeClaimTemplateFields
}

// PersistentVolumeClaimTemplateApplyConfiguration constructs an declarative configuration of the PersistentVolumeClaimTemplate type for use with
// apply.
func PersistentVolumeClaimTemplate() *PersistentVolumeClaimTemplateApplyConfiguration {
	return &PersistentVolumeClaimTemplateApplyConfiguration{}
}

// persistentVolumeClaimTemplateFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in PersistentVolumeClaimTemplateApplyConfiguration.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type persistentVolumeClaimTemplateFields struct {
	ObjectMeta *v1.ObjectMetaApplyConfiguration             `json:"metadata,omitempty"`
	Spec       *PersistentVolumeClaimSpecApplyConfiguration `json:"spec,omitempty"`
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) SetObjectMeta(value *v1.ObjectMetaApplyConfiguration) *PersistentVolumeClaimTemplateApplyConfiguration {
	b.fields.ObjectMeta = value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) RemoveObjectMeta() *PersistentVolumeClaimTemplateApplyConfiguration {
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) GetObjectMeta() (value *v1.ObjectMetaApplyConfiguration, ok bool) {
	return b.fields.ObjectMeta, b.fields.ObjectMeta != nil
}

// SetSpec sets the Spec field in the declarative configuration to the given value.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) SetSpec(value *PersistentVolumeClaimSpecApplyConfiguration) *PersistentVolumeClaimTemplateApplyConfiguration {
	b.fields.Spec = value
	return b
}

// RemoveSpec removes the Spec field from the declarative configuration.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) RemoveSpec() *PersistentVolumeClaimTemplateApplyConfiguration {
	b.fields.Spec = nil
	return b
}

// GetSpec gets the Spec field from the declarative configuration.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) GetSpec() (value *PersistentVolumeClaimSpecApplyConfiguration, ok bool) {
	return b.fields.Spec, b.fields.Spec != nil
}

// ToUnstructured converts PersistentVolumeClaimTemplateApplyConfiguration to unstructured.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to PersistentVolumeClaimTemplateApplyConfiguration, replacing the contents
// of PersistentVolumeClaimTemplateApplyConfiguration.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) FromUnstructured(u map[string]interface{}) error {
	m := &persistentVolumeClaimTemplateFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals PersistentVolumeClaimTemplateApplyConfiguration to JSON.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into PersistentVolumeClaimTemplateApplyConfiguration, replacing the contents of
// PersistentVolumeClaimTemplateApplyConfiguration.
func (b *PersistentVolumeClaimTemplateApplyConfiguration) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// PersistentVolumeClaimTemplateList represents a listAlias of PersistentVolumeClaimTemplateApplyConfiguration.
type PersistentVolumeClaimTemplateList []*PersistentVolumeClaimTemplateApplyConfiguration

// PersistentVolumeClaimTemplateList represents a map of PersistentVolumeClaimTemplateApplyConfiguration.
type PersistentVolumeClaimTemplateMap map[string]PersistentVolumeClaimTemplateApplyConfiguration

func (b *PersistentVolumeClaimTemplateApplyConfiguration) preMarshal() {
}
func (b *PersistentVolumeClaimTemplateApplyConfiguration) postUnmarshal() {
}

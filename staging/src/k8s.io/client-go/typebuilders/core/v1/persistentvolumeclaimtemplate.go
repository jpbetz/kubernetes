/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// PersistentVolumeClaimTemplateBuilder represents an declarative configuration of the PersistentVolumeClaimTemplate type for use
// with apply.
type PersistentVolumeClaimTemplateBuilder struct {
	fields *persistentVolumeClaimTemplateFields
}

// persistentVolumeClaimTemplateFields is used by PersistentVolumeClaimTemplateBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in PersistentVolumeClaimTemplateBuilder before marshalling, and
// are copied out to the builder type in PersistentVolumeClaimTemplateBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type persistentVolumeClaimTemplateFields struct {
	ObjectMeta *v1.ObjectMetaBuilder             `json:"metadata,omitempty"`
	Spec       *PersistentVolumeClaimSpecBuilder `json:"spec,omitempty"`
}

func (b *PersistentVolumeClaimTemplateBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &persistentVolumeClaimTemplateFields{}
	}
}

// PersistentVolumeClaimTemplate constructs an declarative configuration of the PersistentVolumeClaimTemplate type for use with
// apply.
// Provided as a convenience.
func PersistentVolumeClaimTemplate() PersistentVolumeClaimTemplateBuilder {
	return PersistentVolumeClaimTemplateBuilder{fields: &persistentVolumeClaimTemplateFields{}}
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b PersistentVolumeClaimTemplateBuilder) SetObjectMeta(value v1.ObjectMetaBuilder) PersistentVolumeClaimTemplateBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = &value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b PersistentVolumeClaimTemplateBuilder) RemoveObjectMeta() PersistentVolumeClaimTemplateBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b PersistentVolumeClaimTemplateBuilder) GetObjectMeta() (value v1.ObjectMetaBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ObjectMeta; v != nil {
		return *v, true
	}
	return value, false
}

// SetSpec sets the Spec field in the declarative configuration to the given value.
func (b PersistentVolumeClaimTemplateBuilder) SetSpec(value PersistentVolumeClaimSpecBuilder) PersistentVolumeClaimTemplateBuilder {
	b.ensureInitialized()
	b.fields.Spec = &value
	return b
}

// RemoveSpec removes the Spec field from the declarative configuration.
func (b PersistentVolumeClaimTemplateBuilder) RemoveSpec() PersistentVolumeClaimTemplateBuilder {
	b.ensureInitialized()
	b.fields.Spec = nil
	return b
}

// GetSpec gets the Spec field from the declarative configuration.
func (b PersistentVolumeClaimTemplateBuilder) GetSpec() (value PersistentVolumeClaimSpecBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Spec; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts PersistentVolumeClaimTemplateBuilder to unstructured.
func (b *PersistentVolumeClaimTemplateBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to PersistentVolumeClaimTemplateBuilder, replacing the contents
// of PersistentVolumeClaimTemplateBuilder.
func (b *PersistentVolumeClaimTemplateBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &persistentVolumeClaimTemplateFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals PersistentVolumeClaimTemplateBuilder to JSON.
func (b *PersistentVolumeClaimTemplateBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into PersistentVolumeClaimTemplateBuilder, replacing the contents of
// PersistentVolumeClaimTemplateBuilder.
func (b *PersistentVolumeClaimTemplateBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// PersistentVolumeClaimTemplateList represents a list of PersistentVolumeClaimTemplateBuilder.
// Provided as a convenience.
type PersistentVolumeClaimTemplateList []PersistentVolumeClaimTemplateBuilder

// PersistentVolumeClaimTemplateList represents a map of PersistentVolumeClaimTemplateBuilder.
// Provided as a convenience.
type PersistentVolumeClaimTemplateMap map[string]PersistentVolumeClaimTemplateBuilder

func (b *PersistentVolumeClaimTemplateBuilder) preMarshal() {
}
func (b *PersistentVolumeClaimTemplateBuilder) postUnmarshal() {
}

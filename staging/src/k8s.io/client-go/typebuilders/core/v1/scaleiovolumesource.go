/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ScaleIOVolumeSourceBuilder represents an declarative configuration of the ScaleIOVolumeSource type for use
// with apply.
type ScaleIOVolumeSourceBuilder struct {
	fields *scaleIOVolumeSourceFields
}

// scaleIOVolumeSourceFields is used by ScaleIOVolumeSourceBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ScaleIOVolumeSourceBuilder before marshalling, and
// are copied out to the builder type in ScaleIOVolumeSourceBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type scaleIOVolumeSourceFields struct {
	Gateway          *string                      `json:"gateway,omitempty"`
	System           *string                      `json:"system,omitempty"`
	SecretRef        *LocalObjectReferenceBuilder `json:"secretRef,omitempty"`
	SSLEnabled       *bool                        `json:"sslEnabled,omitempty"`
	ProtectionDomain *string                      `json:"protectionDomain,omitempty"`
	StoragePool      *string                      `json:"storagePool,omitempty"`
	StorageMode      *string                      `json:"storageMode,omitempty"`
	VolumeName       *string                      `json:"volumeName,omitempty"`
	FSType           *string                      `json:"fsType,omitempty"`
	ReadOnly         *bool                        `json:"readOnly,omitempty"`
}

func (b *ScaleIOVolumeSourceBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &scaleIOVolumeSourceFields{}
	}
}

// ScaleIOVolumeSource constructs an declarative configuration of the ScaleIOVolumeSource type for use with
// apply.
// Provided as a convenience.
func ScaleIOVolumeSource() ScaleIOVolumeSourceBuilder {
	return ScaleIOVolumeSourceBuilder{fields: &scaleIOVolumeSourceFields{}}
}

// SetGateway sets the Gateway field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetGateway(value string) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.Gateway = &value
	return b
}

// RemoveGateway removes the Gateway field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveGateway() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.Gateway = nil
	return b
}

// GetGateway gets the Gateway field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetGateway() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Gateway; v != nil {
		return *v, true
	}
	return value, false
}

// SetSystem sets the System field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetSystem(value string) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.System = &value
	return b
}

// RemoveSystem removes the System field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveSystem() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.System = nil
	return b
}

// GetSystem gets the System field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetSystem() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.System; v != nil {
		return *v, true
	}
	return value, false
}

// SetSecretRef sets the SecretRef field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetSecretRef(value LocalObjectReferenceBuilder) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.SecretRef = &value
	return b
}

// RemoveSecretRef removes the SecretRef field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveSecretRef() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.SecretRef = nil
	return b
}

// GetSecretRef gets the SecretRef field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetSecretRef() (value LocalObjectReferenceBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.SecretRef; v != nil {
		return *v, true
	}
	return value, false
}

// SetSSLEnabled sets the SSLEnabled field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetSSLEnabled(value bool) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.SSLEnabled = &value
	return b
}

// RemoveSSLEnabled removes the SSLEnabled field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveSSLEnabled() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.SSLEnabled = nil
	return b
}

// GetSSLEnabled gets the SSLEnabled field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetSSLEnabled() (value bool, ok bool) {
	b.ensureInitialized()
	if v := b.fields.SSLEnabled; v != nil {
		return *v, true
	}
	return value, false
}

// SetProtectionDomain sets the ProtectionDomain field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetProtectionDomain(value string) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.ProtectionDomain = &value
	return b
}

// RemoveProtectionDomain removes the ProtectionDomain field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveProtectionDomain() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.ProtectionDomain = nil
	return b
}

// GetProtectionDomain gets the ProtectionDomain field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetProtectionDomain() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ProtectionDomain; v != nil {
		return *v, true
	}
	return value, false
}

// SetStoragePool sets the StoragePool field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetStoragePool(value string) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.StoragePool = &value
	return b
}

// RemoveStoragePool removes the StoragePool field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveStoragePool() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.StoragePool = nil
	return b
}

// GetStoragePool gets the StoragePool field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetStoragePool() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.StoragePool; v != nil {
		return *v, true
	}
	return value, false
}

// SetStorageMode sets the StorageMode field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetStorageMode(value string) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.StorageMode = &value
	return b
}

// RemoveStorageMode removes the StorageMode field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveStorageMode() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.StorageMode = nil
	return b
}

// GetStorageMode gets the StorageMode field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetStorageMode() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.StorageMode; v != nil {
		return *v, true
	}
	return value, false
}

// SetVolumeName sets the VolumeName field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetVolumeName(value string) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.VolumeName = &value
	return b
}

// RemoveVolumeName removes the VolumeName field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveVolumeName() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.VolumeName = nil
	return b
}

// GetVolumeName gets the VolumeName field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetVolumeName() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.VolumeName; v != nil {
		return *v, true
	}
	return value, false
}

// SetFSType sets the FSType field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetFSType(value string) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.FSType = &value
	return b
}

// RemoveFSType removes the FSType field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveFSType() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.FSType = nil
	return b
}

// GetFSType gets the FSType field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetFSType() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.FSType; v != nil {
		return *v, true
	}
	return value, false
}

// SetReadOnly sets the ReadOnly field in the declarative configuration to the given value.
func (b ScaleIOVolumeSourceBuilder) SetReadOnly(value bool) ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.ReadOnly = &value
	return b
}

// RemoveReadOnly removes the ReadOnly field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) RemoveReadOnly() ScaleIOVolumeSourceBuilder {
	b.ensureInitialized()
	b.fields.ReadOnly = nil
	return b
}

// GetReadOnly gets the ReadOnly field from the declarative configuration.
func (b ScaleIOVolumeSourceBuilder) GetReadOnly() (value bool, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ReadOnly; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ScaleIOVolumeSourceBuilder to unstructured.
func (b *ScaleIOVolumeSourceBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ScaleIOVolumeSourceBuilder, replacing the contents
// of ScaleIOVolumeSourceBuilder.
func (b *ScaleIOVolumeSourceBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &scaleIOVolumeSourceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ScaleIOVolumeSourceBuilder to JSON.
func (b *ScaleIOVolumeSourceBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ScaleIOVolumeSourceBuilder, replacing the contents of
// ScaleIOVolumeSourceBuilder.
func (b *ScaleIOVolumeSourceBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ScaleIOVolumeSourceList represents a list of ScaleIOVolumeSourceBuilder.
// Provided as a convenience.
type ScaleIOVolumeSourceList []ScaleIOVolumeSourceBuilder

// ScaleIOVolumeSourceList represents a map of ScaleIOVolumeSourceBuilder.
// Provided as a convenience.
type ScaleIOVolumeSourceMap map[string]ScaleIOVolumeSourceBuilder

func (b *ScaleIOVolumeSourceBuilder) preMarshal() {
}
func (b *ScaleIOVolumeSourceBuilder) postUnmarshal() {
}

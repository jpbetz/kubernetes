/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ReplicationControllerStatusApplyConfiguration represents an declarative configuration of the ReplicationControllerStatus type for use
// with apply.
type ReplicationControllerStatusApplyConfiguration struct {
	fields replicationControllerStatusFields
}

// ReplicationControllerStatusApplyConfiguration constructs an declarative configuration of the ReplicationControllerStatus type for use with
// apply.
func ReplicationControllerStatus() *ReplicationControllerStatusApplyConfiguration {
	return &ReplicationControllerStatusApplyConfiguration{}
}

// replicationControllerStatusFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in ReplicationControllerStatusApplyConfiguration.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type replicationControllerStatusFields struct {
	Replicas             *int32                              `json:"replicas,omitempty"`
	FullyLabeledReplicas *int32                              `json:"fullyLabeledReplicas,omitempty"`
	ReadyReplicas        *int32                              `json:"readyReplicas,omitempty"`
	AvailableReplicas    *int32                              `json:"availableReplicas,omitempty"`
	ObservedGeneration   *int64                              `json:"observedGeneration,omitempty"`
	Conditions           *ReplicationControllerConditionList `json:"conditions,omitempty"`
}

// SetReplicas sets the Replicas field in the declarative configuration to the given value.
func (b *ReplicationControllerStatusApplyConfiguration) SetReplicas(value int32) *ReplicationControllerStatusApplyConfiguration {
	b.fields.Replicas = &value
	return b
}

// RemoveReplicas removes the Replicas field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) RemoveReplicas() *ReplicationControllerStatusApplyConfiguration {
	b.fields.Replicas = nil
	return b
}

// GetReplicas gets the Replicas field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) GetReplicas() (value int32, ok bool) {
	if v := b.fields.Replicas; v != nil {
		return *v, true
	}
	return value, false
}

// SetFullyLabeledReplicas sets the FullyLabeledReplicas field in the declarative configuration to the given value.
func (b *ReplicationControllerStatusApplyConfiguration) SetFullyLabeledReplicas(value int32) *ReplicationControllerStatusApplyConfiguration {
	b.fields.FullyLabeledReplicas = &value
	return b
}

// RemoveFullyLabeledReplicas removes the FullyLabeledReplicas field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) RemoveFullyLabeledReplicas() *ReplicationControllerStatusApplyConfiguration {
	b.fields.FullyLabeledReplicas = nil
	return b
}

// GetFullyLabeledReplicas gets the FullyLabeledReplicas field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) GetFullyLabeledReplicas() (value int32, ok bool) {
	if v := b.fields.FullyLabeledReplicas; v != nil {
		return *v, true
	}
	return value, false
}

// SetReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value.
func (b *ReplicationControllerStatusApplyConfiguration) SetReadyReplicas(value int32) *ReplicationControllerStatusApplyConfiguration {
	b.fields.ReadyReplicas = &value
	return b
}

// RemoveReadyReplicas removes the ReadyReplicas field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) RemoveReadyReplicas() *ReplicationControllerStatusApplyConfiguration {
	b.fields.ReadyReplicas = nil
	return b
}

// GetReadyReplicas gets the ReadyReplicas field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) GetReadyReplicas() (value int32, ok bool) {
	if v := b.fields.ReadyReplicas; v != nil {
		return *v, true
	}
	return value, false
}

// SetAvailableReplicas sets the AvailableReplicas field in the declarative configuration to the given value.
func (b *ReplicationControllerStatusApplyConfiguration) SetAvailableReplicas(value int32) *ReplicationControllerStatusApplyConfiguration {
	b.fields.AvailableReplicas = &value
	return b
}

// RemoveAvailableReplicas removes the AvailableReplicas field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) RemoveAvailableReplicas() *ReplicationControllerStatusApplyConfiguration {
	b.fields.AvailableReplicas = nil
	return b
}

// GetAvailableReplicas gets the AvailableReplicas field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) GetAvailableReplicas() (value int32, ok bool) {
	if v := b.fields.AvailableReplicas; v != nil {
		return *v, true
	}
	return value, false
}

// SetObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value.
func (b *ReplicationControllerStatusApplyConfiguration) SetObservedGeneration(value int64) *ReplicationControllerStatusApplyConfiguration {
	b.fields.ObservedGeneration = &value
	return b
}

// RemoveObservedGeneration removes the ObservedGeneration field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) RemoveObservedGeneration() *ReplicationControllerStatusApplyConfiguration {
	b.fields.ObservedGeneration = nil
	return b
}

// GetObservedGeneration gets the ObservedGeneration field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) GetObservedGeneration() (value int64, ok bool) {
	if v := b.fields.ObservedGeneration; v != nil {
		return *v, true
	}
	return value, false
}

// SetConditions sets the Conditions field in the declarative configuration to the given value.
func (b *ReplicationControllerStatusApplyConfiguration) SetConditions(value ReplicationControllerConditionList) *ReplicationControllerStatusApplyConfiguration {
	b.fields.Conditions = &value
	return b
}

// RemoveConditions removes the Conditions field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) RemoveConditions() *ReplicationControllerStatusApplyConfiguration {
	b.fields.Conditions = nil
	return b
}

// GetConditions gets the Conditions field from the declarative configuration.
func (b *ReplicationControllerStatusApplyConfiguration) GetConditions() (value ReplicationControllerConditionList, ok bool) {
	if v := b.fields.Conditions; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ReplicationControllerStatusApplyConfiguration to unstructured.
func (b *ReplicationControllerStatusApplyConfiguration) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ReplicationControllerStatusApplyConfiguration, replacing the contents
// of ReplicationControllerStatusApplyConfiguration.
func (b *ReplicationControllerStatusApplyConfiguration) FromUnstructured(u map[string]interface{}) error {
	m := &replicationControllerStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ReplicationControllerStatusApplyConfiguration to JSON.
func (b *ReplicationControllerStatusApplyConfiguration) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ReplicationControllerStatusApplyConfiguration, replacing the contents of
// ReplicationControllerStatusApplyConfiguration.
func (b *ReplicationControllerStatusApplyConfiguration) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ReplicationControllerStatusList represents a listAlias of ReplicationControllerStatusApplyConfiguration.
type ReplicationControllerStatusList []*ReplicationControllerStatusApplyConfiguration

// ReplicationControllerStatusList represents a map of ReplicationControllerStatusApplyConfiguration.
type ReplicationControllerStatusMap map[string]ReplicationControllerStatusApplyConfiguration

func (b *ReplicationControllerStatusApplyConfiguration) preMarshal() {
}
func (b *ReplicationControllerStatusApplyConfiguration) postUnmarshal() {
}

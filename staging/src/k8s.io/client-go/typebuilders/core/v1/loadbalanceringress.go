/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// LoadBalancerIngressBuilder represents an declarative configuration of the LoadBalancerIngress type for use
// with apply.
type LoadBalancerIngressBuilder struct {
	fields *loadBalancerIngressFields
}

// loadBalancerIngressFields is used by LoadBalancerIngressBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in LoadBalancerIngressBuilder before marshalling, and
// are copied out to the builder type in LoadBalancerIngressBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type loadBalancerIngressFields struct {
	IP       *string `json:"ip,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
}

func (b *LoadBalancerIngressBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &loadBalancerIngressFields{}
	}
}

// LoadBalancerIngress constructs an declarative configuration of the LoadBalancerIngress type for use with
// apply.
// Provided as a convenience.
func LoadBalancerIngress() LoadBalancerIngressBuilder {
	return LoadBalancerIngressBuilder{fields: &loadBalancerIngressFields{}}
}

// SetIP sets the IP field in the declarative configuration to the given value.
func (b LoadBalancerIngressBuilder) SetIP(value string) LoadBalancerIngressBuilder {
	b.ensureInitialized()
	b.fields.IP = &value
	return b
}

// RemoveIP removes the IP field from the declarative configuration.
func (b LoadBalancerIngressBuilder) RemoveIP() LoadBalancerIngressBuilder {
	b.ensureInitialized()
	b.fields.IP = nil
	return b
}

// GetIP gets the IP field from the declarative configuration.
func (b LoadBalancerIngressBuilder) GetIP() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.IP; v != nil {
		return *v, true
	}
	return value, false
}

// SetHostname sets the Hostname field in the declarative configuration to the given value.
func (b LoadBalancerIngressBuilder) SetHostname(value string) LoadBalancerIngressBuilder {
	b.ensureInitialized()
	b.fields.Hostname = &value
	return b
}

// RemoveHostname removes the Hostname field from the declarative configuration.
func (b LoadBalancerIngressBuilder) RemoveHostname() LoadBalancerIngressBuilder {
	b.ensureInitialized()
	b.fields.Hostname = nil
	return b
}

// GetHostname gets the Hostname field from the declarative configuration.
func (b LoadBalancerIngressBuilder) GetHostname() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Hostname; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts LoadBalancerIngressBuilder to unstructured.
func (b *LoadBalancerIngressBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to LoadBalancerIngressBuilder, replacing the contents
// of LoadBalancerIngressBuilder.
func (b *LoadBalancerIngressBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &loadBalancerIngressFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals LoadBalancerIngressBuilder to JSON.
func (b *LoadBalancerIngressBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into LoadBalancerIngressBuilder, replacing the contents of
// LoadBalancerIngressBuilder.
func (b *LoadBalancerIngressBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// LoadBalancerIngressList represents a list of LoadBalancerIngressBuilder.
// Provided as a convenience.
type LoadBalancerIngressList []LoadBalancerIngressBuilder

// LoadBalancerIngressList represents a map of LoadBalancerIngressBuilder.
// Provided as a convenience.
type LoadBalancerIngressMap map[string]LoadBalancerIngressBuilder

func (b *LoadBalancerIngressBuilder) preMarshal() {
}
func (b *LoadBalancerIngressBuilder) postUnmarshal() {
}

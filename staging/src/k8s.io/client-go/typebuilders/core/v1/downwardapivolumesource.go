/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DownwardAPIVolumeSourceApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeSource type for use
// with apply.
type DownwardAPIVolumeSourceApplyConfiguration struct {
	fields downwardAPIVolumeSourceFields
}

// DownwardAPIVolumeSourceApplyConfiguration constructs an declarative configuration of the DownwardAPIVolumeSource type for use with
// apply.
func DownwardAPIVolumeSource() *DownwardAPIVolumeSourceApplyConfiguration {
	return &DownwardAPIVolumeSourceApplyConfiguration{}
}

// downwardAPIVolumeSourceFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in DownwardAPIVolumeSourceApplyConfiguration.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type downwardAPIVolumeSourceFields struct {
	Items       *DownwardAPIVolumeFileList `json:"items,omitempty"`
	DefaultMode *int32                     `json:"defaultMode,omitempty"`
}

// SetItems sets the Items field in the declarative configuration to the given value.
func (b *DownwardAPIVolumeSourceApplyConfiguration) SetItems(value DownwardAPIVolumeFileList) *DownwardAPIVolumeSourceApplyConfiguration {
	b.fields.Items = &value
	return b
}

// RemoveItems removes the Items field from the declarative configuration.
func (b *DownwardAPIVolumeSourceApplyConfiguration) RemoveItems() *DownwardAPIVolumeSourceApplyConfiguration {
	b.fields.Items = nil
	return b
}

// GetItems gets the Items field from the declarative configuration.
func (b *DownwardAPIVolumeSourceApplyConfiguration) GetItems() (value DownwardAPIVolumeFileList, ok bool) {
	if v := b.fields.Items; v != nil {
		return *v, true
	}
	return value, false
}

// SetDefaultMode sets the DefaultMode field in the declarative configuration to the given value.
func (b *DownwardAPIVolumeSourceApplyConfiguration) SetDefaultMode(value int32) *DownwardAPIVolumeSourceApplyConfiguration {
	b.fields.DefaultMode = &value
	return b
}

// RemoveDefaultMode removes the DefaultMode field from the declarative configuration.
func (b *DownwardAPIVolumeSourceApplyConfiguration) RemoveDefaultMode() *DownwardAPIVolumeSourceApplyConfiguration {
	b.fields.DefaultMode = nil
	return b
}

// GetDefaultMode gets the DefaultMode field from the declarative configuration.
func (b *DownwardAPIVolumeSourceApplyConfiguration) GetDefaultMode() (value int32, ok bool) {
	if v := b.fields.DefaultMode; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts DownwardAPIVolumeSourceApplyConfiguration to unstructured.
func (b *DownwardAPIVolumeSourceApplyConfiguration) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to DownwardAPIVolumeSourceApplyConfiguration, replacing the contents
// of DownwardAPIVolumeSourceApplyConfiguration.
func (b *DownwardAPIVolumeSourceApplyConfiguration) FromUnstructured(u map[string]interface{}) error {
	m := &downwardAPIVolumeSourceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals DownwardAPIVolumeSourceApplyConfiguration to JSON.
func (b *DownwardAPIVolumeSourceApplyConfiguration) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into DownwardAPIVolumeSourceApplyConfiguration, replacing the contents of
// DownwardAPIVolumeSourceApplyConfiguration.
func (b *DownwardAPIVolumeSourceApplyConfiguration) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// DownwardAPIVolumeSourceList represents a listAlias of DownwardAPIVolumeSourceApplyConfiguration.
type DownwardAPIVolumeSourceList []*DownwardAPIVolumeSourceApplyConfiguration

// DownwardAPIVolumeSourceList represents a map of DownwardAPIVolumeSourceApplyConfiguration.
type DownwardAPIVolumeSourceMap map[string]DownwardAPIVolumeSourceApplyConfiguration

func (b *DownwardAPIVolumeSourceApplyConfiguration) preMarshal() {
}
func (b *DownwardAPIVolumeSourceApplyConfiguration) postUnmarshal() {
}

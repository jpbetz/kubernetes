/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DownwardAPIVolumeSourceBuilder represents an declarative configuration of the DownwardAPIVolumeSource type for use
// with apply.
type DownwardAPIVolumeSourceBuilder struct {
	fields downwardAPIVolumeSourceFields
}

// downwardAPIVolumeSourceFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in DownwardAPIVolumeSourceBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type downwardAPIVolumeSourceFields struct {
	Items       *DownwardAPIVolumeFileList `json:"items,omitempty"`
	DefaultMode *int32                     `json:"defaultMode,omitempty"`
}

// DownwardAPIVolumeSource constructs an declarative configuration of the DownwardAPIVolumeSource type for use with
// apply.
func DownwardAPIVolumeSource() *DownwardAPIVolumeSourceBuilder {
	return &DownwardAPIVolumeSourceBuilder{}
}

// SetItems sets the Items field in the declarative configuration to the given value.
func (b *DownwardAPIVolumeSourceBuilder) SetItems(value DownwardAPIVolumeFileList) *DownwardAPIVolumeSourceBuilder {
	b.fields.Items = &value
	return b
}

// RemoveItems removes the Items field from the declarative configuration.
func (b *DownwardAPIVolumeSourceBuilder) RemoveItems() *DownwardAPIVolumeSourceBuilder {
	b.fields.Items = nil
	return b
}

// GetItems gets the Items field from the declarative configuration.
func (b *DownwardAPIVolumeSourceBuilder) GetItems() (value DownwardAPIVolumeFileList, ok bool) {
	if v := b.fields.Items; v != nil {
		return *v, true
	}
	return value, false
}

// SetDefaultMode sets the DefaultMode field in the declarative configuration to the given value.
func (b *DownwardAPIVolumeSourceBuilder) SetDefaultMode(value int32) *DownwardAPIVolumeSourceBuilder {
	b.fields.DefaultMode = &value
	return b
}

// RemoveDefaultMode removes the DefaultMode field from the declarative configuration.
func (b *DownwardAPIVolumeSourceBuilder) RemoveDefaultMode() *DownwardAPIVolumeSourceBuilder {
	b.fields.DefaultMode = nil
	return b
}

// GetDefaultMode gets the DefaultMode field from the declarative configuration.
func (b *DownwardAPIVolumeSourceBuilder) GetDefaultMode() (value int32, ok bool) {
	if v := b.fields.DefaultMode; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts DownwardAPIVolumeSourceBuilder to unstructured.
func (b *DownwardAPIVolumeSourceBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to DownwardAPIVolumeSourceBuilder, replacing the contents
// of DownwardAPIVolumeSourceBuilder.
func (b *DownwardAPIVolumeSourceBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &downwardAPIVolumeSourceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals DownwardAPIVolumeSourceBuilder to JSON.
func (b *DownwardAPIVolumeSourceBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into DownwardAPIVolumeSourceBuilder, replacing the contents of
// DownwardAPIVolumeSourceBuilder.
func (b *DownwardAPIVolumeSourceBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// DownwardAPIVolumeSourceList represents a list of DownwardAPIVolumeSourceBuilder.
type DownwardAPIVolumeSourceList []*DownwardAPIVolumeSourceBuilder

// DownwardAPIVolumeSourceList represents a map of DownwardAPIVolumeSourceBuilder.
type DownwardAPIVolumeSourceMap map[string]DownwardAPIVolumeSourceBuilder

func (b *DownwardAPIVolumeSourceBuilder) preMarshal() {
}
func (b *DownwardAPIVolumeSourceBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// ServiceAccountBuilder represents an declarative configuration of the ServiceAccount type for use
// with apply.
type ServiceAccountBuilder struct {
	typeMeta *v1.TypeMetaBuilder // inlined type
	fields   serviceAccountFields
}

// serviceAccountFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in ServiceAccountBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type serviceAccountFields struct {
	Kind                         *string                   `json:"kind,omitempty"`       // inlined ServiceAccountBuilder.typeMeta.Kind field
	APIVersion                   *string                   `json:"apiVersion,omitempty"` // inlined ServiceAccountBuilder.typeMeta.APIVersion field
	ObjectMeta                   *v1.ObjectMetaBuilder     `json:"metadata,omitempty"`
	Secrets                      *ObjectReferenceList      `json:"secrets,omitempty"`
	ImagePullSecrets             *LocalObjectReferenceList `json:"imagePullSecrets,omitempty"`
	AutomountServiceAccountToken *bool                     `json:"automountServiceAccountToken,omitempty"`
}

// ServiceAccount constructs an declarative configuration of the ServiceAccount type for use with
// apply.
func ServiceAccount() *ServiceAccountBuilder {
	return &ServiceAccountBuilder{}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b *ServiceAccountBuilder) SetTypeMeta(value *v1.TypeMetaBuilder) *ServiceAccountBuilder {
	b.typeMeta = value
	return b
}

// RemoveTypeMeta removes the TypeMeta field from the declarative configuration.
func (b *ServiceAccountBuilder) RemoveTypeMeta() *ServiceAccountBuilder {
	b.typeMeta = nil
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b *ServiceAccountBuilder) GetTypeMeta() (value *v1.TypeMetaBuilder, ok bool) {
	return b.typeMeta, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b *ServiceAccountBuilder) SetObjectMeta(value *v1.ObjectMetaBuilder) *ServiceAccountBuilder {
	b.fields.ObjectMeta = value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b *ServiceAccountBuilder) RemoveObjectMeta() *ServiceAccountBuilder {
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b *ServiceAccountBuilder) GetObjectMeta() (value *v1.ObjectMetaBuilder, ok bool) {
	return b.fields.ObjectMeta, b.fields.ObjectMeta != nil
}

// SetSecrets sets the Secrets field in the declarative configuration to the given value.
func (b *ServiceAccountBuilder) SetSecrets(value ObjectReferenceList) *ServiceAccountBuilder {
	b.fields.Secrets = &value
	return b
}

// RemoveSecrets removes the Secrets field from the declarative configuration.
func (b *ServiceAccountBuilder) RemoveSecrets() *ServiceAccountBuilder {
	b.fields.Secrets = nil
	return b
}

// GetSecrets gets the Secrets field from the declarative configuration.
func (b *ServiceAccountBuilder) GetSecrets() (value ObjectReferenceList, ok bool) {
	if v := b.fields.Secrets; v != nil {
		return *v, true
	}
	return value, false
}

// SetImagePullSecrets sets the ImagePullSecrets field in the declarative configuration to the given value.
func (b *ServiceAccountBuilder) SetImagePullSecrets(value LocalObjectReferenceList) *ServiceAccountBuilder {
	b.fields.ImagePullSecrets = &value
	return b
}

// RemoveImagePullSecrets removes the ImagePullSecrets field from the declarative configuration.
func (b *ServiceAccountBuilder) RemoveImagePullSecrets() *ServiceAccountBuilder {
	b.fields.ImagePullSecrets = nil
	return b
}

// GetImagePullSecrets gets the ImagePullSecrets field from the declarative configuration.
func (b *ServiceAccountBuilder) GetImagePullSecrets() (value LocalObjectReferenceList, ok bool) {
	if v := b.fields.ImagePullSecrets; v != nil {
		return *v, true
	}
	return value, false
}

// SetAutomountServiceAccountToken sets the AutomountServiceAccountToken field in the declarative configuration to the given value.
func (b *ServiceAccountBuilder) SetAutomountServiceAccountToken(value bool) *ServiceAccountBuilder {
	b.fields.AutomountServiceAccountToken = &value
	return b
}

// RemoveAutomountServiceAccountToken removes the AutomountServiceAccountToken field from the declarative configuration.
func (b *ServiceAccountBuilder) RemoveAutomountServiceAccountToken() *ServiceAccountBuilder {
	b.fields.AutomountServiceAccountToken = nil
	return b
}

// GetAutomountServiceAccountToken gets the AutomountServiceAccountToken field from the declarative configuration.
func (b *ServiceAccountBuilder) GetAutomountServiceAccountToken() (value bool, ok bool) {
	if v := b.fields.AutomountServiceAccountToken; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ServiceAccountBuilder to unstructured.
func (b *ServiceAccountBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ServiceAccountBuilder, replacing the contents
// of ServiceAccountBuilder.
func (b *ServiceAccountBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &serviceAccountFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ServiceAccountBuilder to JSON.
func (b *ServiceAccountBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ServiceAccountBuilder, replacing the contents of
// ServiceAccountBuilder.
func (b *ServiceAccountBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ServiceAccountList represents a list of ServiceAccountBuilder.
type ServiceAccountList []*ServiceAccountBuilder

// ServiceAccountList represents a map of ServiceAccountBuilder.
type ServiceAccountMap map[string]ServiceAccountBuilder

func (b *ServiceAccountBuilder) preMarshal() {
	if b.typeMeta != nil {
		if v, ok := b.typeMeta.GetKind(); ok {
			b.fields.Kind = &v
		}
		if v, ok := b.typeMeta.GetAPIVersion(); ok {
			b.fields.APIVersion = &v
		}
	}
}
func (b *ServiceAccountBuilder) postUnmarshal() {
	if b.typeMeta == nil {
		b.typeMeta = &v1.TypeMetaBuilder{}
	}
	if b.fields.Kind != nil {
		b.typeMeta.SetKind(*b.fields.Kind)
	}
	if b.fields.APIVersion != nil {
		b.typeMeta.SetAPIVersion(*b.fields.APIVersion)
	}
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// SeccompProfileBuilder represents an declarative configuration of the SeccompProfile type for use
// with apply.
type SeccompProfileBuilder struct {
	fields seccompProfileFields
}

// seccompProfileFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in SeccompProfileBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type seccompProfileFields struct {
	Type             *v1.SeccompProfileType `json:"type,omitempty"`
	LocalhostProfile *string                `json:"localhostProfile,omitempty"`
}

// SeccompProfile constructs an declarative configuration of the SeccompProfile type for use with
// apply.
func SeccompProfile() *SeccompProfileBuilder {
	return &SeccompProfileBuilder{}
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *SeccompProfileBuilder) SetType(value v1.SeccompProfileType) *SeccompProfileBuilder {
	b.fields.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b *SeccompProfileBuilder) RemoveType() *SeccompProfileBuilder {
	b.fields.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b *SeccompProfileBuilder) GetType() (value v1.SeccompProfileType, ok bool) {
	if v := b.fields.Type; v != nil {
		return *v, true
	}
	return value, false
}

// SetLocalhostProfile sets the LocalhostProfile field in the declarative configuration to the given value.
func (b *SeccompProfileBuilder) SetLocalhostProfile(value string) *SeccompProfileBuilder {
	b.fields.LocalhostProfile = &value
	return b
}

// RemoveLocalhostProfile removes the LocalhostProfile field from the declarative configuration.
func (b *SeccompProfileBuilder) RemoveLocalhostProfile() *SeccompProfileBuilder {
	b.fields.LocalhostProfile = nil
	return b
}

// GetLocalhostProfile gets the LocalhostProfile field from the declarative configuration.
func (b *SeccompProfileBuilder) GetLocalhostProfile() (value string, ok bool) {
	if v := b.fields.LocalhostProfile; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts SeccompProfileBuilder to unstructured.
func (b *SeccompProfileBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to SeccompProfileBuilder, replacing the contents
// of SeccompProfileBuilder.
func (b *SeccompProfileBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &seccompProfileFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals SeccompProfileBuilder to JSON.
func (b *SeccompProfileBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into SeccompProfileBuilder, replacing the contents of
// SeccompProfileBuilder.
func (b *SeccompProfileBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// SeccompProfileList represents a list of SeccompProfileBuilder.
type SeccompProfileList []*SeccompProfileBuilder

// SeccompProfileList represents a map of SeccompProfileBuilder.
type SeccompProfileMap map[string]SeccompProfileBuilder

func (b *SeccompProfileBuilder) preMarshal() {
}
func (b *SeccompProfileBuilder) postUnmarshal() {
}

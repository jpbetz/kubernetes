/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1alpha1

import (
	json "encoding/json"

	v1alpha1 "k8s.io/api/flowcontrol/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// LimitResponseBuilder represents an declarative configuration of the LimitResponse type for use
// with apply.
type LimitResponseBuilder struct {
	fields limitResponseFields
}

// limitResponseFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in LimitResponseBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type limitResponseFields struct {
	Type    *v1alpha1.LimitResponseType  `json:"type,omitempty"`
	Queuing *QueuingConfigurationBuilder `json:"queuing,omitempty"`
}

// LimitResponse constructs an declarative configuration of the LimitResponse type for use with
// apply.
func LimitResponse() *LimitResponseBuilder {
	return &LimitResponseBuilder{}
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *LimitResponseBuilder) SetType(value v1alpha1.LimitResponseType) *LimitResponseBuilder {
	b.fields.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b *LimitResponseBuilder) RemoveType() *LimitResponseBuilder {
	b.fields.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b *LimitResponseBuilder) GetType() (value v1alpha1.LimitResponseType, ok bool) {
	if v := b.fields.Type; v != nil {
		return *v, true
	}
	return value, false
}

// SetQueuing sets the Queuing field in the declarative configuration to the given value.
func (b *LimitResponseBuilder) SetQueuing(value *QueuingConfigurationBuilder) *LimitResponseBuilder {
	b.fields.Queuing = value
	return b
}

// RemoveQueuing removes the Queuing field from the declarative configuration.
func (b *LimitResponseBuilder) RemoveQueuing() *LimitResponseBuilder {
	b.fields.Queuing = nil
	return b
}

// GetQueuing gets the Queuing field from the declarative configuration.
func (b *LimitResponseBuilder) GetQueuing() (value *QueuingConfigurationBuilder, ok bool) {
	return b.fields.Queuing, b.fields.Queuing != nil
}

// ToUnstructured converts LimitResponseBuilder to unstructured.
func (b *LimitResponseBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to LimitResponseBuilder, replacing the contents
// of LimitResponseBuilder.
func (b *LimitResponseBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &limitResponseFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals LimitResponseBuilder to JSON.
func (b *LimitResponseBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into LimitResponseBuilder, replacing the contents of
// LimitResponseBuilder.
func (b *LimitResponseBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// LimitResponseList represents a list of LimitResponseBuilder.
type LimitResponseList []*LimitResponseBuilder

// LimitResponseList represents a map of LimitResponseBuilder.
type LimitResponseMap map[string]LimitResponseBuilder

func (b *LimitResponseBuilder) preMarshal() {
}
func (b *LimitResponseBuilder) postUnmarshal() {
}

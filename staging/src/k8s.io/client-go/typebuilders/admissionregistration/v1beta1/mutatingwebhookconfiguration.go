/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// MutatingWebhookConfigurationApplyConfiguration represents an declarative configuration of the MutatingWebhookConfiguration type for use
// with apply.
type MutatingWebhookConfigurationApplyConfiguration struct {
	typeMeta *v1.TypeMetaApplyConfiguration // inlined type
	fields   mutatingWebhookConfigurationFields
}

// MutatingWebhookConfigurationApplyConfiguration constructs an declarative configuration of the MutatingWebhookConfiguration type for use with
// apply.
func MutatingWebhookConfiguration() *MutatingWebhookConfigurationApplyConfiguration {
	return &MutatingWebhookConfigurationApplyConfiguration{}
}

// mutatingWebhookConfigurationFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in MutatingWebhookConfigurationApplyConfiguration.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type mutatingWebhookConfigurationFields struct {
	Kind       *string                          `json:"kind,omitempty"`       // inlined MutatingWebhookConfigurationApplyConfiguration.typeMeta.Kind field
	APIVersion *string                          `json:"apiVersion,omitempty"` // inlined MutatingWebhookConfigurationApplyConfiguration.typeMeta.APIVersion field
	ObjectMeta *v1.ObjectMetaApplyConfiguration `json:"metadata,omitempty"`
	Webhooks   *MutatingWebhookList             `json:"webhooks,omitempty"`
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b *MutatingWebhookConfigurationApplyConfiguration) SetTypeMeta(value *v1.TypeMetaApplyConfiguration) *MutatingWebhookConfigurationApplyConfiguration {
	b.typeMeta = value
	return b
}

// RemoveTypeMeta removes the TypeMeta field from the declarative configuration.
func (b *MutatingWebhookConfigurationApplyConfiguration) RemoveTypeMeta() *MutatingWebhookConfigurationApplyConfiguration {
	b.typeMeta = nil
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b *MutatingWebhookConfigurationApplyConfiguration) GetTypeMeta() (value *v1.TypeMetaApplyConfiguration, ok bool) {
	return b.typeMeta, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b *MutatingWebhookConfigurationApplyConfiguration) SetObjectMeta(value *v1.ObjectMetaApplyConfiguration) *MutatingWebhookConfigurationApplyConfiguration {
	b.fields.ObjectMeta = value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b *MutatingWebhookConfigurationApplyConfiguration) RemoveObjectMeta() *MutatingWebhookConfigurationApplyConfiguration {
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b *MutatingWebhookConfigurationApplyConfiguration) GetObjectMeta() (value *v1.ObjectMetaApplyConfiguration, ok bool) {
	return b.fields.ObjectMeta, b.fields.ObjectMeta != nil
}

// SetWebhooks sets the Webhooks field in the declarative configuration to the given value.
func (b *MutatingWebhookConfigurationApplyConfiguration) SetWebhooks(value MutatingWebhookList) *MutatingWebhookConfigurationApplyConfiguration {
	b.fields.Webhooks = &value
	return b
}

// RemoveWebhooks removes the Webhooks field from the declarative configuration.
func (b *MutatingWebhookConfigurationApplyConfiguration) RemoveWebhooks() *MutatingWebhookConfigurationApplyConfiguration {
	b.fields.Webhooks = nil
	return b
}

// GetWebhooks gets the Webhooks field from the declarative configuration.
func (b *MutatingWebhookConfigurationApplyConfiguration) GetWebhooks() (value MutatingWebhookList, ok bool) {
	if v := b.fields.Webhooks; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts MutatingWebhookConfigurationApplyConfiguration to unstructured.
func (b *MutatingWebhookConfigurationApplyConfiguration) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to MutatingWebhookConfigurationApplyConfiguration, replacing the contents
// of MutatingWebhookConfigurationApplyConfiguration.
func (b *MutatingWebhookConfigurationApplyConfiguration) FromUnstructured(u map[string]interface{}) error {
	m := &mutatingWebhookConfigurationFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals MutatingWebhookConfigurationApplyConfiguration to JSON.
func (b *MutatingWebhookConfigurationApplyConfiguration) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into MutatingWebhookConfigurationApplyConfiguration, replacing the contents of
// MutatingWebhookConfigurationApplyConfiguration.
func (b *MutatingWebhookConfigurationApplyConfiguration) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// MutatingWebhookConfigurationList represents a listAlias of MutatingWebhookConfigurationApplyConfiguration.
type MutatingWebhookConfigurationList []*MutatingWebhookConfigurationApplyConfiguration

// MutatingWebhookConfigurationList represents a map of MutatingWebhookConfigurationApplyConfiguration.
type MutatingWebhookConfigurationMap map[string]MutatingWebhookConfigurationApplyConfiguration

func (b *MutatingWebhookConfigurationApplyConfiguration) preMarshal() {
	if b.typeMeta != nil {
		if v, ok := b.typeMeta.GetKind(); ok {
			b.fields.Kind = &v
		}
		if v, ok := b.typeMeta.GetAPIVersion(); ok {
			b.fields.APIVersion = &v
		}
	}
}
func (b *MutatingWebhookConfigurationApplyConfiguration) postUnmarshal() {
	if b.typeMeta == nil {
		b.typeMeta = &v1.TypeMetaApplyConfiguration{}
	}
	if b.fields.Kind != nil {
		b.typeMeta.SetKind(*b.fields.Kind)
	}
	if b.fields.APIVersion != nil {
		b.typeMeta.SetAPIVersion(*b.fields.APIVersion)
	}
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// ValidatingWebhookConfigurationBuilder represents an declarative configuration of the ValidatingWebhookConfiguration type for use
// with apply.
type ValidatingWebhookConfigurationBuilder struct {
	typeMeta *v1.TypeMetaBuilder // inlined type
	fields   validatingWebhookConfigurationFields
}

// validatingWebhookConfigurationFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in ValidatingWebhookConfigurationBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type validatingWebhookConfigurationFields struct {
	Kind       *string                `json:"kind,omitempty"`       // inlined ValidatingWebhookConfigurationBuilder.typeMeta.Kind field
	APIVersion *string                `json:"apiVersion,omitempty"` // inlined ValidatingWebhookConfigurationBuilder.typeMeta.APIVersion field
	ObjectMeta *v1.ObjectMetaBuilder  `json:"metadata,omitempty"`
	Webhooks   *ValidatingWebhookList `json:"webhooks,omitempty"`
}

// ValidatingWebhookConfiguration constructs an declarative configuration of the ValidatingWebhookConfiguration type for use with
// apply.
func ValidatingWebhookConfiguration() *ValidatingWebhookConfigurationBuilder {
	return &ValidatingWebhookConfigurationBuilder{}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b *ValidatingWebhookConfigurationBuilder) SetTypeMeta(value *v1.TypeMetaBuilder) *ValidatingWebhookConfigurationBuilder {
	b.typeMeta = value
	return b
}

// RemoveTypeMeta removes the TypeMeta field from the declarative configuration.
func (b *ValidatingWebhookConfigurationBuilder) RemoveTypeMeta() *ValidatingWebhookConfigurationBuilder {
	b.typeMeta = nil
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b *ValidatingWebhookConfigurationBuilder) GetTypeMeta() (value *v1.TypeMetaBuilder, ok bool) {
	return b.typeMeta, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b *ValidatingWebhookConfigurationBuilder) SetObjectMeta(value *v1.ObjectMetaBuilder) *ValidatingWebhookConfigurationBuilder {
	b.fields.ObjectMeta = value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b *ValidatingWebhookConfigurationBuilder) RemoveObjectMeta() *ValidatingWebhookConfigurationBuilder {
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b *ValidatingWebhookConfigurationBuilder) GetObjectMeta() (value *v1.ObjectMetaBuilder, ok bool) {
	return b.fields.ObjectMeta, b.fields.ObjectMeta != nil
}

// SetWebhooks sets the Webhooks field in the declarative configuration to the given value.
func (b *ValidatingWebhookConfigurationBuilder) SetWebhooks(value ValidatingWebhookList) *ValidatingWebhookConfigurationBuilder {
	b.fields.Webhooks = &value
	return b
}

// RemoveWebhooks removes the Webhooks field from the declarative configuration.
func (b *ValidatingWebhookConfigurationBuilder) RemoveWebhooks() *ValidatingWebhookConfigurationBuilder {
	b.fields.Webhooks = nil
	return b
}

// GetWebhooks gets the Webhooks field from the declarative configuration.
func (b *ValidatingWebhookConfigurationBuilder) GetWebhooks() (value ValidatingWebhookList, ok bool) {
	if v := b.fields.Webhooks; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ValidatingWebhookConfigurationBuilder to unstructured.
func (b *ValidatingWebhookConfigurationBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ValidatingWebhookConfigurationBuilder, replacing the contents
// of ValidatingWebhookConfigurationBuilder.
func (b *ValidatingWebhookConfigurationBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &validatingWebhookConfigurationFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ValidatingWebhookConfigurationBuilder to JSON.
func (b *ValidatingWebhookConfigurationBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ValidatingWebhookConfigurationBuilder, replacing the contents of
// ValidatingWebhookConfigurationBuilder.
func (b *ValidatingWebhookConfigurationBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ValidatingWebhookConfigurationList represents a list of ValidatingWebhookConfigurationBuilder.
type ValidatingWebhookConfigurationList []*ValidatingWebhookConfigurationBuilder

// ValidatingWebhookConfigurationList represents a map of ValidatingWebhookConfigurationBuilder.
type ValidatingWebhookConfigurationMap map[string]ValidatingWebhookConfigurationBuilder

func (b *ValidatingWebhookConfigurationBuilder) preMarshal() {
	if b.typeMeta != nil {
		if v, ok := b.typeMeta.GetKind(); ok {
			b.fields.Kind = &v
		}
		if v, ok := b.typeMeta.GetAPIVersion(); ok {
			b.fields.APIVersion = &v
		}
	}
}
func (b *ValidatingWebhookConfigurationBuilder) postUnmarshal() {
	if b.typeMeta == nil {
		b.typeMeta = &v1.TypeMetaBuilder{}
	}
	if b.fields.Kind != nil {
		b.typeMeta.SetKind(*b.fields.Kind)
	}
	if b.fields.APIVersion != nil {
		b.typeMeta.SetAPIVersion(*b.fields.APIVersion)
	}
}

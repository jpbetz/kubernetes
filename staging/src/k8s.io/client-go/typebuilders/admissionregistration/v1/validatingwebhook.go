/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	admissionregistrationv1 "k8s.io/api/admissionregistration/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	metav1 "k8s.io/client-go/typebuilders/meta/v1"
)

// ValidatingWebhookBuilder represents an declarative configuration of the ValidatingWebhook type for use
// with apply.
type ValidatingWebhookBuilder struct {
	fields *validatingWebhookFields
}

// validatingWebhookFields is used by ValidatingWebhookBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ValidatingWebhookBuilder before marshalling, and
// are copied out to the builder type in ValidatingWebhookBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type validatingWebhookFields struct {
	Name                    *string                                    `json:"name,omitempty"`
	ClientConfig            *WebhookClientConfigBuilder                `json:"clientConfig,omitempty"`
	Rules                   *RuleWithOperationsList                    `json:"rules,omitempty"`
	FailurePolicy           *admissionregistrationv1.FailurePolicyType `json:"failurePolicy,omitempty"`
	MatchPolicy             *admissionregistrationv1.MatchPolicyType   `json:"matchPolicy,omitempty"`
	NamespaceSelector       *metav1.LabelSelectorBuilder               `json:"namespaceSelector,omitempty"`
	ObjectSelector          *metav1.LabelSelectorBuilder               `json:"objectSelector,omitempty"`
	SideEffects             *admissionregistrationv1.SideEffectClass   `json:"sideEffects,omitempty"`
	TimeoutSeconds          *int32                                     `json:"timeoutSeconds,omitempty"`
	AdmissionReviewVersions *[]string                                  `json:"admissionReviewVersions,omitempty"`
}

func (b *ValidatingWebhookBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &validatingWebhookFields{}
	}
}

// ValidatingWebhook constructs an declarative configuration of the ValidatingWebhook type for use with
// apply.
// Provided as a convenience.
func ValidatingWebhook() ValidatingWebhookBuilder {
	return ValidatingWebhookBuilder{fields: &validatingWebhookFields{}}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetName(value string) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveName() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetName() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetClientConfig sets the ClientConfig field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetClientConfig(value WebhookClientConfigBuilder) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.ClientConfig = &value
	return b
}

// RemoveClientConfig removes the ClientConfig field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveClientConfig() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.ClientConfig = nil
	return b
}

// GetClientConfig gets the ClientConfig field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetClientConfig() (value WebhookClientConfigBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ClientConfig; v != nil {
		return *v, true
	}
	return value, false
}

// SetRules sets the Rules field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetRules(value RuleWithOperationsList) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.Rules = &value
	return b
}

// RemoveRules removes the Rules field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveRules() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.Rules = nil
	return b
}

// GetRules gets the Rules field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetRules() (value RuleWithOperationsList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Rules; v != nil {
		return *v, true
	}
	return value, false
}

// SetFailurePolicy sets the FailurePolicy field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetFailurePolicy(value admissionregistrationv1.FailurePolicyType) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.FailurePolicy = &value
	return b
}

// RemoveFailurePolicy removes the FailurePolicy field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveFailurePolicy() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.FailurePolicy = nil
	return b
}

// GetFailurePolicy gets the FailurePolicy field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetFailurePolicy() (value admissionregistrationv1.FailurePolicyType, ok bool) {
	b.ensureInitialized()
	if v := b.fields.FailurePolicy; v != nil {
		return *v, true
	}
	return value, false
}

// SetMatchPolicy sets the MatchPolicy field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetMatchPolicy(value admissionregistrationv1.MatchPolicyType) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.MatchPolicy = &value
	return b
}

// RemoveMatchPolicy removes the MatchPolicy field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveMatchPolicy() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.MatchPolicy = nil
	return b
}

// GetMatchPolicy gets the MatchPolicy field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetMatchPolicy() (value admissionregistrationv1.MatchPolicyType, ok bool) {
	b.ensureInitialized()
	if v := b.fields.MatchPolicy; v != nil {
		return *v, true
	}
	return value, false
}

// SetNamespaceSelector sets the NamespaceSelector field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetNamespaceSelector(value metav1.LabelSelectorBuilder) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.NamespaceSelector = &value
	return b
}

// RemoveNamespaceSelector removes the NamespaceSelector field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveNamespaceSelector() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.NamespaceSelector = nil
	return b
}

// GetNamespaceSelector gets the NamespaceSelector field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetNamespaceSelector() (value metav1.LabelSelectorBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.NamespaceSelector; v != nil {
		return *v, true
	}
	return value, false
}

// SetObjectSelector sets the ObjectSelector field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetObjectSelector(value metav1.LabelSelectorBuilder) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.ObjectSelector = &value
	return b
}

// RemoveObjectSelector removes the ObjectSelector field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveObjectSelector() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.ObjectSelector = nil
	return b
}

// GetObjectSelector gets the ObjectSelector field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetObjectSelector() (value metav1.LabelSelectorBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ObjectSelector; v != nil {
		return *v, true
	}
	return value, false
}

// SetSideEffects sets the SideEffects field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetSideEffects(value admissionregistrationv1.SideEffectClass) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.SideEffects = &value
	return b
}

// RemoveSideEffects removes the SideEffects field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveSideEffects() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.SideEffects = nil
	return b
}

// GetSideEffects gets the SideEffects field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetSideEffects() (value admissionregistrationv1.SideEffectClass, ok bool) {
	b.ensureInitialized()
	if v := b.fields.SideEffects; v != nil {
		return *v, true
	}
	return value, false
}

// SetTimeoutSeconds sets the TimeoutSeconds field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetTimeoutSeconds(value int32) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.TimeoutSeconds = &value
	return b
}

// RemoveTimeoutSeconds removes the TimeoutSeconds field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveTimeoutSeconds() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.TimeoutSeconds = nil
	return b
}

// GetTimeoutSeconds gets the TimeoutSeconds field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetTimeoutSeconds() (value int32, ok bool) {
	b.ensureInitialized()
	if v := b.fields.TimeoutSeconds; v != nil {
		return *v, true
	}
	return value, false
}

// SetAdmissionReviewVersions sets the AdmissionReviewVersions field in the declarative configuration to the given value.
func (b ValidatingWebhookBuilder) SetAdmissionReviewVersions(value []string) ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.AdmissionReviewVersions = &value
	return b
}

// RemoveAdmissionReviewVersions removes the AdmissionReviewVersions field from the declarative configuration.
func (b ValidatingWebhookBuilder) RemoveAdmissionReviewVersions() ValidatingWebhookBuilder {
	b.ensureInitialized()
	b.fields.AdmissionReviewVersions = nil
	return b
}

// GetAdmissionReviewVersions gets the AdmissionReviewVersions field from the declarative configuration.
func (b ValidatingWebhookBuilder) GetAdmissionReviewVersions() (value []string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.AdmissionReviewVersions; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ValidatingWebhookBuilder to unstructured.
func (b *ValidatingWebhookBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ValidatingWebhookBuilder, replacing the contents
// of ValidatingWebhookBuilder.
func (b *ValidatingWebhookBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &validatingWebhookFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ValidatingWebhookBuilder to JSON.
func (b *ValidatingWebhookBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ValidatingWebhookBuilder, replacing the contents of
// ValidatingWebhookBuilder.
func (b *ValidatingWebhookBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ValidatingWebhookList represents a list of ValidatingWebhookBuilder.
// Provided as a convenience.
type ValidatingWebhookList []ValidatingWebhookBuilder

// ValidatingWebhookList represents a map of ValidatingWebhookBuilder.
// Provided as a convenience.
type ValidatingWebhookMap map[string]ValidatingWebhookBuilder

func (b *ValidatingWebhookBuilder) preMarshal() {
}
func (b *ValidatingWebhookBuilder) postUnmarshal() {
}

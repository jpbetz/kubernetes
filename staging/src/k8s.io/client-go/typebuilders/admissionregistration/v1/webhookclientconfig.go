/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// WebhookClientConfigBuilder represents an declarative configuration of the WebhookClientConfig type for use
// with apply.
type WebhookClientConfigBuilder struct {
	fields webhookClientConfigFields
}

// webhookClientConfigFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in WebhookClientConfigBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type webhookClientConfigFields struct {
	URL      *string                  `json:"url,omitempty"`
	Service  *ServiceReferenceBuilder `json:"service,omitempty"`
	CABundle *[]byte                  `json:"caBundle,omitempty"`
}

// WebhookClientConfig constructs an declarative configuration of the WebhookClientConfig type for use with
// apply.
func WebhookClientConfig() *WebhookClientConfigBuilder {
	return &WebhookClientConfigBuilder{}
}

// SetURL sets the URL field in the declarative configuration to the given value.
func (b *WebhookClientConfigBuilder) SetURL(value string) *WebhookClientConfigBuilder {
	b.fields.URL = &value
	return b
}

// RemoveURL removes the URL field from the declarative configuration.
func (b *WebhookClientConfigBuilder) RemoveURL() *WebhookClientConfigBuilder {
	b.fields.URL = nil
	return b
}

// GetURL gets the URL field from the declarative configuration.
func (b *WebhookClientConfigBuilder) GetURL() (value string, ok bool) {
	if v := b.fields.URL; v != nil {
		return *v, true
	}
	return value, false
}

// SetService sets the Service field in the declarative configuration to the given value.
func (b *WebhookClientConfigBuilder) SetService(value *ServiceReferenceBuilder) *WebhookClientConfigBuilder {
	b.fields.Service = value
	return b
}

// RemoveService removes the Service field from the declarative configuration.
func (b *WebhookClientConfigBuilder) RemoveService() *WebhookClientConfigBuilder {
	b.fields.Service = nil
	return b
}

// GetService gets the Service field from the declarative configuration.
func (b *WebhookClientConfigBuilder) GetService() (value *ServiceReferenceBuilder, ok bool) {
	return b.fields.Service, b.fields.Service != nil
}

// SetCABundle sets the CABundle field in the declarative configuration to the given value.
func (b *WebhookClientConfigBuilder) SetCABundle(value []byte) *WebhookClientConfigBuilder {
	b.fields.CABundle = &value
	return b
}

// RemoveCABundle removes the CABundle field from the declarative configuration.
func (b *WebhookClientConfigBuilder) RemoveCABundle() *WebhookClientConfigBuilder {
	b.fields.CABundle = nil
	return b
}

// GetCABundle gets the CABundle field from the declarative configuration.
func (b *WebhookClientConfigBuilder) GetCABundle() (value []byte, ok bool) {
	if v := b.fields.CABundle; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts WebhookClientConfigBuilder to unstructured.
func (b *WebhookClientConfigBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to WebhookClientConfigBuilder, replacing the contents
// of WebhookClientConfigBuilder.
func (b *WebhookClientConfigBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &webhookClientConfigFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals WebhookClientConfigBuilder to JSON.
func (b *WebhookClientConfigBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into WebhookClientConfigBuilder, replacing the contents of
// WebhookClientConfigBuilder.
func (b *WebhookClientConfigBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// WebhookClientConfigList represents a list of WebhookClientConfigBuilder.
type WebhookClientConfigList []*WebhookClientConfigBuilder

// WebhookClientConfigList represents a map of WebhookClientConfigBuilder.
type WebhookClientConfigMap map[string]WebhookClientConfigBuilder

func (b *WebhookClientConfigBuilder) preMarshal() {
}
func (b *WebhookClientConfigBuilder) postUnmarshal() {
}

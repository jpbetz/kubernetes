/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/core/v1"
)

// IngressStatusApplyConfiguration represents an declarative configuration of the IngressStatus type for use
// with apply.
type IngressStatusApplyConfiguration struct {
	fields ingressStatusFields
}

// IngressStatusApplyConfiguration constructs an declarative configuration of the IngressStatus type for use with
// apply.
func IngressStatus() *IngressStatusApplyConfiguration {
	return &IngressStatusApplyConfiguration{}
}

// ingressStatusFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in IngressStatusApplyConfiguration.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type ingressStatusFields struct {
	LoadBalancer *v1.LoadBalancerStatusApplyConfiguration `json:"loadBalancer,omitempty"`
}

// SetLoadBalancer sets the LoadBalancer field in the declarative configuration to the given value.
func (b *IngressStatusApplyConfiguration) SetLoadBalancer(value *v1.LoadBalancerStatusApplyConfiguration) *IngressStatusApplyConfiguration {
	b.fields.LoadBalancer = value
	return b
}

// RemoveLoadBalancer removes the LoadBalancer field from the declarative configuration.
func (b *IngressStatusApplyConfiguration) RemoveLoadBalancer() *IngressStatusApplyConfiguration {
	b.fields.LoadBalancer = nil
	return b
}

// GetLoadBalancer gets the LoadBalancer field from the declarative configuration.
func (b *IngressStatusApplyConfiguration) GetLoadBalancer() (value *v1.LoadBalancerStatusApplyConfiguration, ok bool) {
	return b.fields.LoadBalancer, b.fields.LoadBalancer != nil
}

// ToUnstructured converts IngressStatusApplyConfiguration to unstructured.
func (b *IngressStatusApplyConfiguration) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to IngressStatusApplyConfiguration, replacing the contents
// of IngressStatusApplyConfiguration.
func (b *IngressStatusApplyConfiguration) FromUnstructured(u map[string]interface{}) error {
	m := &ingressStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals IngressStatusApplyConfiguration to JSON.
func (b *IngressStatusApplyConfiguration) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into IngressStatusApplyConfiguration, replacing the contents of
// IngressStatusApplyConfiguration.
func (b *IngressStatusApplyConfiguration) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// IngressStatusList represents a listAlias of IngressStatusApplyConfiguration.
type IngressStatusList []*IngressStatusApplyConfiguration

// IngressStatusList represents a map of IngressStatusApplyConfiguration.
type IngressStatusMap map[string]IngressStatusApplyConfiguration

func (b *IngressStatusApplyConfiguration) preMarshal() {
}
func (b *IngressStatusApplyConfiguration) postUnmarshal() {
}

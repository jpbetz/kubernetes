/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/core/v1"
)

// IngressStatusBuilder represents an declarative configuration of the IngressStatus type for use
// with apply.
type IngressStatusBuilder struct {
	fields *ingressStatusFields
}

// ingressStatusFields is used by IngressStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in IngressStatusBuilder before marshalling, and
// are copied out to the builder type in IngressStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type ingressStatusFields struct {
	LoadBalancer *v1.LoadBalancerStatusBuilder `json:"loadBalancer,omitempty"`
}

func (b *IngressStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &ingressStatusFields{}
	}
}

// IngressStatus constructs an declarative configuration of the IngressStatus type for use with
// apply.
// Provided as a convenience.
func IngressStatus() IngressStatusBuilder {
	return IngressStatusBuilder{fields: &ingressStatusFields{}}
}

// SetLoadBalancer sets the LoadBalancer field in the declarative configuration to the given value.
func (b IngressStatusBuilder) SetLoadBalancer(value v1.LoadBalancerStatusBuilder) IngressStatusBuilder {
	b.ensureInitialized()
	b.fields.LoadBalancer = &value
	return b
}

// RemoveLoadBalancer removes the LoadBalancer field from the declarative configuration.
func (b IngressStatusBuilder) RemoveLoadBalancer() IngressStatusBuilder {
	b.ensureInitialized()
	b.fields.LoadBalancer = nil
	return b
}

// GetLoadBalancer gets the LoadBalancer field from the declarative configuration.
func (b IngressStatusBuilder) GetLoadBalancer() (value v1.LoadBalancerStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.LoadBalancer; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts IngressStatusBuilder to unstructured.
func (b *IngressStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to IngressStatusBuilder, replacing the contents
// of IngressStatusBuilder.
func (b *IngressStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &ingressStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals IngressStatusBuilder to JSON.
func (b *IngressStatusBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into IngressStatusBuilder, replacing the contents of
// IngressStatusBuilder.
func (b *IngressStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// IngressStatusList represents a list of IngressStatusBuilder.
// Provided as a convenience.
type IngressStatusList []IngressStatusBuilder

// IngressStatusList represents a map of IngressStatusBuilder.
// Provided as a convenience.
type IngressStatusMap map[string]IngressStatusBuilder

func (b *IngressStatusBuilder) preMarshal() {
}
func (b *IngressStatusBuilder) postUnmarshal() {
}

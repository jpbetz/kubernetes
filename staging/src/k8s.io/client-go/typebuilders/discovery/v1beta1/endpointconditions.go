/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// EndpointConditionsBuilder represents an declarative configuration of the EndpointConditions type for use
// with apply.
type EndpointConditionsBuilder struct {
	fields *endpointConditionsFields
}

// endpointConditionsFields is used by EndpointConditionsBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in EndpointConditionsBuilder before marshalling, and
// are copied out to the builder type in EndpointConditionsBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type endpointConditionsFields struct {
	Ready *bool `json:"ready,omitempty"`
}

func (b *EndpointConditionsBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &endpointConditionsFields{}
	}
}

// EndpointConditions constructs an declarative configuration of the EndpointConditions type for use with
// apply.
// Provided as a convenience.
func EndpointConditions() EndpointConditionsBuilder {
	return EndpointConditionsBuilder{fields: &endpointConditionsFields{}}
}

// SetReady sets the Ready field in the declarative configuration to the given value.
func (b EndpointConditionsBuilder) SetReady(value bool) EndpointConditionsBuilder {
	b.ensureInitialized()
	b.fields.Ready = &value
	return b
}

// RemoveReady removes the Ready field from the declarative configuration.
func (b EndpointConditionsBuilder) RemoveReady() EndpointConditionsBuilder {
	b.ensureInitialized()
	b.fields.Ready = nil
	return b
}

// GetReady gets the Ready field from the declarative configuration.
func (b EndpointConditionsBuilder) GetReady() (value bool, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Ready; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts EndpointConditionsBuilder to unstructured.
func (b *EndpointConditionsBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to EndpointConditionsBuilder, replacing the contents
// of EndpointConditionsBuilder.
func (b *EndpointConditionsBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &endpointConditionsFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals EndpointConditionsBuilder to JSON.
func (b *EndpointConditionsBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into EndpointConditionsBuilder, replacing the contents of
// EndpointConditionsBuilder.
func (b *EndpointConditionsBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// EndpointConditionsList represents a list of EndpointConditionsBuilder.
// Provided as a convenience.
type EndpointConditionsList []EndpointConditionsBuilder

// EndpointConditionsList represents a map of EndpointConditionsBuilder.
// Provided as a convenience.
type EndpointConditionsMap map[string]EndpointConditionsBuilder

func (b *EndpointConditionsBuilder) preMarshal() {
}
func (b *EndpointConditionsBuilder) postUnmarshal() {
}

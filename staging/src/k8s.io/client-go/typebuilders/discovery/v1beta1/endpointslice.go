/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	v1beta1 "k8s.io/api/discovery/v1beta1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// EndpointSliceBuilder represents an declarative configuration of the EndpointSlice type for use
// with apply.
type EndpointSliceBuilder struct {
	typeMeta v1.TypeMetaBuilder // inlined type
	fields   *endpointSliceFields
}

// endpointSliceFields is used by EndpointSliceBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in EndpointSliceBuilder before marshalling, and
// are copied out to the builder type in EndpointSliceBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type endpointSliceFields struct {
	Kind        *string               `json:"kind,omitempty"`       // inlined EndpointSliceBuilder.typeMeta.Kind field
	APIVersion  *string               `json:"apiVersion,omitempty"` // inlined EndpointSliceBuilder.typeMeta.APIVersion field
	ObjectMeta  *v1.ObjectMetaBuilder `json:"metadata,omitempty"`
	AddressType *v1beta1.AddressType  `json:"addressType,omitempty"`
	Endpoints   *EndpointList         `json:"endpoints,omitempty"`
	Ports       *EndpointPortList     `json:"ports,omitempty"`
}

func (b *EndpointSliceBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &endpointSliceFields{}
	}
}

// EndpointSlice constructs an declarative configuration of the EndpointSlice type for use with
// apply.
// Provided as a convenience.
func EndpointSlice() EndpointSliceBuilder {
	return EndpointSliceBuilder{fields: &endpointSliceFields{}}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b EndpointSliceBuilder) SetTypeMeta(value v1.TypeMetaBuilder) EndpointSliceBuilder {
	b.ensureInitialized()
	b.typeMeta = value
	return b
}

// RemoveTypeMeta removes the TypeMeta field from the declarative configuration.
func (b EndpointSliceBuilder) RemoveTypeMeta() EndpointSliceBuilder {
	b.ensureInitialized()
	b.typeMeta = v1.TypeMetaBuilder{}
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b EndpointSliceBuilder) GetTypeMeta() (value v1.TypeMetaBuilder, ok bool) {
	b.ensureInitialized()
	return b.typeMeta, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b EndpointSliceBuilder) SetObjectMeta(value v1.ObjectMetaBuilder) EndpointSliceBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = &value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b EndpointSliceBuilder) RemoveObjectMeta() EndpointSliceBuilder {
	b.ensureInitialized()
	b.fields.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b EndpointSliceBuilder) GetObjectMeta() (value v1.ObjectMetaBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.ObjectMeta; v != nil {
		return *v, true
	}
	return value, false
}

// SetAddressType sets the AddressType field in the declarative configuration to the given value.
func (b EndpointSliceBuilder) SetAddressType(value v1beta1.AddressType) EndpointSliceBuilder {
	b.ensureInitialized()
	b.fields.AddressType = &value
	return b
}

// RemoveAddressType removes the AddressType field from the declarative configuration.
func (b EndpointSliceBuilder) RemoveAddressType() EndpointSliceBuilder {
	b.ensureInitialized()
	b.fields.AddressType = nil
	return b
}

// GetAddressType gets the AddressType field from the declarative configuration.
func (b EndpointSliceBuilder) GetAddressType() (value v1beta1.AddressType, ok bool) {
	b.ensureInitialized()
	if v := b.fields.AddressType; v != nil {
		return *v, true
	}
	return value, false
}

// SetEndpoints sets the Endpoints field in the declarative configuration to the given value.
func (b EndpointSliceBuilder) SetEndpoints(value EndpointList) EndpointSliceBuilder {
	b.ensureInitialized()
	b.fields.Endpoints = &value
	return b
}

// RemoveEndpoints removes the Endpoints field from the declarative configuration.
func (b EndpointSliceBuilder) RemoveEndpoints() EndpointSliceBuilder {
	b.ensureInitialized()
	b.fields.Endpoints = nil
	return b
}

// GetEndpoints gets the Endpoints field from the declarative configuration.
func (b EndpointSliceBuilder) GetEndpoints() (value EndpointList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Endpoints; v != nil {
		return *v, true
	}
	return value, false
}

// SetPorts sets the Ports field in the declarative configuration to the given value.
func (b EndpointSliceBuilder) SetPorts(value EndpointPortList) EndpointSliceBuilder {
	b.ensureInitialized()
	b.fields.Ports = &value
	return b
}

// RemovePorts removes the Ports field from the declarative configuration.
func (b EndpointSliceBuilder) RemovePorts() EndpointSliceBuilder {
	b.ensureInitialized()
	b.fields.Ports = nil
	return b
}

// GetPorts gets the Ports field from the declarative configuration.
func (b EndpointSliceBuilder) GetPorts() (value EndpointPortList, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Ports; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts EndpointSliceBuilder to unstructured.
func (b *EndpointSliceBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to EndpointSliceBuilder, replacing the contents
// of EndpointSliceBuilder.
func (b *EndpointSliceBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &endpointSliceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals EndpointSliceBuilder to JSON.
func (b *EndpointSliceBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into EndpointSliceBuilder, replacing the contents of
// EndpointSliceBuilder.
func (b *EndpointSliceBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// EndpointSliceList represents a list of EndpointSliceBuilder.
// Provided as a convenience.
type EndpointSliceList []EndpointSliceBuilder

// EndpointSliceList represents a map of EndpointSliceBuilder.
// Provided as a convenience.
type EndpointSliceMap map[string]EndpointSliceBuilder

func (b *EndpointSliceBuilder) preMarshal() {
	if v, ok := b.typeMeta.GetKind(); ok {
		b.fields.Kind = &v
	}
	if v, ok := b.typeMeta.GetAPIVersion(); ok {
		b.fields.APIVersion = &v
	}
}
func (b *EndpointSliceBuilder) postUnmarshal() {
	if b.fields.Kind != nil {
		b.typeMeta.SetKind(*b.fields.Kind)
	}
	if b.fields.APIVersion != nil {
		b.typeMeta.SetAPIVersion(*b.fields.APIVersion)
	}
}

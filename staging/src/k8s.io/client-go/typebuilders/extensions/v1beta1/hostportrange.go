/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// HostPortRangeBuilder represents an declarative configuration of the HostPortRange type for use
// with apply.
type HostPortRangeBuilder struct {
	fields *hostPortRangeFields
}

// hostPortRangeFields is used by HostPortRangeBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in HostPortRangeBuilder before marshalling, and
// are copied out to the builder type in HostPortRangeBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type hostPortRangeFields struct {
	Min *int32 `json:"min,omitempty"`
	Max *int32 `json:"max,omitempty"`
}

func (b *HostPortRangeBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &hostPortRangeFields{}
	}
}

// HostPortRange constructs an declarative configuration of the HostPortRange type for use with
// apply.
// Provided as a convenience.
func HostPortRange() HostPortRangeBuilder {
	return HostPortRangeBuilder{fields: &hostPortRangeFields{}}
}

// SetMin sets the Min field in the declarative configuration to the given value.
func (b HostPortRangeBuilder) SetMin(value int32) HostPortRangeBuilder {
	b.ensureInitialized()
	b.fields.Min = &value
	return b
}

// RemoveMin removes the Min field from the declarative configuration.
func (b HostPortRangeBuilder) RemoveMin() HostPortRangeBuilder {
	b.ensureInitialized()
	b.fields.Min = nil
	return b
}

// GetMin gets the Min field from the declarative configuration.
func (b HostPortRangeBuilder) GetMin() (value int32, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Min; v != nil {
		return *v, true
	}
	return value, false
}

// SetMax sets the Max field in the declarative configuration to the given value.
func (b HostPortRangeBuilder) SetMax(value int32) HostPortRangeBuilder {
	b.ensureInitialized()
	b.fields.Max = &value
	return b
}

// RemoveMax removes the Max field from the declarative configuration.
func (b HostPortRangeBuilder) RemoveMax() HostPortRangeBuilder {
	b.ensureInitialized()
	b.fields.Max = nil
	return b
}

// GetMax gets the Max field from the declarative configuration.
func (b HostPortRangeBuilder) GetMax() (value int32, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Max; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts HostPortRangeBuilder to unstructured.
func (b *HostPortRangeBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to HostPortRangeBuilder, replacing the contents
// of HostPortRangeBuilder.
func (b *HostPortRangeBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &hostPortRangeFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals HostPortRangeBuilder to JSON.
func (b *HostPortRangeBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into HostPortRangeBuilder, replacing the contents of
// HostPortRangeBuilder.
func (b *HostPortRangeBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// HostPortRangeList represents a list of HostPortRangeBuilder.
// Provided as a convenience.
type HostPortRangeList []HostPortRangeBuilder

// HostPortRangeList represents a map of HostPortRangeBuilder.
// Provided as a convenience.
type HostPortRangeMap map[string]HostPortRangeBuilder

func (b *HostPortRangeBuilder) preMarshal() {
}
func (b *HostPortRangeBuilder) postUnmarshal() {
}

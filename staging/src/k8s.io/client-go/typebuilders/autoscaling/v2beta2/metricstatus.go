/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta2

import (
	json "encoding/json"

	v2beta2 "k8s.io/api/autoscaling/v2beta2"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// MetricStatusBuilder represents an declarative configuration of the MetricStatus type for use
// with apply.
type MetricStatusBuilder struct {
	fields *metricStatusFields
}

// metricStatusFields is used by MetricStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in MetricStatusBuilder before marshalling, and
// are copied out to the builder type in MetricStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type metricStatusFields struct {
	Type     *v2beta2.MetricSourceType    `json:"type,omitempty"`
	Object   *ObjectMetricStatusBuilder   `json:"object,omitempty"`
	Pods     *PodsMetricStatusBuilder     `json:"pods,omitempty"`
	Resource *ResourceMetricStatusBuilder `json:"resource,omitempty"`
	External *ExternalMetricStatusBuilder `json:"external,omitempty"`
}

func (b *MetricStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &metricStatusFields{}
	}
}

// MetricStatus constructs an declarative configuration of the MetricStatus type for use with
// apply.
// Provided as a convenience.
func MetricStatus() MetricStatusBuilder {
	return MetricStatusBuilder{fields: &metricStatusFields{}}
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b MetricStatusBuilder) SetType(value v2beta2.MetricSourceType) MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b MetricStatusBuilder) RemoveType() MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b MetricStatusBuilder) GetType() (value v2beta2.MetricSourceType, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Type; v != nil {
		return *v, true
	}
	return value, false
}

// SetObject sets the Object field in the declarative configuration to the given value.
func (b MetricStatusBuilder) SetObject(value ObjectMetricStatusBuilder) MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Object = &value
	return b
}

// RemoveObject removes the Object field from the declarative configuration.
func (b MetricStatusBuilder) RemoveObject() MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Object = nil
	return b
}

// GetObject gets the Object field from the declarative configuration.
func (b MetricStatusBuilder) GetObject() (value ObjectMetricStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Object; v != nil {
		return *v, true
	}
	return value, false
}

// SetPods sets the Pods field in the declarative configuration to the given value.
func (b MetricStatusBuilder) SetPods(value PodsMetricStatusBuilder) MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Pods = &value
	return b
}

// RemovePods removes the Pods field from the declarative configuration.
func (b MetricStatusBuilder) RemovePods() MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Pods = nil
	return b
}

// GetPods gets the Pods field from the declarative configuration.
func (b MetricStatusBuilder) GetPods() (value PodsMetricStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Pods; v != nil {
		return *v, true
	}
	return value, false
}

// SetResource sets the Resource field in the declarative configuration to the given value.
func (b MetricStatusBuilder) SetResource(value ResourceMetricStatusBuilder) MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Resource = &value
	return b
}

// RemoveResource removes the Resource field from the declarative configuration.
func (b MetricStatusBuilder) RemoveResource() MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Resource = nil
	return b
}

// GetResource gets the Resource field from the declarative configuration.
func (b MetricStatusBuilder) GetResource() (value ResourceMetricStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Resource; v != nil {
		return *v, true
	}
	return value, false
}

// SetExternal sets the External field in the declarative configuration to the given value.
func (b MetricStatusBuilder) SetExternal(value ExternalMetricStatusBuilder) MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.External = &value
	return b
}

// RemoveExternal removes the External field from the declarative configuration.
func (b MetricStatusBuilder) RemoveExternal() MetricStatusBuilder {
	b.ensureInitialized()
	b.fields.External = nil
	return b
}

// GetExternal gets the External field from the declarative configuration.
func (b MetricStatusBuilder) GetExternal() (value ExternalMetricStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.External; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts MetricStatusBuilder to unstructured.
func (b *MetricStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to MetricStatusBuilder, replacing the contents
// of MetricStatusBuilder.
func (b *MetricStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &metricStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals MetricStatusBuilder to JSON.
func (b *MetricStatusBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into MetricStatusBuilder, replacing the contents of
// MetricStatusBuilder.
func (b *MetricStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// MetricStatusList represents a list of MetricStatusBuilder.
// Provided as a convenience.
type MetricStatusList []MetricStatusBuilder

// MetricStatusList represents a map of MetricStatusBuilder.
// Provided as a convenience.
type MetricStatusMap map[string]MetricStatusBuilder

func (b *MetricStatusBuilder) preMarshal() {
}
func (b *MetricStatusBuilder) postUnmarshal() {
}

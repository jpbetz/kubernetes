/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta2

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// PodsMetricStatusBuilder represents an declarative configuration of the PodsMetricStatus type for use
// with apply.
type PodsMetricStatusBuilder struct {
	fields *podsMetricStatusFields
}

// podsMetricStatusFields is used by PodsMetricStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in PodsMetricStatusBuilder before marshalling, and
// are copied out to the builder type in PodsMetricStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type podsMetricStatusFields struct {
	Metric  *MetricIdentifierBuilder  `json:"metric,omitempty"`
	Current *MetricValueStatusBuilder `json:"current,omitempty"`
}

func (b *PodsMetricStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &podsMetricStatusFields{}
	}
}

// PodsMetricStatus constructs an declarative configuration of the PodsMetricStatus type for use with
// apply.
// Provided as a convenience.
func PodsMetricStatus() PodsMetricStatusBuilder {
	return PodsMetricStatusBuilder{fields: &podsMetricStatusFields{}}
}

// SetMetric sets the Metric field in the declarative configuration to the given value.
func (b PodsMetricStatusBuilder) SetMetric(value MetricIdentifierBuilder) PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Metric = &value
	return b
}

// RemoveMetric removes the Metric field from the declarative configuration.
func (b PodsMetricStatusBuilder) RemoveMetric() PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Metric = nil
	return b
}

// GetMetric gets the Metric field from the declarative configuration.
func (b PodsMetricStatusBuilder) GetMetric() (value MetricIdentifierBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Metric; v != nil {
		return *v, true
	}
	return value, false
}

// SetCurrent sets the Current field in the declarative configuration to the given value.
func (b PodsMetricStatusBuilder) SetCurrent(value MetricValueStatusBuilder) PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Current = &value
	return b
}

// RemoveCurrent removes the Current field from the declarative configuration.
func (b PodsMetricStatusBuilder) RemoveCurrent() PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Current = nil
	return b
}

// GetCurrent gets the Current field from the declarative configuration.
func (b PodsMetricStatusBuilder) GetCurrent() (value MetricValueStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Current; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts PodsMetricStatusBuilder to unstructured.
func (b *PodsMetricStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to PodsMetricStatusBuilder, replacing the contents
// of PodsMetricStatusBuilder.
func (b *PodsMetricStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &podsMetricStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals PodsMetricStatusBuilder to JSON.
func (b *PodsMetricStatusBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into PodsMetricStatusBuilder, replacing the contents of
// PodsMetricStatusBuilder.
func (b *PodsMetricStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// PodsMetricStatusList represents a list of PodsMetricStatusBuilder.
// Provided as a convenience.
type PodsMetricStatusList []PodsMetricStatusBuilder

// PodsMetricStatusList represents a map of PodsMetricStatusBuilder.
// Provided as a convenience.
type PodsMetricStatusMap map[string]PodsMetricStatusBuilder

func (b *PodsMetricStatusBuilder) preMarshal() {
}
func (b *PodsMetricStatusBuilder) postUnmarshal() {
}

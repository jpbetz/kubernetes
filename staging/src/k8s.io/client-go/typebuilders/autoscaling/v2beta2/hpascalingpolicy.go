/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta2

import (
	json "encoding/json"

	v2beta2 "k8s.io/api/autoscaling/v2beta2"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// HPAScalingPolicyBuilder represents an declarative configuration of the HPAScalingPolicy type for use
// with apply.
type HPAScalingPolicyBuilder struct {
	fields hPAScalingPolicyFields
}

// hPAScalingPolicyFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in HPAScalingPolicyBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type hPAScalingPolicyFields struct {
	Type          *v2beta2.HPAScalingPolicyType `json:"type,omitempty"`
	Value         *int32                        `json:"value,omitempty"`
	PeriodSeconds *int32                        `json:"periodSeconds,omitempty"`
}

// HPAScalingPolicy constructs an declarative configuration of the HPAScalingPolicy type for use with
// apply.
func HPAScalingPolicy() *HPAScalingPolicyBuilder {
	return &HPAScalingPolicyBuilder{}
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *HPAScalingPolicyBuilder) SetType(value v2beta2.HPAScalingPolicyType) *HPAScalingPolicyBuilder {
	b.fields.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b *HPAScalingPolicyBuilder) RemoveType() *HPAScalingPolicyBuilder {
	b.fields.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b *HPAScalingPolicyBuilder) GetType() (value v2beta2.HPAScalingPolicyType, ok bool) {
	if v := b.fields.Type; v != nil {
		return *v, true
	}
	return value, false
}

// SetValue sets the Value field in the declarative configuration to the given value.
func (b *HPAScalingPolicyBuilder) SetValue(value int32) *HPAScalingPolicyBuilder {
	b.fields.Value = &value
	return b
}

// RemoveValue removes the Value field from the declarative configuration.
func (b *HPAScalingPolicyBuilder) RemoveValue() *HPAScalingPolicyBuilder {
	b.fields.Value = nil
	return b
}

// GetValue gets the Value field from the declarative configuration.
func (b *HPAScalingPolicyBuilder) GetValue() (value int32, ok bool) {
	if v := b.fields.Value; v != nil {
		return *v, true
	}
	return value, false
}

// SetPeriodSeconds sets the PeriodSeconds field in the declarative configuration to the given value.
func (b *HPAScalingPolicyBuilder) SetPeriodSeconds(value int32) *HPAScalingPolicyBuilder {
	b.fields.PeriodSeconds = &value
	return b
}

// RemovePeriodSeconds removes the PeriodSeconds field from the declarative configuration.
func (b *HPAScalingPolicyBuilder) RemovePeriodSeconds() *HPAScalingPolicyBuilder {
	b.fields.PeriodSeconds = nil
	return b
}

// GetPeriodSeconds gets the PeriodSeconds field from the declarative configuration.
func (b *HPAScalingPolicyBuilder) GetPeriodSeconds() (value int32, ok bool) {
	if v := b.fields.PeriodSeconds; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts HPAScalingPolicyBuilder to unstructured.
func (b *HPAScalingPolicyBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to HPAScalingPolicyBuilder, replacing the contents
// of HPAScalingPolicyBuilder.
func (b *HPAScalingPolicyBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &hPAScalingPolicyFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals HPAScalingPolicyBuilder to JSON.
func (b *HPAScalingPolicyBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into HPAScalingPolicyBuilder, replacing the contents of
// HPAScalingPolicyBuilder.
func (b *HPAScalingPolicyBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// HPAScalingPolicyList represents a list of HPAScalingPolicyBuilder.
type HPAScalingPolicyList []*HPAScalingPolicyBuilder

// HPAScalingPolicyList represents a map of HPAScalingPolicyBuilder.
type HPAScalingPolicyMap map[string]HPAScalingPolicyBuilder

func (b *HPAScalingPolicyBuilder) preMarshal() {
}
func (b *HPAScalingPolicyBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta2

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ContainerResourceMetricStatusBuilder represents an declarative configuration of the ContainerResourceMetricStatus type for use
// with apply.
type ContainerResourceMetricStatusBuilder struct {
	fields *containerResourceMetricStatusFields
}

// containerResourceMetricStatusFields is used by ContainerResourceMetricStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ContainerResourceMetricStatusBuilder before marshalling, and
// are copied out to the builder type in ContainerResourceMetricStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type containerResourceMetricStatusFields struct {
	Name      *v1.ResourceName          `json:"name,omitempty"`
	Current   *MetricValueStatusBuilder `json:"current,omitempty"`
	Container *string                   `json:"container,omitempty"`
}

func (b *ContainerResourceMetricStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &containerResourceMetricStatusFields{}
	}
}

// ContainerResourceMetricStatus constructs an declarative configuration of the ContainerResourceMetricStatus type for use with
// apply.
// Provided as a convenience.
func ContainerResourceMetricStatus() ContainerResourceMetricStatusBuilder {
	return ContainerResourceMetricStatusBuilder{fields: &containerResourceMetricStatusFields{}}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b ContainerResourceMetricStatusBuilder) SetName(value v1.ResourceName) ContainerResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b ContainerResourceMetricStatusBuilder) RemoveName() ContainerResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b ContainerResourceMetricStatusBuilder) GetName() (value v1.ResourceName, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetCurrent sets the Current field in the declarative configuration to the given value.
func (b ContainerResourceMetricStatusBuilder) SetCurrent(value MetricValueStatusBuilder) ContainerResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Current = &value
	return b
}

// RemoveCurrent removes the Current field from the declarative configuration.
func (b ContainerResourceMetricStatusBuilder) RemoveCurrent() ContainerResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Current = nil
	return b
}

// GetCurrent gets the Current field from the declarative configuration.
func (b ContainerResourceMetricStatusBuilder) GetCurrent() (value MetricValueStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Current; v != nil {
		return *v, true
	}
	return value, false
}

// SetContainer sets the Container field in the declarative configuration to the given value.
func (b ContainerResourceMetricStatusBuilder) SetContainer(value string) ContainerResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Container = &value
	return b
}

// RemoveContainer removes the Container field from the declarative configuration.
func (b ContainerResourceMetricStatusBuilder) RemoveContainer() ContainerResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Container = nil
	return b
}

// GetContainer gets the Container field from the declarative configuration.
func (b ContainerResourceMetricStatusBuilder) GetContainer() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Container; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ContainerResourceMetricStatusBuilder to unstructured.
func (b *ContainerResourceMetricStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ContainerResourceMetricStatusBuilder, replacing the contents
// of ContainerResourceMetricStatusBuilder.
func (b *ContainerResourceMetricStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &containerResourceMetricStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ContainerResourceMetricStatusBuilder to JSON.
func (b *ContainerResourceMetricStatusBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ContainerResourceMetricStatusBuilder, replacing the contents of
// ContainerResourceMetricStatusBuilder.
func (b *ContainerResourceMetricStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ContainerResourceMetricStatusList represents a list of ContainerResourceMetricStatusBuilder.
// Provided as a convenience.
type ContainerResourceMetricStatusList []ContainerResourceMetricStatusBuilder

// ContainerResourceMetricStatusList represents a map of ContainerResourceMetricStatusBuilder.
// Provided as a convenience.
type ContainerResourceMetricStatusMap map[string]ContainerResourceMetricStatusBuilder

func (b *ContainerResourceMetricStatusBuilder) preMarshal() {
}
func (b *ContainerResourceMetricStatusBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta2

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ResourceMetricStatusBuilder represents an declarative configuration of the ResourceMetricStatus type for use
// with apply.
type ResourceMetricStatusBuilder struct {
	fields resourceMetricStatusFields
}

// resourceMetricStatusFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in ResourceMetricStatusBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type resourceMetricStatusFields struct {
	Name    *v1.ResourceName          `json:"name,omitempty"`
	Current *MetricValueStatusBuilder `json:"current,omitempty"`
}

// ResourceMetricStatus constructs an declarative configuration of the ResourceMetricStatus type for use with
// apply.
func ResourceMetricStatus() *ResourceMetricStatusBuilder {
	return &ResourceMetricStatusBuilder{}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b *ResourceMetricStatusBuilder) SetName(value v1.ResourceName) *ResourceMetricStatusBuilder {
	b.fields.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b *ResourceMetricStatusBuilder) RemoveName() *ResourceMetricStatusBuilder {
	b.fields.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b *ResourceMetricStatusBuilder) GetName() (value v1.ResourceName, ok bool) {
	if v := b.fields.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetCurrent sets the Current field in the declarative configuration to the given value.
func (b *ResourceMetricStatusBuilder) SetCurrent(value *MetricValueStatusBuilder) *ResourceMetricStatusBuilder {
	b.fields.Current = value
	return b
}

// RemoveCurrent removes the Current field from the declarative configuration.
func (b *ResourceMetricStatusBuilder) RemoveCurrent() *ResourceMetricStatusBuilder {
	b.fields.Current = nil
	return b
}

// GetCurrent gets the Current field from the declarative configuration.
func (b *ResourceMetricStatusBuilder) GetCurrent() (value *MetricValueStatusBuilder, ok bool) {
	return b.fields.Current, b.fields.Current != nil
}

// ToUnstructured converts ResourceMetricStatusBuilder to unstructured.
func (b *ResourceMetricStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ResourceMetricStatusBuilder, replacing the contents
// of ResourceMetricStatusBuilder.
func (b *ResourceMetricStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &resourceMetricStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ResourceMetricStatusBuilder to JSON.
func (b *ResourceMetricStatusBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ResourceMetricStatusBuilder, replacing the contents of
// ResourceMetricStatusBuilder.
func (b *ResourceMetricStatusBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ResourceMetricStatusList represents a list of ResourceMetricStatusBuilder.
type ResourceMetricStatusList []*ResourceMetricStatusBuilder

// ResourceMetricStatusList represents a map of ResourceMetricStatusBuilder.
type ResourceMetricStatusMap map[string]ResourceMetricStatusBuilder

func (b *ResourceMetricStatusBuilder) preMarshal() {
}
func (b *ResourceMetricStatusBuilder) postUnmarshal() {
}

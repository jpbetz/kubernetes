/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta2

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ExternalMetricStatusBuilder represents an declarative configuration of the ExternalMetricStatus type for use
// with apply.
type ExternalMetricStatusBuilder struct {
	fields *externalMetricStatusFields
}

// externalMetricStatusFields is used by ExternalMetricStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ExternalMetricStatusBuilder before marshalling, and
// are copied out to the builder type in ExternalMetricStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type externalMetricStatusFields struct {
	Metric  *MetricIdentifierBuilder  `json:"metric,omitempty"`
	Current *MetricValueStatusBuilder `json:"current,omitempty"`
}

func (b *ExternalMetricStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &externalMetricStatusFields{}
	}
}

// ExternalMetricStatus constructs an declarative configuration of the ExternalMetricStatus type for use with
// apply.
// Provided as a convenience.
func ExternalMetricStatus() ExternalMetricStatusBuilder {
	return ExternalMetricStatusBuilder{fields: &externalMetricStatusFields{}}
}

// SetMetric sets the Metric field in the declarative configuration to the given value.
func (b ExternalMetricStatusBuilder) SetMetric(value MetricIdentifierBuilder) ExternalMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Metric = &value
	return b
}

// RemoveMetric removes the Metric field from the declarative configuration.
func (b ExternalMetricStatusBuilder) RemoveMetric() ExternalMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Metric = nil
	return b
}

// GetMetric gets the Metric field from the declarative configuration.
func (b ExternalMetricStatusBuilder) GetMetric() (value MetricIdentifierBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Metric; v != nil {
		return *v, true
	}
	return value, false
}

// SetCurrent sets the Current field in the declarative configuration to the given value.
func (b ExternalMetricStatusBuilder) SetCurrent(value MetricValueStatusBuilder) ExternalMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Current = &value
	return b
}

// RemoveCurrent removes the Current field from the declarative configuration.
func (b ExternalMetricStatusBuilder) RemoveCurrent() ExternalMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Current = nil
	return b
}

// GetCurrent gets the Current field from the declarative configuration.
func (b ExternalMetricStatusBuilder) GetCurrent() (value MetricValueStatusBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Current; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ExternalMetricStatusBuilder to unstructured.
func (b *ExternalMetricStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ExternalMetricStatusBuilder, replacing the contents
// of ExternalMetricStatusBuilder.
func (b *ExternalMetricStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &externalMetricStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ExternalMetricStatusBuilder to JSON.
func (b *ExternalMetricStatusBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into ExternalMetricStatusBuilder, replacing the contents of
// ExternalMetricStatusBuilder.
func (b *ExternalMetricStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ExternalMetricStatusList represents a list of ExternalMetricStatusBuilder.
// Provided as a convenience.
type ExternalMetricStatusList []ExternalMetricStatusBuilder

// ExternalMetricStatusList represents a map of ExternalMetricStatusBuilder.
// Provided as a convenience.
type ExternalMetricStatusMap map[string]ExternalMetricStatusBuilder

func (b *ExternalMetricStatusBuilder) preMarshal() {
}
func (b *ExternalMetricStatusBuilder) postUnmarshal() {
}

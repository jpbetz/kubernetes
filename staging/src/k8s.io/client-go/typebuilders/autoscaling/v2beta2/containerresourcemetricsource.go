/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta2

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ContainerResourceMetricSourceBuilder represents an declarative configuration of the ContainerResourceMetricSource type for use
// with apply.
type ContainerResourceMetricSourceBuilder struct {
	fields *containerResourceMetricSourceFields
}

// containerResourceMetricSourceFields is used by ContainerResourceMetricSourceBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ContainerResourceMetricSourceBuilder before marshalling, and
// are copied out to the builder type in ContainerResourceMetricSourceBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type containerResourceMetricSourceFields struct {
	Name      *v1.ResourceName     `json:"name,omitempty"`
	Target    *MetricTargetBuilder `json:"target,omitempty"`
	Container *string              `json:"container,omitempty"`
}

func (b *ContainerResourceMetricSourceBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &containerResourceMetricSourceFields{}
	}
}

// ContainerResourceMetricSource constructs an declarative configuration of the ContainerResourceMetricSource type for use with
// apply.
// Provided as a convenience.
func ContainerResourceMetricSource() ContainerResourceMetricSourceBuilder {
	return ContainerResourceMetricSourceBuilder{fields: &containerResourceMetricSourceFields{}}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b ContainerResourceMetricSourceBuilder) SetName(value v1.ResourceName) ContainerResourceMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b ContainerResourceMetricSourceBuilder) RemoveName() ContainerResourceMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b ContainerResourceMetricSourceBuilder) GetName() (value v1.ResourceName, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetTarget sets the Target field in the declarative configuration to the given value.
func (b ContainerResourceMetricSourceBuilder) SetTarget(value MetricTargetBuilder) ContainerResourceMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.Target = &value
	return b
}

// RemoveTarget removes the Target field from the declarative configuration.
func (b ContainerResourceMetricSourceBuilder) RemoveTarget() ContainerResourceMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.Target = nil
	return b
}

// GetTarget gets the Target field from the declarative configuration.
func (b ContainerResourceMetricSourceBuilder) GetTarget() (value MetricTargetBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Target; v != nil {
		return *v, true
	}
	return value, false
}

// SetContainer sets the Container field in the declarative configuration to the given value.
func (b ContainerResourceMetricSourceBuilder) SetContainer(value string) ContainerResourceMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.Container = &value
	return b
}

// RemoveContainer removes the Container field from the declarative configuration.
func (b ContainerResourceMetricSourceBuilder) RemoveContainer() ContainerResourceMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.Container = nil
	return b
}

// GetContainer gets the Container field from the declarative configuration.
func (b ContainerResourceMetricSourceBuilder) GetContainer() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Container; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ContainerResourceMetricSourceBuilder to unstructured.
func (b *ContainerResourceMetricSourceBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ContainerResourceMetricSourceBuilder, replacing the contents
// of ContainerResourceMetricSourceBuilder.
func (b *ContainerResourceMetricSourceBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &containerResourceMetricSourceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ContainerResourceMetricSourceBuilder to JSON.
func (b *ContainerResourceMetricSourceBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ContainerResourceMetricSourceBuilder, replacing the contents of
// ContainerResourceMetricSourceBuilder.
func (b *ContainerResourceMetricSourceBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ContainerResourceMetricSourceList represents a list of ContainerResourceMetricSourceBuilder.
// Provided as a convenience.
type ContainerResourceMetricSourceList []ContainerResourceMetricSourceBuilder

// ContainerResourceMetricSourceList represents a map of ContainerResourceMetricSourceBuilder.
// Provided as a convenience.
type ContainerResourceMetricSourceMap map[string]ContainerResourceMetricSourceBuilder

func (b *ContainerResourceMetricSourceBuilder) preMarshal() {
}
func (b *ContainerResourceMetricSourceBuilder) postUnmarshal() {
}

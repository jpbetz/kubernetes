/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta2

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// MetricIdentifierBuilder represents an declarative configuration of the MetricIdentifier type for use
// with apply.
type MetricIdentifierBuilder struct {
	fields metricIdentifierFields
}

// metricIdentifierFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in MetricIdentifierBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type metricIdentifierFields struct {
	Name     *string                  `json:"name,omitempty"`
	Selector *v1.LabelSelectorBuilder `json:"selector,omitempty"`
}

// MetricIdentifier constructs an declarative configuration of the MetricIdentifier type for use with
// apply.
func MetricIdentifier() *MetricIdentifierBuilder {
	return &MetricIdentifierBuilder{}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b *MetricIdentifierBuilder) SetName(value string) *MetricIdentifierBuilder {
	b.fields.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b *MetricIdentifierBuilder) RemoveName() *MetricIdentifierBuilder {
	b.fields.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b *MetricIdentifierBuilder) GetName() (value string, ok bool) {
	if v := b.fields.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b *MetricIdentifierBuilder) SetSelector(value *v1.LabelSelectorBuilder) *MetricIdentifierBuilder {
	b.fields.Selector = value
	return b
}

// RemoveSelector removes the Selector field from the declarative configuration.
func (b *MetricIdentifierBuilder) RemoveSelector() *MetricIdentifierBuilder {
	b.fields.Selector = nil
	return b
}

// GetSelector gets the Selector field from the declarative configuration.
func (b *MetricIdentifierBuilder) GetSelector() (value *v1.LabelSelectorBuilder, ok bool) {
	return b.fields.Selector, b.fields.Selector != nil
}

// ToUnstructured converts MetricIdentifierBuilder to unstructured.
func (b *MetricIdentifierBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to MetricIdentifierBuilder, replacing the contents
// of MetricIdentifierBuilder.
func (b *MetricIdentifierBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &metricIdentifierFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals MetricIdentifierBuilder to JSON.
func (b *MetricIdentifierBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into MetricIdentifierBuilder, replacing the contents of
// MetricIdentifierBuilder.
func (b *MetricIdentifierBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// MetricIdentifierList represents a list of MetricIdentifierBuilder.
type MetricIdentifierList []*MetricIdentifierBuilder

// MetricIdentifierList represents a map of MetricIdentifierBuilder.
type MetricIdentifierMap map[string]MetricIdentifierBuilder

func (b *MetricIdentifierBuilder) preMarshal() {
}
func (b *MetricIdentifierBuilder) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta1

import (
	json "encoding/json"

	resource "k8s.io/apimachinery/pkg/api/resource"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// PodsMetricSourceBuilder represents an declarative configuration of the PodsMetricSource type for use
// with apply.
type PodsMetricSourceBuilder struct {
	fields *podsMetricSourceFields
}

// podsMetricSourceFields is used by PodsMetricSourceBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in PodsMetricSourceBuilder before marshalling, and
// are copied out to the builder type in PodsMetricSourceBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type podsMetricSourceFields struct {
	MetricName         *string                  `json:"metricName,omitempty"`
	TargetAverageValue *resource.Quantity       `json:"targetAverageValue,omitempty"`
	Selector           *v1.LabelSelectorBuilder `json:"selector,omitempty"`
}

func (b *PodsMetricSourceBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &podsMetricSourceFields{}
	}
}

// PodsMetricSource constructs an declarative configuration of the PodsMetricSource type for use with
// apply.
// Provided as a convenience.
func PodsMetricSource() PodsMetricSourceBuilder {
	return PodsMetricSourceBuilder{fields: &podsMetricSourceFields{}}
}

// SetMetricName sets the MetricName field in the declarative configuration to the given value.
func (b PodsMetricSourceBuilder) SetMetricName(value string) PodsMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.MetricName = &value
	return b
}

// RemoveMetricName removes the MetricName field from the declarative configuration.
func (b PodsMetricSourceBuilder) RemoveMetricName() PodsMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.MetricName = nil
	return b
}

// GetMetricName gets the MetricName field from the declarative configuration.
func (b PodsMetricSourceBuilder) GetMetricName() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.MetricName; v != nil {
		return *v, true
	}
	return value, false
}

// SetTargetAverageValue sets the TargetAverageValue field in the declarative configuration to the given value.
func (b PodsMetricSourceBuilder) SetTargetAverageValue(value resource.Quantity) PodsMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.TargetAverageValue = &value
	return b
}

// RemoveTargetAverageValue removes the TargetAverageValue field from the declarative configuration.
func (b PodsMetricSourceBuilder) RemoveTargetAverageValue() PodsMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.TargetAverageValue = nil
	return b
}

// GetTargetAverageValue gets the TargetAverageValue field from the declarative configuration.
func (b PodsMetricSourceBuilder) GetTargetAverageValue() (value resource.Quantity, ok bool) {
	b.ensureInitialized()
	if v := b.fields.TargetAverageValue; v != nil {
		return *v, true
	}
	return value, false
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b PodsMetricSourceBuilder) SetSelector(value v1.LabelSelectorBuilder) PodsMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.Selector = &value
	return b
}

// RemoveSelector removes the Selector field from the declarative configuration.
func (b PodsMetricSourceBuilder) RemoveSelector() PodsMetricSourceBuilder {
	b.ensureInitialized()
	b.fields.Selector = nil
	return b
}

// GetSelector gets the Selector field from the declarative configuration.
func (b PodsMetricSourceBuilder) GetSelector() (value v1.LabelSelectorBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Selector; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts PodsMetricSourceBuilder to unstructured.
func (b *PodsMetricSourceBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to PodsMetricSourceBuilder, replacing the contents
// of PodsMetricSourceBuilder.
func (b *PodsMetricSourceBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &podsMetricSourceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals PodsMetricSourceBuilder to JSON.
func (b *PodsMetricSourceBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into PodsMetricSourceBuilder, replacing the contents of
// PodsMetricSourceBuilder.
func (b *PodsMetricSourceBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// PodsMetricSourceList represents a list of PodsMetricSourceBuilder.
// Provided as a convenience.
type PodsMetricSourceList []PodsMetricSourceBuilder

// PodsMetricSourceList represents a map of PodsMetricSourceBuilder.
// Provided as a convenience.
type PodsMetricSourceMap map[string]PodsMetricSourceBuilder

func (b *PodsMetricSourceBuilder) preMarshal() {
}
func (b *PodsMetricSourceBuilder) postUnmarshal() {
}

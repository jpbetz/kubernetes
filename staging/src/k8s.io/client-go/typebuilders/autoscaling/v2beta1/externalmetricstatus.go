/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta1

import (
	json "encoding/json"

	resource "k8s.io/apimachinery/pkg/api/resource"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// ExternalMetricStatusBuilder represents an declarative configuration of the ExternalMetricStatus type for use
// with apply.
type ExternalMetricStatusBuilder struct {
	fields externalMetricStatusFields
}

// externalMetricStatusFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in ExternalMetricStatusBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type externalMetricStatusFields struct {
	MetricName          *string                  `json:"metricName,omitempty"`
	MetricSelector      *v1.LabelSelectorBuilder `json:"metricSelector,omitempty"`
	CurrentValue        *resource.Quantity       `json:"currentValue,omitempty"`
	CurrentAverageValue *resource.Quantity       `json:"currentAverageValue,omitempty"`
}

// ExternalMetricStatus constructs an declarative configuration of the ExternalMetricStatus type for use with
// apply.
func ExternalMetricStatus() *ExternalMetricStatusBuilder {
	return &ExternalMetricStatusBuilder{}
}

// SetMetricName sets the MetricName field in the declarative configuration to the given value.
func (b *ExternalMetricStatusBuilder) SetMetricName(value string) *ExternalMetricStatusBuilder {
	b.fields.MetricName = &value
	return b
}

// RemoveMetricName removes the MetricName field from the declarative configuration.
func (b *ExternalMetricStatusBuilder) RemoveMetricName() *ExternalMetricStatusBuilder {
	b.fields.MetricName = nil
	return b
}

// GetMetricName gets the MetricName field from the declarative configuration.
func (b *ExternalMetricStatusBuilder) GetMetricName() (value string, ok bool) {
	if v := b.fields.MetricName; v != nil {
		return *v, true
	}
	return value, false
}

// SetMetricSelector sets the MetricSelector field in the declarative configuration to the given value.
func (b *ExternalMetricStatusBuilder) SetMetricSelector(value *v1.LabelSelectorBuilder) *ExternalMetricStatusBuilder {
	b.fields.MetricSelector = value
	return b
}

// RemoveMetricSelector removes the MetricSelector field from the declarative configuration.
func (b *ExternalMetricStatusBuilder) RemoveMetricSelector() *ExternalMetricStatusBuilder {
	b.fields.MetricSelector = nil
	return b
}

// GetMetricSelector gets the MetricSelector field from the declarative configuration.
func (b *ExternalMetricStatusBuilder) GetMetricSelector() (value *v1.LabelSelectorBuilder, ok bool) {
	return b.fields.MetricSelector, b.fields.MetricSelector != nil
}

// SetCurrentValue sets the CurrentValue field in the declarative configuration to the given value.
func (b *ExternalMetricStatusBuilder) SetCurrentValue(value resource.Quantity) *ExternalMetricStatusBuilder {
	b.fields.CurrentValue = &value
	return b
}

// RemoveCurrentValue removes the CurrentValue field from the declarative configuration.
func (b *ExternalMetricStatusBuilder) RemoveCurrentValue() *ExternalMetricStatusBuilder {
	b.fields.CurrentValue = nil
	return b
}

// GetCurrentValue gets the CurrentValue field from the declarative configuration.
func (b *ExternalMetricStatusBuilder) GetCurrentValue() (value resource.Quantity, ok bool) {
	if v := b.fields.CurrentValue; v != nil {
		return *v, true
	}
	return value, false
}

// SetCurrentAverageValue sets the CurrentAverageValue field in the declarative configuration to the given value.
func (b *ExternalMetricStatusBuilder) SetCurrentAverageValue(value resource.Quantity) *ExternalMetricStatusBuilder {
	b.fields.CurrentAverageValue = &value
	return b
}

// RemoveCurrentAverageValue removes the CurrentAverageValue field from the declarative configuration.
func (b *ExternalMetricStatusBuilder) RemoveCurrentAverageValue() *ExternalMetricStatusBuilder {
	b.fields.CurrentAverageValue = nil
	return b
}

// GetCurrentAverageValue gets the CurrentAverageValue field from the declarative configuration.
func (b *ExternalMetricStatusBuilder) GetCurrentAverageValue() (value resource.Quantity, ok bool) {
	if v := b.fields.CurrentAverageValue; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ExternalMetricStatusBuilder to unstructured.
func (b *ExternalMetricStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ExternalMetricStatusBuilder, replacing the contents
// of ExternalMetricStatusBuilder.
func (b *ExternalMetricStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &externalMetricStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ExternalMetricStatusBuilder to JSON.
func (b *ExternalMetricStatusBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into ExternalMetricStatusBuilder, replacing the contents of
// ExternalMetricStatusBuilder.
func (b *ExternalMetricStatusBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ExternalMetricStatusList represents a list of ExternalMetricStatusBuilder.
type ExternalMetricStatusList []*ExternalMetricStatusBuilder

// ExternalMetricStatusList represents a map of ExternalMetricStatusBuilder.
type ExternalMetricStatusMap map[string]ExternalMetricStatusBuilder

func (b *ExternalMetricStatusBuilder) preMarshal() {
}
func (b *ExternalMetricStatusBuilder) postUnmarshal() {
}

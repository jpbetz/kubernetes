/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta1

import (
	json "encoding/json"

	resource "k8s.io/apimachinery/pkg/api/resource"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/typebuilders/meta/v1"
)

// PodsMetricStatusBuilder represents an declarative configuration of the PodsMetricStatus type for use
// with apply.
type PodsMetricStatusBuilder struct {
	fields *podsMetricStatusFields
}

// podsMetricStatusFields is used by PodsMetricStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in PodsMetricStatusBuilder before marshalling, and
// are copied out to the builder type in PodsMetricStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type podsMetricStatusFields struct {
	MetricName          *string                  `json:"metricName,omitempty"`
	CurrentAverageValue *resource.Quantity       `json:"currentAverageValue,omitempty"`
	Selector            *v1.LabelSelectorBuilder `json:"selector,omitempty"`
}

func (b *PodsMetricStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &podsMetricStatusFields{}
	}
}

// PodsMetricStatus constructs an declarative configuration of the PodsMetricStatus type for use with
// apply.
// Provided as a convenience.
func PodsMetricStatus() PodsMetricStatusBuilder {
	return PodsMetricStatusBuilder{fields: &podsMetricStatusFields{}}
}

// SetMetricName sets the MetricName field in the declarative configuration to the given value.
func (b PodsMetricStatusBuilder) SetMetricName(value string) PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.MetricName = &value
	return b
}

// RemoveMetricName removes the MetricName field from the declarative configuration.
func (b PodsMetricStatusBuilder) RemoveMetricName() PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.MetricName = nil
	return b
}

// GetMetricName gets the MetricName field from the declarative configuration.
func (b PodsMetricStatusBuilder) GetMetricName() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.MetricName; v != nil {
		return *v, true
	}
	return value, false
}

// SetCurrentAverageValue sets the CurrentAverageValue field in the declarative configuration to the given value.
func (b PodsMetricStatusBuilder) SetCurrentAverageValue(value resource.Quantity) PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.CurrentAverageValue = &value
	return b
}

// RemoveCurrentAverageValue removes the CurrentAverageValue field from the declarative configuration.
func (b PodsMetricStatusBuilder) RemoveCurrentAverageValue() PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.CurrentAverageValue = nil
	return b
}

// GetCurrentAverageValue gets the CurrentAverageValue field from the declarative configuration.
func (b PodsMetricStatusBuilder) GetCurrentAverageValue() (value resource.Quantity, ok bool) {
	b.ensureInitialized()
	if v := b.fields.CurrentAverageValue; v != nil {
		return *v, true
	}
	return value, false
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b PodsMetricStatusBuilder) SetSelector(value v1.LabelSelectorBuilder) PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Selector = &value
	return b
}

// RemoveSelector removes the Selector field from the declarative configuration.
func (b PodsMetricStatusBuilder) RemoveSelector() PodsMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Selector = nil
	return b
}

// GetSelector gets the Selector field from the declarative configuration.
func (b PodsMetricStatusBuilder) GetSelector() (value v1.LabelSelectorBuilder, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Selector; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts PodsMetricStatusBuilder to unstructured.
func (b *PodsMetricStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to PodsMetricStatusBuilder, replacing the contents
// of PodsMetricStatusBuilder.
func (b *PodsMetricStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &podsMetricStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals PodsMetricStatusBuilder to JSON.
func (b *PodsMetricStatusBuilder) MarshalJSON() ([]byte, error) {
	b.ensureInitialized()
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into PodsMetricStatusBuilder, replacing the contents of
// PodsMetricStatusBuilder.
func (b *PodsMetricStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// PodsMetricStatusList represents a list of PodsMetricStatusBuilder.
// Provided as a convenience.
type PodsMetricStatusList []PodsMetricStatusBuilder

// PodsMetricStatusList represents a map of PodsMetricStatusBuilder.
// Provided as a convenience.
type PodsMetricStatusMap map[string]PodsMetricStatusBuilder

func (b *PodsMetricStatusBuilder) preMarshal() {
}
func (b *PodsMetricStatusBuilder) postUnmarshal() {
}

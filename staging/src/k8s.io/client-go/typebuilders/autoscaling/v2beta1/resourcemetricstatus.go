/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v2beta1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	resource "k8s.io/apimachinery/pkg/api/resource"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ResourceMetricStatusBuilder represents an declarative configuration of the ResourceMetricStatus type for use
// with apply.
type ResourceMetricStatusBuilder struct {
	fields *resourceMetricStatusFields
}

// resourceMetricStatusFields is used by ResourceMetricStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in ResourceMetricStatusBuilder before marshalling, and
// are copied out to the builder type in ResourceMetricStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type resourceMetricStatusFields struct {
	Name                      *v1.ResourceName   `json:"name,omitempty"`
	CurrentAverageUtilization *int32             `json:"currentAverageUtilization,omitempty"`
	CurrentAverageValue       *resource.Quantity `json:"currentAverageValue,omitempty"`
}

func (b *ResourceMetricStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &resourceMetricStatusFields{}
	}
}

// ResourceMetricStatus constructs an declarative configuration of the ResourceMetricStatus type for use with
// apply.
// Provided as a convenience.
func ResourceMetricStatus() ResourceMetricStatusBuilder {
	return ResourceMetricStatusBuilder{fields: &resourceMetricStatusFields{}}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b ResourceMetricStatusBuilder) SetName(value v1.ResourceName) ResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b ResourceMetricStatusBuilder) RemoveName() ResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b ResourceMetricStatusBuilder) GetName() (value v1.ResourceName, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetCurrentAverageUtilization sets the CurrentAverageUtilization field in the declarative configuration to the given value.
func (b ResourceMetricStatusBuilder) SetCurrentAverageUtilization(value int32) ResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.CurrentAverageUtilization = &value
	return b
}

// RemoveCurrentAverageUtilization removes the CurrentAverageUtilization field from the declarative configuration.
func (b ResourceMetricStatusBuilder) RemoveCurrentAverageUtilization() ResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.CurrentAverageUtilization = nil
	return b
}

// GetCurrentAverageUtilization gets the CurrentAverageUtilization field from the declarative configuration.
func (b ResourceMetricStatusBuilder) GetCurrentAverageUtilization() (value int32, ok bool) {
	b.ensureInitialized()
	if v := b.fields.CurrentAverageUtilization; v != nil {
		return *v, true
	}
	return value, false
}

// SetCurrentAverageValue sets the CurrentAverageValue field in the declarative configuration to the given value.
func (b ResourceMetricStatusBuilder) SetCurrentAverageValue(value resource.Quantity) ResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.CurrentAverageValue = &value
	return b
}

// RemoveCurrentAverageValue removes the CurrentAverageValue field from the declarative configuration.
func (b ResourceMetricStatusBuilder) RemoveCurrentAverageValue() ResourceMetricStatusBuilder {
	b.ensureInitialized()
	b.fields.CurrentAverageValue = nil
	return b
}

// GetCurrentAverageValue gets the CurrentAverageValue field from the declarative configuration.
func (b ResourceMetricStatusBuilder) GetCurrentAverageValue() (value resource.Quantity, ok bool) {
	b.ensureInitialized()
	if v := b.fields.CurrentAverageValue; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts ResourceMetricStatusBuilder to unstructured.
func (b *ResourceMetricStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to ResourceMetricStatusBuilder, replacing the contents
// of ResourceMetricStatusBuilder.
func (b *ResourceMetricStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &resourceMetricStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals ResourceMetricStatusBuilder to JSON.
func (b *ResourceMetricStatusBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into ResourceMetricStatusBuilder, replacing the contents of
// ResourceMetricStatusBuilder.
func (b *ResourceMetricStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// ResourceMetricStatusList represents a list of ResourceMetricStatusBuilder.
// Provided as a convenience.
type ResourceMetricStatusList []ResourceMetricStatusBuilder

// ResourceMetricStatusList represents a map of ResourceMetricStatusBuilder.
// Provided as a convenience.
type ResourceMetricStatusMap map[string]ResourceMetricStatusBuilder

func (b *ResourceMetricStatusBuilder) preMarshal() {
}
func (b *ResourceMetricStatusBuilder) postUnmarshal() {
}

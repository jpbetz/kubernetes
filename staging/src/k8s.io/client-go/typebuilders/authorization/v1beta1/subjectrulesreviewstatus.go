/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// SubjectRulesReviewStatusBuilder represents an declarative configuration of the SubjectRulesReviewStatus type for use
// with apply.
type SubjectRulesReviewStatusBuilder struct {
	fields subjectRulesReviewStatusFields
}

// subjectRulesReviewStatusFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in SubjectRulesReviewStatusBuilder.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type subjectRulesReviewStatusFields struct {
	ResourceRules    *ResourceRuleList    `json:"resourceRules,omitempty"`
	NonResourceRules *NonResourceRuleList `json:"nonResourceRules,omitempty"`
	Incomplete       *bool                `json:"incomplete,omitempty"`
	EvaluationError  *string              `json:"evaluationError,omitempty"`
}

// SubjectRulesReviewStatus constructs an declarative configuration of the SubjectRulesReviewStatus type for use with
// apply.
func SubjectRulesReviewStatus() *SubjectRulesReviewStatusBuilder {
	return &SubjectRulesReviewStatusBuilder{}
}

// SetResourceRules sets the ResourceRules field in the declarative configuration to the given value.
func (b *SubjectRulesReviewStatusBuilder) SetResourceRules(value ResourceRuleList) *SubjectRulesReviewStatusBuilder {
	b.fields.ResourceRules = &value
	return b
}

// RemoveResourceRules removes the ResourceRules field from the declarative configuration.
func (b *SubjectRulesReviewStatusBuilder) RemoveResourceRules() *SubjectRulesReviewStatusBuilder {
	b.fields.ResourceRules = nil
	return b
}

// GetResourceRules gets the ResourceRules field from the declarative configuration.
func (b *SubjectRulesReviewStatusBuilder) GetResourceRules() (value ResourceRuleList, ok bool) {
	if v := b.fields.ResourceRules; v != nil {
		return *v, true
	}
	return value, false
}

// SetNonResourceRules sets the NonResourceRules field in the declarative configuration to the given value.
func (b *SubjectRulesReviewStatusBuilder) SetNonResourceRules(value NonResourceRuleList) *SubjectRulesReviewStatusBuilder {
	b.fields.NonResourceRules = &value
	return b
}

// RemoveNonResourceRules removes the NonResourceRules field from the declarative configuration.
func (b *SubjectRulesReviewStatusBuilder) RemoveNonResourceRules() *SubjectRulesReviewStatusBuilder {
	b.fields.NonResourceRules = nil
	return b
}

// GetNonResourceRules gets the NonResourceRules field from the declarative configuration.
func (b *SubjectRulesReviewStatusBuilder) GetNonResourceRules() (value NonResourceRuleList, ok bool) {
	if v := b.fields.NonResourceRules; v != nil {
		return *v, true
	}
	return value, false
}

// SetIncomplete sets the Incomplete field in the declarative configuration to the given value.
func (b *SubjectRulesReviewStatusBuilder) SetIncomplete(value bool) *SubjectRulesReviewStatusBuilder {
	b.fields.Incomplete = &value
	return b
}

// RemoveIncomplete removes the Incomplete field from the declarative configuration.
func (b *SubjectRulesReviewStatusBuilder) RemoveIncomplete() *SubjectRulesReviewStatusBuilder {
	b.fields.Incomplete = nil
	return b
}

// GetIncomplete gets the Incomplete field from the declarative configuration.
func (b *SubjectRulesReviewStatusBuilder) GetIncomplete() (value bool, ok bool) {
	if v := b.fields.Incomplete; v != nil {
		return *v, true
	}
	return value, false
}

// SetEvaluationError sets the EvaluationError field in the declarative configuration to the given value.
func (b *SubjectRulesReviewStatusBuilder) SetEvaluationError(value string) *SubjectRulesReviewStatusBuilder {
	b.fields.EvaluationError = &value
	return b
}

// RemoveEvaluationError removes the EvaluationError field from the declarative configuration.
func (b *SubjectRulesReviewStatusBuilder) RemoveEvaluationError() *SubjectRulesReviewStatusBuilder {
	b.fields.EvaluationError = nil
	return b
}

// GetEvaluationError gets the EvaluationError field from the declarative configuration.
func (b *SubjectRulesReviewStatusBuilder) GetEvaluationError() (value string, ok bool) {
	if v := b.fields.EvaluationError; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts SubjectRulesReviewStatusBuilder to unstructured.
func (b *SubjectRulesReviewStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to SubjectRulesReviewStatusBuilder, replacing the contents
// of SubjectRulesReviewStatusBuilder.
func (b *SubjectRulesReviewStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &subjectRulesReviewStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals SubjectRulesReviewStatusBuilder to JSON.
func (b *SubjectRulesReviewStatusBuilder) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into SubjectRulesReviewStatusBuilder, replacing the contents of
// SubjectRulesReviewStatusBuilder.
func (b *SubjectRulesReviewStatusBuilder) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// SubjectRulesReviewStatusList represents a list of SubjectRulesReviewStatusBuilder.
type SubjectRulesReviewStatusList []*SubjectRulesReviewStatusBuilder

// SubjectRulesReviewStatusList represents a map of SubjectRulesReviewStatusBuilder.
type SubjectRulesReviewStatusMap map[string]SubjectRulesReviewStatusBuilder

func (b *SubjectRulesReviewStatusBuilder) preMarshal() {
}
func (b *SubjectRulesReviewStatusBuilder) postUnmarshal() {
}

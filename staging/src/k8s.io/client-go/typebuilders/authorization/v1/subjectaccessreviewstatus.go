/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by typebuilder-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// SubjectAccessReviewStatusBuilder represents an declarative configuration of the SubjectAccessReviewStatus type for use
// with apply.
type SubjectAccessReviewStatusBuilder struct {
	fields *subjectAccessReviewStatusFields
}

// subjectAccessReviewStatusFields is used by SubjectAccessReviewStatusBuilder for json marshalling and unmarshalling.
// Is the source-of-truth for all fields except inlined fields.
// Inline fields are copied in from their builder type in SubjectAccessReviewStatusBuilder before marshalling, and
// are copied out to the builder type in SubjectAccessReviewStatusBuilder after unmarshalling.
// Inlined builder types cannot be embedded because they do not expose their fields directly.
type subjectAccessReviewStatusFields struct {
	Allowed         *bool   `json:"allowed,omitempty"`
	Denied          *bool   `json:"denied,omitempty"`
	Reason          *string `json:"reason,omitempty"`
	EvaluationError *string `json:"evaluationError,omitempty"`
}

func (b *SubjectAccessReviewStatusBuilder) ensureInitialized() {
	if b.fields == nil {
		b.fields = &subjectAccessReviewStatusFields{}
	}
}

// SubjectAccessReviewStatus constructs an declarative configuration of the SubjectAccessReviewStatus type for use with
// apply.
// Provided as a convenience.
func SubjectAccessReviewStatus() SubjectAccessReviewStatusBuilder {
	return SubjectAccessReviewStatusBuilder{fields: &subjectAccessReviewStatusFields{}}
}

// SetAllowed sets the Allowed field in the declarative configuration to the given value.
func (b SubjectAccessReviewStatusBuilder) SetAllowed(value bool) SubjectAccessReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Allowed = &value
	return b
}

// RemoveAllowed removes the Allowed field from the declarative configuration.
func (b SubjectAccessReviewStatusBuilder) RemoveAllowed() SubjectAccessReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Allowed = nil
	return b
}

// GetAllowed gets the Allowed field from the declarative configuration.
func (b SubjectAccessReviewStatusBuilder) GetAllowed() (value bool, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Allowed; v != nil {
		return *v, true
	}
	return value, false
}

// SetDenied sets the Denied field in the declarative configuration to the given value.
func (b SubjectAccessReviewStatusBuilder) SetDenied(value bool) SubjectAccessReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Denied = &value
	return b
}

// RemoveDenied removes the Denied field from the declarative configuration.
func (b SubjectAccessReviewStatusBuilder) RemoveDenied() SubjectAccessReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Denied = nil
	return b
}

// GetDenied gets the Denied field from the declarative configuration.
func (b SubjectAccessReviewStatusBuilder) GetDenied() (value bool, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Denied; v != nil {
		return *v, true
	}
	return value, false
}

// SetReason sets the Reason field in the declarative configuration to the given value.
func (b SubjectAccessReviewStatusBuilder) SetReason(value string) SubjectAccessReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Reason = &value
	return b
}

// RemoveReason removes the Reason field from the declarative configuration.
func (b SubjectAccessReviewStatusBuilder) RemoveReason() SubjectAccessReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.Reason = nil
	return b
}

// GetReason gets the Reason field from the declarative configuration.
func (b SubjectAccessReviewStatusBuilder) GetReason() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.Reason; v != nil {
		return *v, true
	}
	return value, false
}

// SetEvaluationError sets the EvaluationError field in the declarative configuration to the given value.
func (b SubjectAccessReviewStatusBuilder) SetEvaluationError(value string) SubjectAccessReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.EvaluationError = &value
	return b
}

// RemoveEvaluationError removes the EvaluationError field from the declarative configuration.
func (b SubjectAccessReviewStatusBuilder) RemoveEvaluationError() SubjectAccessReviewStatusBuilder {
	b.ensureInitialized()
	b.fields.EvaluationError = nil
	return b
}

// GetEvaluationError gets the EvaluationError field from the declarative configuration.
func (b SubjectAccessReviewStatusBuilder) GetEvaluationError() (value string, ok bool) {
	b.ensureInitialized()
	if v := b.fields.EvaluationError; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts SubjectAccessReviewStatusBuilder to unstructured.
func (b *SubjectAccessReviewStatusBuilder) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.ensureInitialized()
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to SubjectAccessReviewStatusBuilder, replacing the contents
// of SubjectAccessReviewStatusBuilder.
func (b *SubjectAccessReviewStatusBuilder) FromUnstructured(u map[string]interface{}) error {
	m := &subjectAccessReviewStatusFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals SubjectAccessReviewStatusBuilder to JSON.
func (b *SubjectAccessReviewStatusBuilder) MarshalJSON() ([]byte, error) {
	u := &unstructured.Unstructured{Object: b.ToUnstructured().(map[string]interface{})}
	return u.MarshalJSON()
}

// UnmarshalJSON unmarshals JSON into SubjectAccessReviewStatusBuilder, replacing the contents of
// SubjectAccessReviewStatusBuilder.
func (b *SubjectAccessReviewStatusBuilder) UnmarshalJSON(data []byte) error {
	b.ensureInitialized()
	if err := json.Unmarshal(data, b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// SubjectAccessReviewStatusList represents a list of SubjectAccessReviewStatusBuilder.
// Provided as a convenience.
type SubjectAccessReviewStatusList []SubjectAccessReviewStatusBuilder

// SubjectAccessReviewStatusList represents a map of SubjectAccessReviewStatusBuilder.
// Provided as a convenience.
type SubjectAccessReviewStatusMap map[string]SubjectAccessReviewStatusBuilder

func (b *SubjectAccessReviewStatusBuilder) preMarshal() {
}
func (b *SubjectAccessReviewStatusBuilder) postUnmarshal() {
}

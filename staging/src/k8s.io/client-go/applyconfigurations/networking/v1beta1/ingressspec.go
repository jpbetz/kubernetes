/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// IngressSpecApplyConfiguration represents an declarative configuration of the IngressSpec type for use
// with apply.
type IngressSpecApplyConfiguration struct {
	IngressClassName *string                           `json:"ingressClassName,omitempty"`
	Backend          *IngressBackendApplyConfiguration `json:"backend,omitempty"`
	TLS              *IngressTLSList                   `json:"tls,omitempty"`
	Rules            *IngressRuleList                  `json:"rules,omitempty"`
}

// IngressSpecApplyConfiguration constructs an declarative configuration of the IngressSpec type for use with
// apply.
func IngressSpec() *IngressSpecApplyConfiguration {
	return &IngressSpecApplyConfiguration{}
}

// SetIngressClassName sets the IngressClassName field in the declarative configuration to the given value.
func (b *IngressSpecApplyConfiguration) SetIngressClassName(value string) *IngressSpecApplyConfiguration {
	b.IngressClassName = &value
	return b
}

// RemoveIngressClassName removes the IngressClassName field from the declarative configuration.
func (b *IngressSpecApplyConfiguration) RemoveIngressClassName() *IngressSpecApplyConfiguration {
	b.IngressClassName = nil
	return b
}

// GetIngressClassName gets the IngressClassName field from the declarative configuration.
func (b *IngressSpecApplyConfiguration) GetIngressClassName() (value string, ok bool) {
	if v := b.IngressClassName; v != nil {
		return *v, true
	}
	return value, false
}

// SetBackend sets the Backend field in the declarative configuration to the given value.
func (b *IngressSpecApplyConfiguration) SetBackend(value *IngressBackendApplyConfiguration) *IngressSpecApplyConfiguration {
	b.Backend = value
	return b
}

// RemoveBackend removes the Backend field from the declarative configuration.
func (b *IngressSpecApplyConfiguration) RemoveBackend() *IngressSpecApplyConfiguration {
	b.Backend = nil
	return b
}

// GetBackend gets the Backend field from the declarative configuration.
func (b *IngressSpecApplyConfiguration) GetBackend() (value *IngressBackendApplyConfiguration, ok bool) {
	return b.Backend, b.Backend != nil
}

// SetTLS sets the TLS field in the declarative configuration to the given value.
func (b *IngressSpecApplyConfiguration) SetTLS(value IngressTLSList) *IngressSpecApplyConfiguration {
	b.TLS = &value
	return b
}

// RemoveTLS removes the TLS field from the declarative configuration.
func (b *IngressSpecApplyConfiguration) RemoveTLS() *IngressSpecApplyConfiguration {
	b.TLS = nil
	return b
}

// GetTLS gets the TLS field from the declarative configuration.
func (b *IngressSpecApplyConfiguration) GetTLS() (value IngressTLSList, ok bool) {
	if v := b.TLS; v != nil {
		return *v, true
	}
	return value, false
}

// SetRules sets the Rules field in the declarative configuration to the given value.
func (b *IngressSpecApplyConfiguration) SetRules(value IngressRuleList) *IngressSpecApplyConfiguration {
	b.Rules = &value
	return b
}

// RemoveRules removes the Rules field from the declarative configuration.
func (b *IngressSpecApplyConfiguration) RemoveRules() *IngressSpecApplyConfiguration {
	b.Rules = nil
	return b
}

// GetRules gets the Rules field from the declarative configuration.
func (b *IngressSpecApplyConfiguration) GetRules() (value IngressRuleList, ok bool) {
	if v := b.Rules; v != nil {
		return *v, true
	}
	return value, false
}

// IngressSpecList represents a listAlias of IngressSpecApplyConfiguration.
type IngressSpecList []*IngressSpecApplyConfiguration

// IngressSpecList represents a map of IngressSpecApplyConfiguration.
type IngressSpecMap map[string]IngressSpecApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	admissionregistrationv1alpha1 "k8s.io/api/admissionregistration/v1alpha1"
)

// JSONPatchOperationApplyConfiguration represents a declarative configuration of the JSONPatchOperation type for use
// with apply.
type JSONPatchOperationApplyConfiguration struct {
	Op              *admissionregistrationv1alpha1.JSONPatchOperationType `json:"op,omitempty"`
	PathExpression  *string                                               `json:"pathExpression,omitempty"`
	FromExpression  *string                                               `json:"fromExpression,omitempty"`
	ValueExpression *string                                               `json:"valueExpression,omitempty"`
}

// JSONPatchOperationApplyConfiguration constructs a declarative configuration of the JSONPatchOperation type for use with
// apply.
func JSONPatchOperation() *JSONPatchOperationApplyConfiguration {
	return &JSONPatchOperationApplyConfiguration{}
}

// WithOp sets the Op field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Op field is set to the value of the last call.
func (b *JSONPatchOperationApplyConfiguration) WithOp(value admissionregistrationv1alpha1.JSONPatchOperationType) *JSONPatchOperationApplyConfiguration {
	b.Op = &value
	return b
}

// WithPathExpression sets the PathExpression field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PathExpression field is set to the value of the last call.
func (b *JSONPatchOperationApplyConfiguration) WithPathExpression(value string) *JSONPatchOperationApplyConfiguration {
	b.PathExpression = &value
	return b
}

// WithFromExpression sets the FromExpression field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FromExpression field is set to the value of the last call.
func (b *JSONPatchOperationApplyConfiguration) WithFromExpression(value string) *JSONPatchOperationApplyConfiguration {
	b.FromExpression = &value
	return b
}

// WithValueExpression sets the ValueExpression field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ValueExpression field is set to the value of the last call.
func (b *JSONPatchOperationApplyConfiguration) WithValueExpression(value string) *JSONPatchOperationApplyConfiguration {
	b.ValueExpression = &value
	return b
}

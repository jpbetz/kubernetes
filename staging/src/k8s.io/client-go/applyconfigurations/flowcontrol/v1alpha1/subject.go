/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "k8s.io/api/flowcontrol/v1alpha1"
)

// SubjectApplyConfiguration represents an declarative configuration of the Subject type for use
// with apply.
type SubjectApplyConfiguration struct {
	Kind           *v1alpha1.SubjectKind                    `json:"kind,omitempty"`
	User           *UserSubjectApplyConfiguration           `json:"user,omitempty"`
	Group          *GroupSubjectApplyConfiguration          `json:"group,omitempty"`
	ServiceAccount *ServiceAccountSubjectApplyConfiguration `json:"serviceAccount,omitempty"`
}

// SubjectApplyConfiguration constructs an declarative configuration of the Subject type for use with
// apply.
func Subject() *SubjectApplyConfiguration {
	return &SubjectApplyConfiguration{}
}

// SetKind sets the Kind field in the declarative configuration to the given value.
func (b *SubjectApplyConfiguration) SetKind(value v1alpha1.SubjectKind) *SubjectApplyConfiguration {
	b.Kind = &value
	return b
}

// RemoveKind removes the Kind field from the declarative configuration.
func (b *SubjectApplyConfiguration) RemoveKind() *SubjectApplyConfiguration {
	b.Kind = nil
	return b
}

// GetKind gets the Kind field from the declarative configuration.
func (b *SubjectApplyConfiguration) GetKind() (value v1alpha1.SubjectKind, ok bool) {
	if v := b.Kind; v != nil {
		return *v, true
	}
	return value, false
}

// SetUser sets the User field in the declarative configuration to the given value.
func (b *SubjectApplyConfiguration) SetUser(value *UserSubjectApplyConfiguration) *SubjectApplyConfiguration {
	b.User = value
	return b
}

// RemoveUser removes the User field from the declarative configuration.
func (b *SubjectApplyConfiguration) RemoveUser() *SubjectApplyConfiguration {
	b.User = nil
	return b
}

// GetUser gets the User field from the declarative configuration.
func (b *SubjectApplyConfiguration) GetUser() (value *UserSubjectApplyConfiguration, ok bool) {
	return b.User, b.User != nil
}

// SetGroup sets the Group field in the declarative configuration to the given value.
func (b *SubjectApplyConfiguration) SetGroup(value *GroupSubjectApplyConfiguration) *SubjectApplyConfiguration {
	b.Group = value
	return b
}

// RemoveGroup removes the Group field from the declarative configuration.
func (b *SubjectApplyConfiguration) RemoveGroup() *SubjectApplyConfiguration {
	b.Group = nil
	return b
}

// GetGroup gets the Group field from the declarative configuration.
func (b *SubjectApplyConfiguration) GetGroup() (value *GroupSubjectApplyConfiguration, ok bool) {
	return b.Group, b.Group != nil
}

// SetServiceAccount sets the ServiceAccount field in the declarative configuration to the given value.
func (b *SubjectApplyConfiguration) SetServiceAccount(value *ServiceAccountSubjectApplyConfiguration) *SubjectApplyConfiguration {
	b.ServiceAccount = value
	return b
}

// RemoveServiceAccount removes the ServiceAccount field from the declarative configuration.
func (b *SubjectApplyConfiguration) RemoveServiceAccount() *SubjectApplyConfiguration {
	b.ServiceAccount = nil
	return b
}

// GetServiceAccount gets the ServiceAccount field from the declarative configuration.
func (b *SubjectApplyConfiguration) GetServiceAccount() (value *ServiceAccountSubjectApplyConfiguration, ok bool) {
	return b.ServiceAccount, b.ServiceAccount != nil
}

// SubjectList represents a listAlias of SubjectApplyConfiguration.
type SubjectList []*SubjectApplyConfiguration

// SubjectList represents a map of SubjectApplyConfiguration.
type SubjectMap map[string]SubjectApplyConfiguration

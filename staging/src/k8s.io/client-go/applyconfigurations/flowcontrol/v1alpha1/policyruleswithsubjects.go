/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// PolicyRulesWithSubjectsApplyConfiguration represents an declarative configuration of the PolicyRulesWithSubjects type for use
// with apply.
type PolicyRulesWithSubjectsApplyConfiguration struct {
	Subjects         *SubjectList               `json:"subjects,omitempty"`
	ResourceRules    *ResourcePolicyRuleList    `json:"resourceRules,omitempty"`
	NonResourceRules *NonResourcePolicyRuleList `json:"nonResourceRules,omitempty"`
}

// PolicyRulesWithSubjectsApplyConfiguration constructs an declarative configuration of the PolicyRulesWithSubjects type for use with
// apply.
func PolicyRulesWithSubjects() *PolicyRulesWithSubjectsApplyConfiguration {
	return &PolicyRulesWithSubjectsApplyConfiguration{}
}

// SetSubjects sets the Subjects field in the declarative configuration to the given value.
func (b *PolicyRulesWithSubjectsApplyConfiguration) SetSubjects(value SubjectList) *PolicyRulesWithSubjectsApplyConfiguration {
	b.Subjects = &value
	return b
}

// RemoveSubjects removes the Subjects field from the declarative configuration.
func (b *PolicyRulesWithSubjectsApplyConfiguration) RemoveSubjects() *PolicyRulesWithSubjectsApplyConfiguration {
	b.Subjects = nil
	return b
}

// GetSubjects gets the Subjects field from the declarative configuration.
func (b *PolicyRulesWithSubjectsApplyConfiguration) GetSubjects() (value SubjectList, ok bool) {
	if v := b.Subjects; v != nil {
		return *v, true
	}
	return value, false
}

// SetResourceRules sets the ResourceRules field in the declarative configuration to the given value.
func (b *PolicyRulesWithSubjectsApplyConfiguration) SetResourceRules(value ResourcePolicyRuleList) *PolicyRulesWithSubjectsApplyConfiguration {
	b.ResourceRules = &value
	return b
}

// RemoveResourceRules removes the ResourceRules field from the declarative configuration.
func (b *PolicyRulesWithSubjectsApplyConfiguration) RemoveResourceRules() *PolicyRulesWithSubjectsApplyConfiguration {
	b.ResourceRules = nil
	return b
}

// GetResourceRules gets the ResourceRules field from the declarative configuration.
func (b *PolicyRulesWithSubjectsApplyConfiguration) GetResourceRules() (value ResourcePolicyRuleList, ok bool) {
	if v := b.ResourceRules; v != nil {
		return *v, true
	}
	return value, false
}

// SetNonResourceRules sets the NonResourceRules field in the declarative configuration to the given value.
func (b *PolicyRulesWithSubjectsApplyConfiguration) SetNonResourceRules(value NonResourcePolicyRuleList) *PolicyRulesWithSubjectsApplyConfiguration {
	b.NonResourceRules = &value
	return b
}

// RemoveNonResourceRules removes the NonResourceRules field from the declarative configuration.
func (b *PolicyRulesWithSubjectsApplyConfiguration) RemoveNonResourceRules() *PolicyRulesWithSubjectsApplyConfiguration {
	b.NonResourceRules = nil
	return b
}

// GetNonResourceRules gets the NonResourceRules field from the declarative configuration.
func (b *PolicyRulesWithSubjectsApplyConfiguration) GetNonResourceRules() (value NonResourcePolicyRuleList, ok bool) {
	if v := b.NonResourceRules; v != nil {
		return *v, true
	}
	return value, false
}

// PolicyRulesWithSubjectsList represents a listAlias of PolicyRulesWithSubjectsApplyConfiguration.
type PolicyRulesWithSubjectsList []*PolicyRulesWithSubjectsApplyConfiguration

// PolicyRulesWithSubjectsList represents a map of PolicyRulesWithSubjectsApplyConfiguration.
type PolicyRulesWithSubjectsMap map[string]PolicyRulesWithSubjectsApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// PriorityLevelConfigurationStatusApplyConfiguration represents an declarative configuration of the PriorityLevelConfigurationStatus type for use
// with apply.
type PriorityLevelConfigurationStatusApplyConfiguration struct {
	Conditions *PriorityLevelConfigurationConditionList `json:"conditions,omitempty"`
}

// PriorityLevelConfigurationStatusApplyConfiguration constructs an declarative configuration of the PriorityLevelConfigurationStatus type for use with
// apply.
func PriorityLevelConfigurationStatus() *PriorityLevelConfigurationStatusApplyConfiguration {
	return &PriorityLevelConfigurationStatusApplyConfiguration{}
}

// SetConditions sets the Conditions field in the declarative configuration to the given value.
func (b *PriorityLevelConfigurationStatusApplyConfiguration) SetConditions(value PriorityLevelConfigurationConditionList) *PriorityLevelConfigurationStatusApplyConfiguration {
	b.Conditions = &value
	return b
}

// RemoveConditions removes the Conditions field from the declarative configuration.
func (b *PriorityLevelConfigurationStatusApplyConfiguration) RemoveConditions() *PriorityLevelConfigurationStatusApplyConfiguration {
	b.Conditions = nil
	return b
}

// GetConditions gets the Conditions field from the declarative configuration.
func (b *PriorityLevelConfigurationStatusApplyConfiguration) GetConditions() (value PriorityLevelConfigurationConditionList, ok bool) {
	if v := b.Conditions; v != nil {
		return *v, true
	}
	return value, false
}

// PriorityLevelConfigurationStatusList represents a listAlias of PriorityLevelConfigurationStatusApplyConfiguration.
type PriorityLevelConfigurationStatusList []*PriorityLevelConfigurationStatusApplyConfiguration

// PriorityLevelConfigurationStatusList represents a map of PriorityLevelConfigurationStatusApplyConfiguration.
type PriorityLevelConfigurationStatusMap map[string]PriorityLevelConfigurationStatusApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// QueuingConfigurationApplyConfiguration represents an declarative configuration of the QueuingConfiguration type for use
// with apply.
type QueuingConfigurationApplyConfiguration struct {
	Queues           *int32 `json:"queues,omitempty"`
	HandSize         *int32 `json:"handSize,omitempty"`
	QueueLengthLimit *int32 `json:"queueLengthLimit,omitempty"`
}

// QueuingConfigurationApplyConfiguration constructs an declarative configuration of the QueuingConfiguration type for use with
// apply.
func QueuingConfiguration() *QueuingConfigurationApplyConfiguration {
	return &QueuingConfigurationApplyConfiguration{}
}

// SetQueues sets the Queues field in the declarative configuration to the given value.
func (b *QueuingConfigurationApplyConfiguration) SetQueues(value int32) *QueuingConfigurationApplyConfiguration {
	b.Queues = &value
	return b
}

// RemoveQueues removes the Queues field from the declarative configuration.
func (b *QueuingConfigurationApplyConfiguration) RemoveQueues() *QueuingConfigurationApplyConfiguration {
	b.Queues = nil
	return b
}

// GetQueues gets the Queues field from the declarative configuration.
func (b *QueuingConfigurationApplyConfiguration) GetQueues() (value int32, ok bool) {
	if v := b.Queues; v != nil {
		return *v, true
	}
	return value, false
}

// SetHandSize sets the HandSize field in the declarative configuration to the given value.
func (b *QueuingConfigurationApplyConfiguration) SetHandSize(value int32) *QueuingConfigurationApplyConfiguration {
	b.HandSize = &value
	return b
}

// RemoveHandSize removes the HandSize field from the declarative configuration.
func (b *QueuingConfigurationApplyConfiguration) RemoveHandSize() *QueuingConfigurationApplyConfiguration {
	b.HandSize = nil
	return b
}

// GetHandSize gets the HandSize field from the declarative configuration.
func (b *QueuingConfigurationApplyConfiguration) GetHandSize() (value int32, ok bool) {
	if v := b.HandSize; v != nil {
		return *v, true
	}
	return value, false
}

// SetQueueLengthLimit sets the QueueLengthLimit field in the declarative configuration to the given value.
func (b *QueuingConfigurationApplyConfiguration) SetQueueLengthLimit(value int32) *QueuingConfigurationApplyConfiguration {
	b.QueueLengthLimit = &value
	return b
}

// RemoveQueueLengthLimit removes the QueueLengthLimit field from the declarative configuration.
func (b *QueuingConfigurationApplyConfiguration) RemoveQueueLengthLimit() *QueuingConfigurationApplyConfiguration {
	b.QueueLengthLimit = nil
	return b
}

// GetQueueLengthLimit gets the QueueLengthLimit field from the declarative configuration.
func (b *QueuingConfigurationApplyConfiguration) GetQueueLengthLimit() (value int32, ok bool) {
	if v := b.QueueLengthLimit; v != nil {
		return *v, true
	}
	return value, false
}

// QueuingConfigurationList represents a listAlias of QueuingConfigurationApplyConfiguration.
type QueuingConfigurationList []*QueuingConfigurationApplyConfiguration

// QueuingConfigurationList represents a map of QueuingConfigurationApplyConfiguration.
type QueuingConfigurationMap map[string]QueuingConfigurationApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "k8s.io/api/flowcontrol/v1alpha1"
)

// LimitResponseApplyConfiguration represents an declarative configuration of the LimitResponse type for use
// with apply.
type LimitResponseApplyConfiguration struct {
	Type    *v1alpha1.LimitResponseType             `json:"type,omitempty"`
	Queuing *QueuingConfigurationApplyConfiguration `json:"queuing,omitempty"`
}

// LimitResponseApplyConfiguration constructs an declarative configuration of the LimitResponse type for use with
// apply.
func LimitResponse() *LimitResponseApplyConfiguration {
	return &LimitResponseApplyConfiguration{}
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *LimitResponseApplyConfiguration) SetType(value v1alpha1.LimitResponseType) *LimitResponseApplyConfiguration {
	b.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b *LimitResponseApplyConfiguration) RemoveType() *LimitResponseApplyConfiguration {
	b.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b *LimitResponseApplyConfiguration) GetType() (value v1alpha1.LimitResponseType, ok bool) {
	if v := b.Type; v != nil {
		return *v, true
	}
	return value, false
}

// SetQueuing sets the Queuing field in the declarative configuration to the given value.
func (b *LimitResponseApplyConfiguration) SetQueuing(value *QueuingConfigurationApplyConfiguration) *LimitResponseApplyConfiguration {
	b.Queuing = value
	return b
}

// RemoveQueuing removes the Queuing field from the declarative configuration.
func (b *LimitResponseApplyConfiguration) RemoveQueuing() *LimitResponseApplyConfiguration {
	b.Queuing = nil
	return b
}

// GetQueuing gets the Queuing field from the declarative configuration.
func (b *LimitResponseApplyConfiguration) GetQueuing() (value *QueuingConfigurationApplyConfiguration, ok bool) {
	return b.Queuing, b.Queuing != nil
}

// LimitResponseList represents a listAlias of LimitResponseApplyConfiguration.
type LimitResponseList []*LimitResponseApplyConfiguration

// LimitResponseList represents a map of LimitResponseApplyConfiguration.
type LimitResponseMap map[string]LimitResponseApplyConfiguration

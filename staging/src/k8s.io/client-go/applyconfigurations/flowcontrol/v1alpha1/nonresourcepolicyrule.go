/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// NonResourcePolicyRuleApplyConfiguration represents an declarative configuration of the NonResourcePolicyRule type for use
// with apply.
type NonResourcePolicyRuleApplyConfiguration struct {
	fields nonResourcePolicyRuleFields
}

// NonResourcePolicyRuleApplyConfiguration constructs an declarative configuration of the NonResourcePolicyRule type for use with
// apply.
func NonResourcePolicyRule() *NonResourcePolicyRuleApplyConfiguration {
	return &NonResourcePolicyRuleApplyConfiguration{}
}

// nonResourcePolicyRuleFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in NonResourcePolicyRuleApplyConfiguration.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type nonResourcePolicyRuleFields struct {
	Verbs           *[]string `json:"verbs,omitempty"`
	NonResourceURLs *[]string `json:"nonResourceURLs,omitempty"`
}

// SetVerbs sets the Verbs field in the declarative configuration to the given value.
func (b *NonResourcePolicyRuleApplyConfiguration) SetVerbs(value []string) *NonResourcePolicyRuleApplyConfiguration {
	b.fields.Verbs = &value
	return b
}

// RemoveVerbs removes the Verbs field from the declarative configuration.
func (b *NonResourcePolicyRuleApplyConfiguration) RemoveVerbs() *NonResourcePolicyRuleApplyConfiguration {
	b.fields.Verbs = nil
	return b
}

// GetVerbs gets the Verbs field from the declarative configuration.
func (b *NonResourcePolicyRuleApplyConfiguration) GetVerbs() (value []string, ok bool) {
	if v := b.fields.Verbs; v != nil {
		return *v, true
	}
	return value, false
}

// SetNonResourceURLs sets the NonResourceURLs field in the declarative configuration to the given value.
func (b *NonResourcePolicyRuleApplyConfiguration) SetNonResourceURLs(value []string) *NonResourcePolicyRuleApplyConfiguration {
	b.fields.NonResourceURLs = &value
	return b
}

// RemoveNonResourceURLs removes the NonResourceURLs field from the declarative configuration.
func (b *NonResourcePolicyRuleApplyConfiguration) RemoveNonResourceURLs() *NonResourcePolicyRuleApplyConfiguration {
	b.fields.NonResourceURLs = nil
	return b
}

// GetNonResourceURLs gets the NonResourceURLs field from the declarative configuration.
func (b *NonResourcePolicyRuleApplyConfiguration) GetNonResourceURLs() (value []string, ok bool) {
	if v := b.fields.NonResourceURLs; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts NonResourcePolicyRuleApplyConfiguration to unstructured.
func (b *NonResourcePolicyRuleApplyConfiguration) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to NonResourcePolicyRuleApplyConfiguration, replacing the contents
// of NonResourcePolicyRuleApplyConfiguration.
func (b *NonResourcePolicyRuleApplyConfiguration) FromUnstructured(u map[string]interface{}) error {
	m := &nonResourcePolicyRuleFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals NonResourcePolicyRuleApplyConfiguration to JSON.
func (b *NonResourcePolicyRuleApplyConfiguration) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into NonResourcePolicyRuleApplyConfiguration, replacing the contents of
// NonResourcePolicyRuleApplyConfiguration.
func (b *NonResourcePolicyRuleApplyConfiguration) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// NonResourcePolicyRuleList represents a listAlias of NonResourcePolicyRuleApplyConfiguration.
type NonResourcePolicyRuleList []*NonResourcePolicyRuleApplyConfiguration

// NonResourcePolicyRuleList represents a map of NonResourcePolicyRuleApplyConfiguration.
type NonResourcePolicyRuleMap map[string]NonResourcePolicyRuleApplyConfiguration

func (b *NonResourcePolicyRuleApplyConfiguration) preMarshal() {
}
func (b *NonResourcePolicyRuleApplyConfiguration) postUnmarshal() {
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2beta1

import (
	resource "k8s.io/apimachinery/pkg/api/resource"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ObjectMetricSourceApplyConfiguration represents an declarative configuration of the ObjectMetricSource type for use
// with apply.
type ObjectMetricSourceApplyConfiguration struct {
	Target       *CrossVersionObjectReferenceApplyConfiguration `json:"target,omitempty"`
	MetricName   *string                                        `json:"metricName,omitempty"`
	TargetValue  *resource.Quantity                             `json:"targetValue,omitempty"`
	Selector     *v1.LabelSelectorApplyConfiguration            `json:"selector,omitempty"`
	AverageValue *resource.Quantity                             `json:"averageValue,omitempty"`
}

// ObjectMetricSourceApplyConfiguration constructs an declarative configuration of the ObjectMetricSource type for use with
// apply.
func ObjectMetricSource() *ObjectMetricSourceApplyConfiguration {
	return &ObjectMetricSourceApplyConfiguration{}
}

// SetTarget sets the Target field in the declarative configuration to the given value.
func (b *ObjectMetricSourceApplyConfiguration) SetTarget(value *CrossVersionObjectReferenceApplyConfiguration) *ObjectMetricSourceApplyConfiguration {
	b.Target = value
	return b
}

// SetMetricName sets the MetricName field in the declarative configuration to the given value.
func (b *ObjectMetricSourceApplyConfiguration) SetMetricName(value string) *ObjectMetricSourceApplyConfiguration {
	b.MetricName = &value
	return b
}

// SetTargetValue sets the TargetValue field in the declarative configuration to the given value.
func (b *ObjectMetricSourceApplyConfiguration) SetTargetValue(value resource.Quantity) *ObjectMetricSourceApplyConfiguration {
	b.TargetValue = &value
	return b
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b *ObjectMetricSourceApplyConfiguration) SetSelector(value *v1.LabelSelectorApplyConfiguration) *ObjectMetricSourceApplyConfiguration {
	b.Selector = value
	return b
}

// SetAverageValue sets the AverageValue field in the declarative configuration to the given value.
func (b *ObjectMetricSourceApplyConfiguration) SetAverageValue(value resource.Quantity) *ObjectMetricSourceApplyConfiguration {
	b.AverageValue = &value
	return b
}

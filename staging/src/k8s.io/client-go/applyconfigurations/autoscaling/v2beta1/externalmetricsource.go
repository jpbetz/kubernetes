/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2beta1

import (
	resource "k8s.io/apimachinery/pkg/api/resource"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ExternalMetricSourceApplyConfiguration represents an declarative configuration of the ExternalMetricSource type for use
// with apply.
type ExternalMetricSourceApplyConfiguration struct {
	MetricName         *string                             `json:"metricName,omitempty"`
	MetricSelector     *v1.LabelSelectorApplyConfiguration `json:"metricSelector,omitempty"`
	TargetValue        *resource.Quantity                  `json:"targetValue,omitempty"`
	TargetAverageValue *resource.Quantity                  `json:"targetAverageValue,omitempty"`
}

// ExternalMetricSourceApplyConfiguration constructs an declarative configuration of the ExternalMetricSource type for use with
// apply.
func ExternalMetricSource() *ExternalMetricSourceApplyConfiguration {
	return &ExternalMetricSourceApplyConfiguration{}
}

// SetMetricName sets the MetricName field in the declarative configuration to the given value.
func (b *ExternalMetricSourceApplyConfiguration) SetMetricName(value string) *ExternalMetricSourceApplyConfiguration {
	b.MetricName = &value
	return b
}

// RemoveMetricName removes the MetricName field from the declarative configuration.
func (b *ExternalMetricSourceApplyConfiguration) RemoveMetricName() *ExternalMetricSourceApplyConfiguration {
	b.MetricName = nil
	return b
}

// GetMetricName gets the MetricName field from the declarative configuration.
func (b *ExternalMetricSourceApplyConfiguration) GetMetricName() (value string, ok bool) {
	if v := b.MetricName; v != nil {
		return *v, true
	}
	return value, false
}

// SetMetricSelector sets the MetricSelector field in the declarative configuration to the given value.
func (b *ExternalMetricSourceApplyConfiguration) SetMetricSelector(value *v1.LabelSelectorApplyConfiguration) *ExternalMetricSourceApplyConfiguration {
	b.MetricSelector = value
	return b
}

// RemoveMetricSelector removes the MetricSelector field from the declarative configuration.
func (b *ExternalMetricSourceApplyConfiguration) RemoveMetricSelector() *ExternalMetricSourceApplyConfiguration {
	b.MetricSelector = nil
	return b
}

// GetMetricSelector gets the MetricSelector field from the declarative configuration.
func (b *ExternalMetricSourceApplyConfiguration) GetMetricSelector() (value *v1.LabelSelectorApplyConfiguration, ok bool) {
	return b.MetricSelector, b.MetricSelector != nil
}

// SetTargetValue sets the TargetValue field in the declarative configuration to the given value.
func (b *ExternalMetricSourceApplyConfiguration) SetTargetValue(value resource.Quantity) *ExternalMetricSourceApplyConfiguration {
	b.TargetValue = &value
	return b
}

// RemoveTargetValue removes the TargetValue field from the declarative configuration.
func (b *ExternalMetricSourceApplyConfiguration) RemoveTargetValue() *ExternalMetricSourceApplyConfiguration {
	b.TargetValue = nil
	return b
}

// GetTargetValue gets the TargetValue field from the declarative configuration.
func (b *ExternalMetricSourceApplyConfiguration) GetTargetValue() (value resource.Quantity, ok bool) {
	if v := b.TargetValue; v != nil {
		return *v, true
	}
	return value, false
}

// SetTargetAverageValue sets the TargetAverageValue field in the declarative configuration to the given value.
func (b *ExternalMetricSourceApplyConfiguration) SetTargetAverageValue(value resource.Quantity) *ExternalMetricSourceApplyConfiguration {
	b.TargetAverageValue = &value
	return b
}

// RemoveTargetAverageValue removes the TargetAverageValue field from the declarative configuration.
func (b *ExternalMetricSourceApplyConfiguration) RemoveTargetAverageValue() *ExternalMetricSourceApplyConfiguration {
	b.TargetAverageValue = nil
	return b
}

// GetTargetAverageValue gets the TargetAverageValue field from the declarative configuration.
func (b *ExternalMetricSourceApplyConfiguration) GetTargetAverageValue() (value resource.Quantity, ok bool) {
	if v := b.TargetAverageValue; v != nil {
		return *v, true
	}
	return value, false
}

// ExternalMetricSourceList represents a listAlias of ExternalMetricSourceApplyConfiguration.
type ExternalMetricSourceList []*ExternalMetricSourceApplyConfiguration

// ExternalMetricSourceList represents a map of ExternalMetricSourceApplyConfiguration.
type ExternalMetricSourceMap map[string]ExternalMetricSourceApplyConfiguration

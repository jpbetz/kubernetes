/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2beta2

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// MetricIdentifierApplyConfiguration represents an declarative configuration of the MetricIdentifier type for use
// with apply.
type MetricIdentifierApplyConfiguration struct {
	Name     *string                             `json:"name,omitempty"`
	Selector *v1.LabelSelectorApplyConfiguration `json:"selector,omitempty"`
}

// MetricIdentifierApplyConfiguration constructs an declarative configuration of the MetricIdentifier type for use with
// apply.
func MetricIdentifier() *MetricIdentifierApplyConfiguration {
	return &MetricIdentifierApplyConfiguration{}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b *MetricIdentifierApplyConfiguration) SetName(value string) *MetricIdentifierApplyConfiguration {
	b.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b *MetricIdentifierApplyConfiguration) RemoveName() *MetricIdentifierApplyConfiguration {
	b.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b *MetricIdentifierApplyConfiguration) GetName() (value string, ok bool) {
	if v := b.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b *MetricIdentifierApplyConfiguration) SetSelector(value *v1.LabelSelectorApplyConfiguration) *MetricIdentifierApplyConfiguration {
	b.Selector = value
	return b
}

// RemoveSelector removes the Selector field from the declarative configuration.
func (b *MetricIdentifierApplyConfiguration) RemoveSelector() *MetricIdentifierApplyConfiguration {
	b.Selector = nil
	return b
}

// GetSelector gets the Selector field from the declarative configuration.
func (b *MetricIdentifierApplyConfiguration) GetSelector() (value *v1.LabelSelectorApplyConfiguration, ok bool) {
	return b.Selector, b.Selector != nil
}

// MetricIdentifierList represents a listAlias of MetricIdentifierApplyConfiguration.
type MetricIdentifierList []*MetricIdentifierApplyConfiguration

// MetricIdentifierList represents a map of MetricIdentifierApplyConfiguration.
type MetricIdentifierMap map[string]MetricIdentifierApplyConfiguration

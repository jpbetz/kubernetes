/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2beta2

import (
	v2beta2 "k8s.io/api/autoscaling/v2beta2"
)

// MetricSpecApplyConfiguration represents an declarative configuration of the MetricSpec type for use
// with apply.
type MetricSpecApplyConfiguration struct {
	Type              *v2beta2.MetricSourceType                        `json:"type,omitempty"`
	Object            *ObjectMetricSourceApplyConfiguration            `json:"object,omitempty"`
	Pods              *PodsMetricSourceApplyConfiguration              `json:"pods,omitempty"`
	Resource          *ResourceMetricSourceApplyConfiguration          `json:"resource,omitempty"`
	ContainerResource *ContainerResourceMetricSourceApplyConfiguration `json:"containerResource,omitempty"`
	External          *ExternalMetricSourceApplyConfiguration          `json:"external,omitempty"`
}

// MetricSpecApplyConfiguration constructs an declarative configuration of the MetricSpec type for use with
// apply.
func MetricSpec() *MetricSpecApplyConfiguration {
	return &MetricSpecApplyConfiguration{}
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *MetricSpecApplyConfiguration) SetType(value v2beta2.MetricSourceType) *MetricSpecApplyConfiguration {
	b.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) RemoveType() *MetricSpecApplyConfiguration {
	b.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) GetType() (value v2beta2.MetricSourceType, ok bool) {
	if v := b.Type; v != nil {
		return *v, true
	}
	return value, false
}

// SetObject sets the Object field in the declarative configuration to the given value.
func (b *MetricSpecApplyConfiguration) SetObject(value *ObjectMetricSourceApplyConfiguration) *MetricSpecApplyConfiguration {
	b.Object = value
	return b
}

// RemoveObject removes the Object field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) RemoveObject() *MetricSpecApplyConfiguration {
	b.Object = nil
	return b
}

// GetObject gets the Object field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) GetObject() (value *ObjectMetricSourceApplyConfiguration, ok bool) {
	return b.Object, b.Object != nil
}

// SetPods sets the Pods field in the declarative configuration to the given value.
func (b *MetricSpecApplyConfiguration) SetPods(value *PodsMetricSourceApplyConfiguration) *MetricSpecApplyConfiguration {
	b.Pods = value
	return b
}

// RemovePods removes the Pods field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) RemovePods() *MetricSpecApplyConfiguration {
	b.Pods = nil
	return b
}

// GetPods gets the Pods field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) GetPods() (value *PodsMetricSourceApplyConfiguration, ok bool) {
	return b.Pods, b.Pods != nil
}

// SetResource sets the Resource field in the declarative configuration to the given value.
func (b *MetricSpecApplyConfiguration) SetResource(value *ResourceMetricSourceApplyConfiguration) *MetricSpecApplyConfiguration {
	b.Resource = value
	return b
}

// RemoveResource removes the Resource field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) RemoveResource() *MetricSpecApplyConfiguration {
	b.Resource = nil
	return b
}

// GetResource gets the Resource field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) GetResource() (value *ResourceMetricSourceApplyConfiguration, ok bool) {
	return b.Resource, b.Resource != nil
}

// SetContainerResource sets the ContainerResource field in the declarative configuration to the given value.
func (b *MetricSpecApplyConfiguration) SetContainerResource(value *ContainerResourceMetricSourceApplyConfiguration) *MetricSpecApplyConfiguration {
	b.ContainerResource = value
	return b
}

// RemoveContainerResource removes the ContainerResource field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) RemoveContainerResource() *MetricSpecApplyConfiguration {
	b.ContainerResource = nil
	return b
}

// GetContainerResource gets the ContainerResource field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) GetContainerResource() (value *ContainerResourceMetricSourceApplyConfiguration, ok bool) {
	return b.ContainerResource, b.ContainerResource != nil
}

// SetExternal sets the External field in the declarative configuration to the given value.
func (b *MetricSpecApplyConfiguration) SetExternal(value *ExternalMetricSourceApplyConfiguration) *MetricSpecApplyConfiguration {
	b.External = value
	return b
}

// RemoveExternal removes the External field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) RemoveExternal() *MetricSpecApplyConfiguration {
	b.External = nil
	return b
}

// GetExternal gets the External field from the declarative configuration.
func (b *MetricSpecApplyConfiguration) GetExternal() (value *ExternalMetricSourceApplyConfiguration, ok bool) {
	return b.External, b.External != nil
}

// MetricSpecList represents a listAlias of MetricSpecApplyConfiguration.
type MetricSpecList []*MetricSpecApplyConfiguration

// MetricSpecList represents a map of MetricSpecApplyConfiguration.
type MetricSpecMap map[string]MetricSpecApplyConfiguration

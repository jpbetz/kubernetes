/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// PersistentVolumeClaimStatusApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimStatus type for use
// with apply.
type PersistentVolumeClaimStatusApplyConfiguration struct {
	Phase       *v1.PersistentVolumeClaimPhase                      `json:"phase,omitempty"`
	AccessModes *[]v1.PersistentVolumeAccessMode                    `json:"accessModes,omitempty"`
	Capacity    *v1.ResourceList                                    `json:"capacity,omitempty"`
	Conditions  *[]PersistentVolumeClaimConditionApplyConfiguration `json:"conditions,omitempty"`
}

// PersistentVolumeClaimStatusApplyConfiguration constructs an declarative configuration of the PersistentVolumeClaimStatus type for use with
// apply.
func PersistentVolumeClaimStatus() *PersistentVolumeClaimStatusApplyConfiguration {
	return &PersistentVolumeClaimStatusApplyConfiguration{}
}

// SetPhase sets the Phase field in the declarative configuration to the given value.
func (b *PersistentVolumeClaimStatusApplyConfiguration) SetPhase(value v1.PersistentVolumeClaimPhase) *PersistentVolumeClaimStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// SetAccessModes sets the AccessModes field in the declarative configuration to the given value.
func (b *PersistentVolumeClaimStatusApplyConfiguration) SetAccessModes(value []v1.PersistentVolumeAccessMode) *PersistentVolumeClaimStatusApplyConfiguration {
	b.AccessModes = &value
	return b
}

// SetCapacity sets the Capacity field in the declarative configuration to the given value.
func (b *PersistentVolumeClaimStatusApplyConfiguration) SetCapacity(value v1.ResourceList) *PersistentVolumeClaimStatusApplyConfiguration {
	b.Capacity = &value
	return b
}

// SetConditions sets the Conditions field in the declarative configuration to the given value.
func (b *PersistentVolumeClaimStatusApplyConfiguration) SetConditions(value []PersistentVolumeClaimConditionApplyConfiguration) *PersistentVolumeClaimStatusApplyConfiguration {
	b.Conditions = &value
	return b
}

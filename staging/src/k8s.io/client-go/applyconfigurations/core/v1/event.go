/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// EventApplyConfiguration represents an declarative configuration of the Event type for use
// with apply.
type EventApplyConfiguration struct {
	v1.TypeMetaApplyConfiguration   `json:",inline"`
	v1.ObjectMetaApplyConfiguration `json:"metadata,omitempty"`
	InvolvedObject                  *ObjectReferenceApplyConfiguration `json:"involvedObject,omitempty"`
	Reason                          *string                            `json:"reason,omitempty"`
	Message                         *string                            `json:"message,omitempty"`
	Source                          *EventSourceApplyConfiguration     `json:"source,omitempty"`
	FirstTimestamp                  *metav1.Time                       `json:"firstTimestamp,omitempty"`
	LastTimestamp                   *metav1.Time                       `json:"lastTimestamp,omitempty"`
	Count                           *int32                             `json:"count,omitempty"`
	Type                            *string                            `json:"type,omitempty"`
	EventTime                       *metav1.MicroTime                  `json:"eventTime,omitempty"`
	Series                          *EventSeriesApplyConfiguration     `json:"series,omitempty"`
	Action                          *string                            `json:"action,omitempty"`
	Related                         *ObjectReferenceApplyConfiguration `json:"related,omitempty"`
	ReportingController             *string                            `json:"reportingComponent,omitempty"`
	ReportingInstance               *string                            `json:"reportingInstance,omitempty"`
}

// EventApplyConfiguration constructs an declarative configuration of the Event type for use with
// apply.
func Event(name, namespace string) *EventApplyConfiguration {
	b := &EventApplyConfiguration{}
	b.SetName(name)
	b.SetNamespace(namespace)
	b.SetKind("Event")
	b.SetAPIVersion("v1")
	return b
}

// SetInvolvedObject sets the InvolvedObject field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetInvolvedObject(value *ObjectReferenceApplyConfiguration) *EventApplyConfiguration {
	b.InvolvedObject = value
	return b
}

// SetReason sets the Reason field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetReason(value string) *EventApplyConfiguration {
	b.Reason = &value
	return b
}

// SetMessage sets the Message field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetMessage(value string) *EventApplyConfiguration {
	b.Message = &value
	return b
}

// SetSource sets the Source field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetSource(value *EventSourceApplyConfiguration) *EventApplyConfiguration {
	b.Source = value
	return b
}

// SetFirstTimestamp sets the FirstTimestamp field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetFirstTimestamp(value metav1.Time) *EventApplyConfiguration {
	b.FirstTimestamp = &value
	return b
}

// SetLastTimestamp sets the LastTimestamp field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetLastTimestamp(value metav1.Time) *EventApplyConfiguration {
	b.LastTimestamp = &value
	return b
}

// SetCount sets the Count field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetCount(value int32) *EventApplyConfiguration {
	b.Count = &value
	return b
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetType(value string) *EventApplyConfiguration {
	b.Type = &value
	return b
}

// SetEventTime sets the EventTime field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetEventTime(value metav1.MicroTime) *EventApplyConfiguration {
	b.EventTime = &value
	return b
}

// SetSeries sets the Series field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetSeries(value *EventSeriesApplyConfiguration) *EventApplyConfiguration {
	b.Series = value
	return b
}

// SetAction sets the Action field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetAction(value string) *EventApplyConfiguration {
	b.Action = &value
	return b
}

// SetRelated sets the Related field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetRelated(value *ObjectReferenceApplyConfiguration) *EventApplyConfiguration {
	b.Related = value
	return b
}

// SetReportingController sets the ReportingController field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetReportingController(value string) *EventApplyConfiguration {
	b.ReportingController = &value
	return b
}

// SetReportingInstance sets the ReportingInstance field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetReportingInstance(value string) *EventApplyConfiguration {
	b.ReportingInstance = &value
	return b
}

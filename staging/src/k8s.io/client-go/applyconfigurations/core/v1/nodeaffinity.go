/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// NodeAffinityApplyConfiguration represents an declarative configuration of the NodeAffinity type for use
// with apply.
type NodeAffinityApplyConfiguration struct {
	RequiredDuringSchedulingIgnoredDuringExecution  *NodeSelectorApplyConfiguration `json:"requiredDuringSchedulingIgnoredDuringExecution,omitempty"`
	PreferredDuringSchedulingIgnoredDuringExecution *PreferredSchedulingTermList    `json:"preferredDuringSchedulingIgnoredDuringExecution,omitempty"`
}

// NodeAffinityApplyConfiguration constructs an declarative configuration of the NodeAffinity type for use with
// apply.
func NodeAffinity() *NodeAffinityApplyConfiguration {
	return &NodeAffinityApplyConfiguration{}
}

// SetRequiredDuringSchedulingIgnoredDuringExecution sets the RequiredDuringSchedulingIgnoredDuringExecution field in the declarative configuration to the given value.
func (b *NodeAffinityApplyConfiguration) SetRequiredDuringSchedulingIgnoredDuringExecution(value *NodeSelectorApplyConfiguration) *NodeAffinityApplyConfiguration {
	b.RequiredDuringSchedulingIgnoredDuringExecution = value
	return b
}

// RemoveRequiredDuringSchedulingIgnoredDuringExecution removes the RequiredDuringSchedulingIgnoredDuringExecution field from the declarative configuration.
func (b *NodeAffinityApplyConfiguration) RemoveRequiredDuringSchedulingIgnoredDuringExecution() *NodeAffinityApplyConfiguration {
	b.RequiredDuringSchedulingIgnoredDuringExecution = nil
	return b
}

// GetRequiredDuringSchedulingIgnoredDuringExecution gets the RequiredDuringSchedulingIgnoredDuringExecution field from the declarative configuration.
func (b *NodeAffinityApplyConfiguration) GetRequiredDuringSchedulingIgnoredDuringExecution() (value *NodeSelectorApplyConfiguration, ok bool) {
	return b.RequiredDuringSchedulingIgnoredDuringExecution, b.RequiredDuringSchedulingIgnoredDuringExecution != nil
}

// SetPreferredDuringSchedulingIgnoredDuringExecution sets the PreferredDuringSchedulingIgnoredDuringExecution field in the declarative configuration to the given value.
func (b *NodeAffinityApplyConfiguration) SetPreferredDuringSchedulingIgnoredDuringExecution(value PreferredSchedulingTermList) *NodeAffinityApplyConfiguration {
	b.PreferredDuringSchedulingIgnoredDuringExecution = &value
	return b
}

// RemovePreferredDuringSchedulingIgnoredDuringExecution removes the PreferredDuringSchedulingIgnoredDuringExecution field from the declarative configuration.
func (b *NodeAffinityApplyConfiguration) RemovePreferredDuringSchedulingIgnoredDuringExecution() *NodeAffinityApplyConfiguration {
	b.PreferredDuringSchedulingIgnoredDuringExecution = nil
	return b
}

// GetPreferredDuringSchedulingIgnoredDuringExecution gets the PreferredDuringSchedulingIgnoredDuringExecution field from the declarative configuration.
func (b *NodeAffinityApplyConfiguration) GetPreferredDuringSchedulingIgnoredDuringExecution() (value PreferredSchedulingTermList, ok bool) {
	if v := b.PreferredDuringSchedulingIgnoredDuringExecution; v != nil {
		return *v, true
	}
	return value, false
}

// NodeAffinityList represents a listAlias of NodeAffinityApplyConfiguration.
type NodeAffinityList []*NodeAffinityApplyConfiguration

// NodeAffinityList represents a map of NodeAffinityApplyConfiguration.
type NodeAffinityMap map[string]NodeAffinityApplyConfiguration

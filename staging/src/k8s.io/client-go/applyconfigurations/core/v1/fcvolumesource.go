/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// FCVolumeSourceApplyConfiguration represents an declarative configuration of the FCVolumeSource type for use
// with apply.
type FCVolumeSourceApplyConfiguration struct {
	TargetWWNs *[]string `json:"targetWWNs,omitempty"`
	Lun        *int32    `json:"lun,omitempty"`
	FSType     *string   `json:"fsType,omitempty"`
	ReadOnly   *bool     `json:"readOnly,omitempty"`
	WWIDs      *[]string `json:"wwids,omitempty"`
}

// FCVolumeSourceApplyConfiguration constructs an declarative configuration of the FCVolumeSource type for use with
// apply.
func FCVolumeSource() *FCVolumeSourceApplyConfiguration {
	return &FCVolumeSourceApplyConfiguration{}
}

// SetTargetWWNs sets the TargetWWNs field in the declarative configuration to the given value.
func (b *FCVolumeSourceApplyConfiguration) SetTargetWWNs(value []string) *FCVolumeSourceApplyConfiguration {
	b.TargetWWNs = &value
	return b
}

// RemoveTargetWWNs removes the TargetWWNs field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) RemoveTargetWWNs() *FCVolumeSourceApplyConfiguration {
	b.TargetWWNs = nil
	return b
}

// GetTargetWWNs gets the TargetWWNs field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) GetTargetWWNs() (value []string, ok bool) {
	if v := b.TargetWWNs; v != nil {
		return *v, true
	}
	return value, false
}

// SetLun sets the Lun field in the declarative configuration to the given value.
func (b *FCVolumeSourceApplyConfiguration) SetLun(value int32) *FCVolumeSourceApplyConfiguration {
	b.Lun = &value
	return b
}

// RemoveLun removes the Lun field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) RemoveLun() *FCVolumeSourceApplyConfiguration {
	b.Lun = nil
	return b
}

// GetLun gets the Lun field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) GetLun() (value int32, ok bool) {
	if v := b.Lun; v != nil {
		return *v, true
	}
	return value, false
}

// SetFSType sets the FSType field in the declarative configuration to the given value.
func (b *FCVolumeSourceApplyConfiguration) SetFSType(value string) *FCVolumeSourceApplyConfiguration {
	b.FSType = &value
	return b
}

// RemoveFSType removes the FSType field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) RemoveFSType() *FCVolumeSourceApplyConfiguration {
	b.FSType = nil
	return b
}

// GetFSType gets the FSType field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) GetFSType() (value string, ok bool) {
	if v := b.FSType; v != nil {
		return *v, true
	}
	return value, false
}

// SetReadOnly sets the ReadOnly field in the declarative configuration to the given value.
func (b *FCVolumeSourceApplyConfiguration) SetReadOnly(value bool) *FCVolumeSourceApplyConfiguration {
	b.ReadOnly = &value
	return b
}

// RemoveReadOnly removes the ReadOnly field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) RemoveReadOnly() *FCVolumeSourceApplyConfiguration {
	b.ReadOnly = nil
	return b
}

// GetReadOnly gets the ReadOnly field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) GetReadOnly() (value bool, ok bool) {
	if v := b.ReadOnly; v != nil {
		return *v, true
	}
	return value, false
}

// SetWWIDs sets the WWIDs field in the declarative configuration to the given value.
func (b *FCVolumeSourceApplyConfiguration) SetWWIDs(value []string) *FCVolumeSourceApplyConfiguration {
	b.WWIDs = &value
	return b
}

// RemoveWWIDs removes the WWIDs field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) RemoveWWIDs() *FCVolumeSourceApplyConfiguration {
	b.WWIDs = nil
	return b
}

// GetWWIDs gets the WWIDs field from the declarative configuration.
func (b *FCVolumeSourceApplyConfiguration) GetWWIDs() (value []string, ok bool) {
	if v := b.WWIDs; v != nil {
		return *v, true
	}
	return value, false
}

// FCVolumeSourceList represents a listAlias of FCVolumeSourceApplyConfiguration.
type FCVolumeSourceList []*FCVolumeSourceApplyConfiguration

// FCVolumeSourceList represents a map of FCVolumeSourceApplyConfiguration.
type FCVolumeSourceMap map[string]FCVolumeSourceApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use
// with apply.
type SELinuxOptionsApplyConfiguration struct {
	User  *string `json:"user,omitempty"`
	Role  *string `json:"role,omitempty"`
	Type  *string `json:"type,omitempty"`
	Level *string `json:"level,omitempty"`
}

// SELinuxOptionsApplyConfiguration constructs an declarative configuration of the SELinuxOptions type for use with
// apply.
func SELinuxOptions() *SELinuxOptionsApplyConfiguration {
	return &SELinuxOptionsApplyConfiguration{}
}

// SetUser sets the User field in the declarative configuration to the given value.
func (b *SELinuxOptionsApplyConfiguration) SetUser(value string) *SELinuxOptionsApplyConfiguration {
	b.User = &value
	return b
}

// RemoveUser removes the User field from the declarative configuration.
func (b *SELinuxOptionsApplyConfiguration) RemoveUser() *SELinuxOptionsApplyConfiguration {
	b.User = nil
	return b
}

// GetUser gets the User field from the declarative configuration.
func (b *SELinuxOptionsApplyConfiguration) GetUser() (value string, ok bool) {
	if v := b.User; v != nil {
		return *v, true
	}
	return value, false
}

// SetRole sets the Role field in the declarative configuration to the given value.
func (b *SELinuxOptionsApplyConfiguration) SetRole(value string) *SELinuxOptionsApplyConfiguration {
	b.Role = &value
	return b
}

// RemoveRole removes the Role field from the declarative configuration.
func (b *SELinuxOptionsApplyConfiguration) RemoveRole() *SELinuxOptionsApplyConfiguration {
	b.Role = nil
	return b
}

// GetRole gets the Role field from the declarative configuration.
func (b *SELinuxOptionsApplyConfiguration) GetRole() (value string, ok bool) {
	if v := b.Role; v != nil {
		return *v, true
	}
	return value, false
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *SELinuxOptionsApplyConfiguration) SetType(value string) *SELinuxOptionsApplyConfiguration {
	b.Type = &value
	return b
}

// RemoveType removes the Type field from the declarative configuration.
func (b *SELinuxOptionsApplyConfiguration) RemoveType() *SELinuxOptionsApplyConfiguration {
	b.Type = nil
	return b
}

// GetType gets the Type field from the declarative configuration.
func (b *SELinuxOptionsApplyConfiguration) GetType() (value string, ok bool) {
	if v := b.Type; v != nil {
		return *v, true
	}
	return value, false
}

// SetLevel sets the Level field in the declarative configuration to the given value.
func (b *SELinuxOptionsApplyConfiguration) SetLevel(value string) *SELinuxOptionsApplyConfiguration {
	b.Level = &value
	return b
}

// RemoveLevel removes the Level field from the declarative configuration.
func (b *SELinuxOptionsApplyConfiguration) RemoveLevel() *SELinuxOptionsApplyConfiguration {
	b.Level = nil
	return b
}

// GetLevel gets the Level field from the declarative configuration.
func (b *SELinuxOptionsApplyConfiguration) GetLevel() (value string, ok bool) {
	if v := b.Level; v != nil {
		return *v, true
	}
	return value, false
}

// SELinuxOptionsList represents a listAlias of SELinuxOptionsApplyConfiguration.
type SELinuxOptionsList []*SELinuxOptionsApplyConfiguration

// SELinuxOptionsList represents a map of SELinuxOptionsApplyConfiguration.
type SELinuxOptionsMap map[string]SELinuxOptionsApplyConfiguration

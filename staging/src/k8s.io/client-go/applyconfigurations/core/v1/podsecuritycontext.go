/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
)

// PodSecurityContextApplyConfiguration represents an declarative configuration of the PodSecurityContext type for use
// with apply.
type PodSecurityContextApplyConfiguration struct {
	SELinuxOptions      *SELinuxOptionsApplyConfiguration                `json:"seLinuxOptions,omitempty"`
	WindowsOptions      *WindowsSecurityContextOptionsApplyConfiguration `json:"windowsOptions,omitempty"`
	RunAsUser           *int64                                           `json:"runAsUser,omitempty"`
	RunAsGroup          *int64                                           `json:"runAsGroup,omitempty"`
	RunAsNonRoot        *bool                                            `json:"runAsNonRoot,omitempty"`
	SupplementalGroups  *[]int64                                         `json:"supplementalGroups,omitempty"`
	FSGroup             *int64                                           `json:"fsGroup,omitempty"`
	Sysctls             *[]SysctlApplyConfiguration                      `json:"sysctls,omitempty"`
	FSGroupChangePolicy *corev1.PodFSGroupChangePolicy                   `json:"fsGroupChangePolicy,omitempty"`
	SeccompProfile      *SeccompProfileApplyConfiguration                `json:"seccompProfile,omitempty"`
}

// PodSecurityContextApplyConfiguration constructs an declarative configuration of the PodSecurityContext type for use with
// apply.
func PodSecurityContext() *PodSecurityContextApplyConfiguration {
	return &PodSecurityContextApplyConfiguration{}
}

// SetSELinuxOptions sets the SELinuxOptions field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetSELinuxOptions(value *SELinuxOptionsApplyConfiguration) *PodSecurityContextApplyConfiguration {
	b.SELinuxOptions = value
	return b
}

// SetWindowsOptions sets the WindowsOptions field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetWindowsOptions(value *WindowsSecurityContextOptionsApplyConfiguration) *PodSecurityContextApplyConfiguration {
	b.WindowsOptions = value
	return b
}

// SetRunAsUser sets the RunAsUser field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetRunAsUser(value int64) *PodSecurityContextApplyConfiguration {
	b.RunAsUser = &value
	return b
}

// SetRunAsGroup sets the RunAsGroup field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetRunAsGroup(value int64) *PodSecurityContextApplyConfiguration {
	b.RunAsGroup = &value
	return b
}

// SetRunAsNonRoot sets the RunAsNonRoot field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetRunAsNonRoot(value bool) *PodSecurityContextApplyConfiguration {
	b.RunAsNonRoot = &value
	return b
}

// SetSupplementalGroups sets the SupplementalGroups field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetSupplementalGroups(value []int64) *PodSecurityContextApplyConfiguration {
	b.SupplementalGroups = &value
	return b
}

// SetFSGroup sets the FSGroup field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetFSGroup(value int64) *PodSecurityContextApplyConfiguration {
	b.FSGroup = &value
	return b
}

// SetSysctls sets the Sysctls field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetSysctls(value []SysctlApplyConfiguration) *PodSecurityContextApplyConfiguration {
	b.Sysctls = &value
	return b
}

// SetFSGroupChangePolicy sets the FSGroupChangePolicy field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetFSGroupChangePolicy(value corev1.PodFSGroupChangePolicy) *PodSecurityContextApplyConfiguration {
	b.FSGroupChangePolicy = &value
	return b
}

// SetSeccompProfile sets the SeccompProfile field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetSeccompProfile(value *SeccompProfileApplyConfiguration) *PodSecurityContextApplyConfiguration {
	b.SeccompProfile = value
	return b
}

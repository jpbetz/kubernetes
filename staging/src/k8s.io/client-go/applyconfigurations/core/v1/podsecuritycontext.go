/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
)

// PodSecurityContextApplyConfiguration represents an declarative configuration of the PodSecurityContext type for use
// with apply.
type PodSecurityContextApplyConfiguration struct {
	SELinuxOptions      *SELinuxOptionsApplyConfiguration                `json:"seLinuxOptions,omitempty"`
	WindowsOptions      *WindowsSecurityContextOptionsApplyConfiguration `json:"windowsOptions,omitempty"`
	RunAsUser           *int64                                           `json:"runAsUser,omitempty"`
	RunAsGroup          *int64                                           `json:"runAsGroup,omitempty"`
	RunAsNonRoot        *bool                                            `json:"runAsNonRoot,omitempty"`
	SupplementalGroups  *[]int64                                         `json:"supplementalGroups,omitempty"`
	FSGroup             *int64                                           `json:"fsGroup,omitempty"`
	Sysctls             *SysctlList                                      `json:"sysctls,omitempty"`
	FSGroupChangePolicy *corev1.PodFSGroupChangePolicy                   `json:"fsGroupChangePolicy,omitempty"`
	SeccompProfile      *SeccompProfileApplyConfiguration                `json:"seccompProfile,omitempty"`
}

// PodSecurityContextApplyConfiguration constructs an declarative configuration of the PodSecurityContext type for use with
// apply.
func PodSecurityContext() *PodSecurityContextApplyConfiguration {
	return &PodSecurityContextApplyConfiguration{}
}

// SetSELinuxOptions sets the SELinuxOptions field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetSELinuxOptions(value *SELinuxOptionsApplyConfiguration) *PodSecurityContextApplyConfiguration {
	b.SELinuxOptions = value
	return b
}

// RemoveSELinuxOptions removes the SELinuxOptions field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveSELinuxOptions() *PodSecurityContextApplyConfiguration {
	b.SELinuxOptions = nil
	return b
}

// GetSELinuxOptions gets the SELinuxOptions field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetSELinuxOptions() (value *SELinuxOptionsApplyConfiguration, ok bool) {
	return b.SELinuxOptions, b.SELinuxOptions != nil
}

// SetWindowsOptions sets the WindowsOptions field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetWindowsOptions(value *WindowsSecurityContextOptionsApplyConfiguration) *PodSecurityContextApplyConfiguration {
	b.WindowsOptions = value
	return b
}

// RemoveWindowsOptions removes the WindowsOptions field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveWindowsOptions() *PodSecurityContextApplyConfiguration {
	b.WindowsOptions = nil
	return b
}

// GetWindowsOptions gets the WindowsOptions field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetWindowsOptions() (value *WindowsSecurityContextOptionsApplyConfiguration, ok bool) {
	return b.WindowsOptions, b.WindowsOptions != nil
}

// SetRunAsUser sets the RunAsUser field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetRunAsUser(value int64) *PodSecurityContextApplyConfiguration {
	b.RunAsUser = &value
	return b
}

// RemoveRunAsUser removes the RunAsUser field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveRunAsUser() *PodSecurityContextApplyConfiguration {
	b.RunAsUser = nil
	return b
}

// GetRunAsUser gets the RunAsUser field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetRunAsUser() (value int64, ok bool) {
	if v := b.RunAsUser; v != nil {
		return *v, true
	}
	return value, false
}

// SetRunAsGroup sets the RunAsGroup field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetRunAsGroup(value int64) *PodSecurityContextApplyConfiguration {
	b.RunAsGroup = &value
	return b
}

// RemoveRunAsGroup removes the RunAsGroup field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveRunAsGroup() *PodSecurityContextApplyConfiguration {
	b.RunAsGroup = nil
	return b
}

// GetRunAsGroup gets the RunAsGroup field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetRunAsGroup() (value int64, ok bool) {
	if v := b.RunAsGroup; v != nil {
		return *v, true
	}
	return value, false
}

// SetRunAsNonRoot sets the RunAsNonRoot field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetRunAsNonRoot(value bool) *PodSecurityContextApplyConfiguration {
	b.RunAsNonRoot = &value
	return b
}

// RemoveRunAsNonRoot removes the RunAsNonRoot field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveRunAsNonRoot() *PodSecurityContextApplyConfiguration {
	b.RunAsNonRoot = nil
	return b
}

// GetRunAsNonRoot gets the RunAsNonRoot field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetRunAsNonRoot() (value bool, ok bool) {
	if v := b.RunAsNonRoot; v != nil {
		return *v, true
	}
	return value, false
}

// SetSupplementalGroups sets the SupplementalGroups field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetSupplementalGroups(value []int64) *PodSecurityContextApplyConfiguration {
	b.SupplementalGroups = &value
	return b
}

// RemoveSupplementalGroups removes the SupplementalGroups field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveSupplementalGroups() *PodSecurityContextApplyConfiguration {
	b.SupplementalGroups = nil
	return b
}

// GetSupplementalGroups gets the SupplementalGroups field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetSupplementalGroups() (value []int64, ok bool) {
	if v := b.SupplementalGroups; v != nil {
		return *v, true
	}
	return value, false
}

// SetFSGroup sets the FSGroup field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetFSGroup(value int64) *PodSecurityContextApplyConfiguration {
	b.FSGroup = &value
	return b
}

// RemoveFSGroup removes the FSGroup field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveFSGroup() *PodSecurityContextApplyConfiguration {
	b.FSGroup = nil
	return b
}

// GetFSGroup gets the FSGroup field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetFSGroup() (value int64, ok bool) {
	if v := b.FSGroup; v != nil {
		return *v, true
	}
	return value, false
}

// SetSysctls sets the Sysctls field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetSysctls(value SysctlList) *PodSecurityContextApplyConfiguration {
	b.Sysctls = &value
	return b
}

// RemoveSysctls removes the Sysctls field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveSysctls() *PodSecurityContextApplyConfiguration {
	b.Sysctls = nil
	return b
}

// GetSysctls gets the Sysctls field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetSysctls() (value SysctlList, ok bool) {
	if v := b.Sysctls; v != nil {
		return *v, true
	}
	return value, false
}

// SetFSGroupChangePolicy sets the FSGroupChangePolicy field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetFSGroupChangePolicy(value corev1.PodFSGroupChangePolicy) *PodSecurityContextApplyConfiguration {
	b.FSGroupChangePolicy = &value
	return b
}

// RemoveFSGroupChangePolicy removes the FSGroupChangePolicy field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveFSGroupChangePolicy() *PodSecurityContextApplyConfiguration {
	b.FSGroupChangePolicy = nil
	return b
}

// GetFSGroupChangePolicy gets the FSGroupChangePolicy field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetFSGroupChangePolicy() (value corev1.PodFSGroupChangePolicy, ok bool) {
	if v := b.FSGroupChangePolicy; v != nil {
		return *v, true
	}
	return value, false
}

// SetSeccompProfile sets the SeccompProfile field in the declarative configuration to the given value.
func (b *PodSecurityContextApplyConfiguration) SetSeccompProfile(value *SeccompProfileApplyConfiguration) *PodSecurityContextApplyConfiguration {
	b.SeccompProfile = value
	return b
}

// RemoveSeccompProfile removes the SeccompProfile field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) RemoveSeccompProfile() *PodSecurityContextApplyConfiguration {
	b.SeccompProfile = nil
	return b
}

// GetSeccompProfile gets the SeccompProfile field from the declarative configuration.
func (b *PodSecurityContextApplyConfiguration) GetSeccompProfile() (value *SeccompProfileApplyConfiguration, ok bool) {
	return b.SeccompProfile, b.SeccompProfile != nil
}

// PodSecurityContextList represents a listAlias of PodSecurityContextApplyConfiguration.
type PodSecurityContextList []*PodSecurityContextApplyConfiguration

// PodSecurityContextList represents a map of PodSecurityContextApplyConfiguration.
type PodSecurityContextMap map[string]PodSecurityContextApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// EventSourceApplyConfiguration represents an declarative configuration of the EventSource type for use
// with apply.
type EventSourceApplyConfiguration struct {
	Component *string `json:"component,omitempty"`
	Host      *string `json:"host,omitempty"`
}

// EventSourceApplyConfiguration constructs an declarative configuration of the EventSource type for use with
// apply.
func EventSource() *EventSourceApplyConfiguration {
	return &EventSourceApplyConfiguration{}
}

// SetComponent sets the Component field in the declarative configuration to the given value.
func (b *EventSourceApplyConfiguration) SetComponent(value string) *EventSourceApplyConfiguration {
	b.Component = &value
	return b
}

// RemoveComponent removes the Component field from the declarative configuration.
func (b *EventSourceApplyConfiguration) RemoveComponent() *EventSourceApplyConfiguration {
	b.Component = nil
	return b
}

// GetComponent gets the Component field from the declarative configuration.
func (b *EventSourceApplyConfiguration) GetComponent() (value string, ok bool) {
	if v := b.Component; v != nil {
		return *v, true
	}
	return value, false
}

// SetHost sets the Host field in the declarative configuration to the given value.
func (b *EventSourceApplyConfiguration) SetHost(value string) *EventSourceApplyConfiguration {
	b.Host = &value
	return b
}

// RemoveHost removes the Host field from the declarative configuration.
func (b *EventSourceApplyConfiguration) RemoveHost() *EventSourceApplyConfiguration {
	b.Host = nil
	return b
}

// GetHost gets the Host field from the declarative configuration.
func (b *EventSourceApplyConfiguration) GetHost() (value string, ok bool) {
	if v := b.Host; v != nil {
		return *v, true
	}
	return value, false
}

// EventSourceList represents a listAlias of EventSourceApplyConfiguration.
type EventSourceList []*EventSourceApplyConfiguration

// EventSourceList represents a map of EventSourceApplyConfiguration.
type EventSourceMap map[string]EventSourceApplyConfiguration

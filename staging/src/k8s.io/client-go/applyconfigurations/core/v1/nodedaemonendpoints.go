/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// NodeDaemonEndpointsApplyConfiguration represents an declarative configuration of the NodeDaemonEndpoints type for use
// with apply.
type NodeDaemonEndpointsApplyConfiguration struct {
	fields nodeDaemonEndpointsFields
}

// NodeDaemonEndpointsApplyConfiguration constructs an declarative configuration of the NodeDaemonEndpoints type for use with
// apply.
func NodeDaemonEndpoints() *NodeDaemonEndpointsApplyConfiguration {
	return &NodeDaemonEndpointsApplyConfiguration{}
}

// nodeDaemonEndpointsFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in NodeDaemonEndpointsApplyConfiguration.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type nodeDaemonEndpointsFields struct {
	KubeletEndpoint *DaemonEndpointApplyConfiguration `json:"kubeletEndpoint,omitempty"`
}

// SetKubeletEndpoint sets the KubeletEndpoint field in the declarative configuration to the given value.
func (b *NodeDaemonEndpointsApplyConfiguration) SetKubeletEndpoint(value *DaemonEndpointApplyConfiguration) *NodeDaemonEndpointsApplyConfiguration {
	b.fields.KubeletEndpoint = value
	return b
}

// RemoveKubeletEndpoint removes the KubeletEndpoint field from the declarative configuration.
func (b *NodeDaemonEndpointsApplyConfiguration) RemoveKubeletEndpoint() *NodeDaemonEndpointsApplyConfiguration {
	b.fields.KubeletEndpoint = nil
	return b
}

// GetKubeletEndpoint gets the KubeletEndpoint field from the declarative configuration.
func (b *NodeDaemonEndpointsApplyConfiguration) GetKubeletEndpoint() (value *DaemonEndpointApplyConfiguration, ok bool) {
	return b.fields.KubeletEndpoint, b.fields.KubeletEndpoint != nil
}

// ToUnstructured converts NodeDaemonEndpointsApplyConfiguration to unstructured.
func (b *NodeDaemonEndpointsApplyConfiguration) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to NodeDaemonEndpointsApplyConfiguration, replacing the contents
// of NodeDaemonEndpointsApplyConfiguration.
func (b *NodeDaemonEndpointsApplyConfiguration) FromUnstructured(u map[string]interface{}) error {
	m := &nodeDaemonEndpointsFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals NodeDaemonEndpointsApplyConfiguration to JSON.
func (b *NodeDaemonEndpointsApplyConfiguration) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into NodeDaemonEndpointsApplyConfiguration, replacing the contents of
// NodeDaemonEndpointsApplyConfiguration.
func (b *NodeDaemonEndpointsApplyConfiguration) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// NodeDaemonEndpointsList represents a listAlias of NodeDaemonEndpointsApplyConfiguration.
type NodeDaemonEndpointsList []*NodeDaemonEndpointsApplyConfiguration

// NodeDaemonEndpointsList represents a map of NodeDaemonEndpointsApplyConfiguration.
type NodeDaemonEndpointsMap map[string]NodeDaemonEndpointsApplyConfiguration

func (b *NodeDaemonEndpointsApplyConfiguration) preMarshal() {
}
func (b *NodeDaemonEndpointsApplyConfiguration) postUnmarshal() {
}

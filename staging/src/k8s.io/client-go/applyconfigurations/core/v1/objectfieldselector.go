/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use
// with apply.
type ObjectFieldSelectorApplyConfiguration struct {
	APIVersion *string `json:"apiVersion,omitempty"`
	FieldPath  *string `json:"fieldPath,omitempty"`
}

// ObjectFieldSelectorApplyConfiguration constructs an declarative configuration of the ObjectFieldSelector type for use with
// apply.
func ObjectFieldSelector() *ObjectFieldSelectorApplyConfiguration {
	return &ObjectFieldSelectorApplyConfiguration{}
}

// SetAPIVersion sets the APIVersion field in the declarative configuration to the given value.
func (b *ObjectFieldSelectorApplyConfiguration) SetAPIVersion(value string) *ObjectFieldSelectorApplyConfiguration {
	b.APIVersion = &value
	return b
}

// RemoveAPIVersion removes the APIVersion field from the declarative configuration.
func (b *ObjectFieldSelectorApplyConfiguration) RemoveAPIVersion() *ObjectFieldSelectorApplyConfiguration {
	b.APIVersion = nil
	return b
}

// GetAPIVersion gets the APIVersion field from the declarative configuration.
func (b *ObjectFieldSelectorApplyConfiguration) GetAPIVersion() (value string, ok bool) {
	if v := b.APIVersion; v != nil {
		return *v, true
	}
	return value, false
}

// SetFieldPath sets the FieldPath field in the declarative configuration to the given value.
func (b *ObjectFieldSelectorApplyConfiguration) SetFieldPath(value string) *ObjectFieldSelectorApplyConfiguration {
	b.FieldPath = &value
	return b
}

// RemoveFieldPath removes the FieldPath field from the declarative configuration.
func (b *ObjectFieldSelectorApplyConfiguration) RemoveFieldPath() *ObjectFieldSelectorApplyConfiguration {
	b.FieldPath = nil
	return b
}

// GetFieldPath gets the FieldPath field from the declarative configuration.
func (b *ObjectFieldSelectorApplyConfiguration) GetFieldPath() (value string, ok bool) {
	if v := b.FieldPath; v != nil {
		return *v, true
	}
	return value, false
}

// ObjectFieldSelectorList represents a listAlias of ObjectFieldSelectorApplyConfiguration.
type ObjectFieldSelectorList []*ObjectFieldSelectorApplyConfiguration

// ObjectFieldSelectorList represents a map of ObjectFieldSelectorApplyConfiguration.
type ObjectFieldSelectorMap map[string]ObjectFieldSelectorApplyConfiguration

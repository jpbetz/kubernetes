/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PreferredSchedulingTermApplyConfiguration represents an declarative configuration of the PreferredSchedulingTerm type for use
// with apply.
type PreferredSchedulingTermApplyConfiguration struct {
	Weight     *int32                              `json:"weight,omitempty"`
	Preference *NodeSelectorTermApplyConfiguration `json:"preference,omitempty"`
}

// PreferredSchedulingTermApplyConfiguration constructs an declarative configuration of the PreferredSchedulingTerm type for use with
// apply.
func PreferredSchedulingTerm() *PreferredSchedulingTermApplyConfiguration {
	return &PreferredSchedulingTermApplyConfiguration{}
}

// SetWeight sets the Weight field in the declarative configuration to the given value.
func (b *PreferredSchedulingTermApplyConfiguration) SetWeight(value int32) *PreferredSchedulingTermApplyConfiguration {
	b.Weight = &value
	return b
}

// RemoveWeight removes the Weight field from the declarative configuration.
func (b *PreferredSchedulingTermApplyConfiguration) RemoveWeight() *PreferredSchedulingTermApplyConfiguration {
	b.Weight = nil
	return b
}

// GetWeight gets the Weight field from the declarative configuration.
func (b *PreferredSchedulingTermApplyConfiguration) GetWeight() (value int32, ok bool) {
	if v := b.Weight; v != nil {
		return *v, true
	}
	return value, false
}

// SetPreference sets the Preference field in the declarative configuration to the given value.
func (b *PreferredSchedulingTermApplyConfiguration) SetPreference(value *NodeSelectorTermApplyConfiguration) *PreferredSchedulingTermApplyConfiguration {
	b.Preference = value
	return b
}

// RemovePreference removes the Preference field from the declarative configuration.
func (b *PreferredSchedulingTermApplyConfiguration) RemovePreference() *PreferredSchedulingTermApplyConfiguration {
	b.Preference = nil
	return b
}

// GetPreference gets the Preference field from the declarative configuration.
func (b *PreferredSchedulingTermApplyConfiguration) GetPreference() (value *NodeSelectorTermApplyConfiguration, ok bool) {
	return b.Preference, b.Preference != nil
}

// PreferredSchedulingTermList represents a listAlias of PreferredSchedulingTermApplyConfiguration.
type PreferredSchedulingTermList []*PreferredSchedulingTermApplyConfiguration

// PreferredSchedulingTermList represents a map of PreferredSchedulingTermApplyConfiguration.
type PreferredSchedulingTermMap map[string]PreferredSchedulingTermApplyConfiguration

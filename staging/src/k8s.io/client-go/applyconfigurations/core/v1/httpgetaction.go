/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use
// with apply.
type HTTPGetActionApplyConfiguration struct {
	Path        *string                         `json:"path,omitempty"`
	Port        *intstr.IntOrString             `json:"port,omitempty"`
	Host        *string                         `json:"host,omitempty"`
	Scheme      *v1.URIScheme                   `json:"scheme,omitempty"`
	HTTPHeaders *[]HTTPHeaderApplyConfiguration `json:"httpHeaders,omitempty"`
}

// HTTPGetActionApplyConfiguration constructs an declarative configuration of the HTTPGetAction type for use with
// apply.
func HTTPGetAction() *HTTPGetActionApplyConfiguration {
	return &HTTPGetActionApplyConfiguration{}
}

// SetPath sets the Path field in the declarative configuration to the given value.
func (b *HTTPGetActionApplyConfiguration) SetPath(value string) *HTTPGetActionApplyConfiguration {
	b.Path = &value
	return b
}

// SetPort sets the Port field in the declarative configuration to the given value.
func (b *HTTPGetActionApplyConfiguration) SetPort(value intstr.IntOrString) *HTTPGetActionApplyConfiguration {
	b.Port = &value
	return b
}

// SetHost sets the Host field in the declarative configuration to the given value.
func (b *HTTPGetActionApplyConfiguration) SetHost(value string) *HTTPGetActionApplyConfiguration {
	b.Host = &value
	return b
}

// SetScheme sets the Scheme field in the declarative configuration to the given value.
func (b *HTTPGetActionApplyConfiguration) SetScheme(value v1.URIScheme) *HTTPGetActionApplyConfiguration {
	b.Scheme = &value
	return b
}

// SetHTTPHeaders sets the HTTPHeaders field in the declarative configuration to the given value.
func (b *HTTPGetActionApplyConfiguration) SetHTTPHeaders(value []HTTPHeaderApplyConfiguration) *HTTPGetActionApplyConfiguration {
	b.HTTPHeaders = &value
	return b
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
)

// ServiceSpecApplyConfiguration represents an declarative configuration of the ServiceSpec type for use
// with apply.
type ServiceSpecApplyConfiguration struct {
	Ports                         *[]ServicePortApplyConfiguration         `json:"ports,omitempty"`
	Selector                      *map[string]string                       `json:"selector,omitempty"`
	ClusterIP                     *string                                  `json:"clusterIP,omitempty"`
	ClusterIPs                    *[]string                                `json:"clusterIPs,omitempty"`
	Type                          *corev1.ServiceType                      `json:"type,omitempty"`
	ExternalIPs                   *[]string                                `json:"externalIPs,omitempty"`
	SessionAffinity               *corev1.ServiceAffinity                  `json:"sessionAffinity,omitempty"`
	LoadBalancerIP                *string                                  `json:"loadBalancerIP,omitempty"`
	LoadBalancerSourceRanges      *[]string                                `json:"loadBalancerSourceRanges,omitempty"`
	ExternalName                  *string                                  `json:"externalName,omitempty"`
	ExternalTrafficPolicy         *corev1.ServiceExternalTrafficPolicyType `json:"externalTrafficPolicy,omitempty"`
	HealthCheckNodePort           *int32                                   `json:"healthCheckNodePort,omitempty"`
	PublishNotReadyAddresses      *bool                                    `json:"publishNotReadyAddresses,omitempty"`
	SessionAffinityConfig         *SessionAffinityConfigApplyConfiguration `json:"sessionAffinityConfig,omitempty"`
	TopologyKeys                  *[]string                                `json:"topologyKeys,omitempty"`
	IPFamilies                    *[]corev1.IPFamily                       `json:"ipFamilies,omitempty"`
	IPFamilyPolicy                *corev1.IPFamilyPolicyType               `json:"ipFamilyPolicy,omitempty"`
	AllocateLoadBalancerNodePorts *bool                                    `json:"allocateLoadBalancerNodePorts,omitempty"`
}

// ServiceSpecApplyConfiguration constructs an declarative configuration of the ServiceSpec type for use with
// apply.
func ServiceSpec() *ServiceSpecApplyConfiguration {
	return &ServiceSpecApplyConfiguration{}
}

// SetPorts sets the Ports field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetPorts(value []ServicePortApplyConfiguration) *ServiceSpecApplyConfiguration {
	b.Ports = &value
	return b
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetSelector(value map[string]string) *ServiceSpecApplyConfiguration {
	b.Selector = &value
	return b
}

// SetClusterIP sets the ClusterIP field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetClusterIP(value string) *ServiceSpecApplyConfiguration {
	b.ClusterIP = &value
	return b
}

// SetClusterIPs sets the ClusterIPs field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetClusterIPs(value []string) *ServiceSpecApplyConfiguration {
	b.ClusterIPs = &value
	return b
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetType(value corev1.ServiceType) *ServiceSpecApplyConfiguration {
	b.Type = &value
	return b
}

// SetExternalIPs sets the ExternalIPs field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetExternalIPs(value []string) *ServiceSpecApplyConfiguration {
	b.ExternalIPs = &value
	return b
}

// SetSessionAffinity sets the SessionAffinity field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetSessionAffinity(value corev1.ServiceAffinity) *ServiceSpecApplyConfiguration {
	b.SessionAffinity = &value
	return b
}

// SetLoadBalancerIP sets the LoadBalancerIP field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetLoadBalancerIP(value string) *ServiceSpecApplyConfiguration {
	b.LoadBalancerIP = &value
	return b
}

// SetLoadBalancerSourceRanges sets the LoadBalancerSourceRanges field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetLoadBalancerSourceRanges(value []string) *ServiceSpecApplyConfiguration {
	b.LoadBalancerSourceRanges = &value
	return b
}

// SetExternalName sets the ExternalName field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetExternalName(value string) *ServiceSpecApplyConfiguration {
	b.ExternalName = &value
	return b
}

// SetExternalTrafficPolicy sets the ExternalTrafficPolicy field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetExternalTrafficPolicy(value corev1.ServiceExternalTrafficPolicyType) *ServiceSpecApplyConfiguration {
	b.ExternalTrafficPolicy = &value
	return b
}

// SetHealthCheckNodePort sets the HealthCheckNodePort field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetHealthCheckNodePort(value int32) *ServiceSpecApplyConfiguration {
	b.HealthCheckNodePort = &value
	return b
}

// SetPublishNotReadyAddresses sets the PublishNotReadyAddresses field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetPublishNotReadyAddresses(value bool) *ServiceSpecApplyConfiguration {
	b.PublishNotReadyAddresses = &value
	return b
}

// SetSessionAffinityConfig sets the SessionAffinityConfig field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetSessionAffinityConfig(value *SessionAffinityConfigApplyConfiguration) *ServiceSpecApplyConfiguration {
	b.SessionAffinityConfig = value
	return b
}

// SetTopologyKeys sets the TopologyKeys field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetTopologyKeys(value []string) *ServiceSpecApplyConfiguration {
	b.TopologyKeys = &value
	return b
}

// SetIPFamilies sets the IPFamilies field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetIPFamilies(value []corev1.IPFamily) *ServiceSpecApplyConfiguration {
	b.IPFamilies = &value
	return b
}

// SetIPFamilyPolicy sets the IPFamilyPolicy field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetIPFamilyPolicy(value corev1.IPFamilyPolicyType) *ServiceSpecApplyConfiguration {
	b.IPFamilyPolicy = &value
	return b
}

// SetAllocateLoadBalancerNodePorts sets the AllocateLoadBalancerNodePorts field in the declarative configuration to the given value.
func (b *ServiceSpecApplyConfiguration) SetAllocateLoadBalancerNodePorts(value bool) *ServiceSpecApplyConfiguration {
	b.AllocateLoadBalancerNodePorts = &value
	return b
}

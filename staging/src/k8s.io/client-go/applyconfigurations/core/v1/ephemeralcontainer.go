/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// EphemeralContainerApplyConfiguration represents an declarative configuration of the EphemeralContainer type for use
// with apply.
type EphemeralContainerApplyConfiguration struct {
	EphemeralContainerCommonApplyConfiguration `json:",inline"`
	TargetContainerName                        *string `json:"targetContainerName,omitempty"`
}

// EphemeralContainerApplyConfiguration constructs an declarative configuration of the EphemeralContainer type for use with
// apply.
func EphemeralContainer() *EphemeralContainerApplyConfiguration {
	return &EphemeralContainerApplyConfiguration{}
}

// SetEphemeralContainerCommon sets the EphemeralContainerCommon field in the declarative configuration to the given value.
func (b *EphemeralContainerApplyConfiguration) SetEphemeralContainerCommon(value *EphemeralContainerCommonApplyConfiguration) *EphemeralContainerApplyConfiguration {
	if value != nil {
		b.EphemeralContainerCommonApplyConfiguration = *value
	}
	return b
}

// GetEphemeralContainerCommon gets the EphemeralContainerCommon field from the declarative configuration.
func (b *EphemeralContainerApplyConfiguration) GetEphemeralContainerCommon() (value *EphemeralContainerCommonApplyConfiguration, ok bool) {
	return &b.EphemeralContainerCommonApplyConfiguration, true
}

// SetTargetContainerName sets the TargetContainerName field in the declarative configuration to the given value.
func (b *EphemeralContainerApplyConfiguration) SetTargetContainerName(value string) *EphemeralContainerApplyConfiguration {
	b.TargetContainerName = &value
	return b
}

// RemoveTargetContainerName removes the TargetContainerName field from the declarative configuration.
func (b *EphemeralContainerApplyConfiguration) RemoveTargetContainerName() *EphemeralContainerApplyConfiguration {
	b.TargetContainerName = nil
	return b
}

// GetTargetContainerName gets the TargetContainerName field from the declarative configuration.
func (b *EphemeralContainerApplyConfiguration) GetTargetContainerName() (value string, ok bool) {
	if v := b.TargetContainerName; v != nil {
		return *v, true
	}
	return value, false
}

// EphemeralContainerList represents a listAlias of EphemeralContainerApplyConfiguration.
type EphemeralContainerList []*EphemeralContainerApplyConfiguration

// EphemeralContainerList represents a map of EphemeralContainerApplyConfiguration.
type EphemeralContainerMap map[string]EphemeralContainerApplyConfiguration

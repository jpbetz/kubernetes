/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// SecretVolumeSourceApplyConfiguration represents an declarative configuration of the SecretVolumeSource type for use
// with apply.
type SecretVolumeSourceApplyConfiguration struct {
	SecretName  *string        `json:"secretName,omitempty"`
	Items       *KeyToPathList `json:"items,omitempty"`
	DefaultMode *int32         `json:"defaultMode,omitempty"`
	Optional    *bool          `json:"optional,omitempty"`
}

// SecretVolumeSourceApplyConfiguration constructs an declarative configuration of the SecretVolumeSource type for use with
// apply.
func SecretVolumeSource() *SecretVolumeSourceApplyConfiguration {
	return &SecretVolumeSourceApplyConfiguration{}
}

// SetSecretName sets the SecretName field in the declarative configuration to the given value.
func (b *SecretVolumeSourceApplyConfiguration) SetSecretName(value string) *SecretVolumeSourceApplyConfiguration {
	b.SecretName = &value
	return b
}

// RemoveSecretName removes the SecretName field from the declarative configuration.
func (b *SecretVolumeSourceApplyConfiguration) RemoveSecretName() *SecretVolumeSourceApplyConfiguration {
	b.SecretName = nil
	return b
}

// GetSecretName gets the SecretName field from the declarative configuration.
func (b *SecretVolumeSourceApplyConfiguration) GetSecretName() (value string, ok bool) {
	if v := b.SecretName; v != nil {
		return *v, true
	}
	return value, false
}

// SetItems sets the Items field in the declarative configuration to the given value.
func (b *SecretVolumeSourceApplyConfiguration) SetItems(value KeyToPathList) *SecretVolumeSourceApplyConfiguration {
	b.Items = &value
	return b
}

// RemoveItems removes the Items field from the declarative configuration.
func (b *SecretVolumeSourceApplyConfiguration) RemoveItems() *SecretVolumeSourceApplyConfiguration {
	b.Items = nil
	return b
}

// GetItems gets the Items field from the declarative configuration.
func (b *SecretVolumeSourceApplyConfiguration) GetItems() (value KeyToPathList, ok bool) {
	if v := b.Items; v != nil {
		return *v, true
	}
	return value, false
}

// SetDefaultMode sets the DefaultMode field in the declarative configuration to the given value.
func (b *SecretVolumeSourceApplyConfiguration) SetDefaultMode(value int32) *SecretVolumeSourceApplyConfiguration {
	b.DefaultMode = &value
	return b
}

// RemoveDefaultMode removes the DefaultMode field from the declarative configuration.
func (b *SecretVolumeSourceApplyConfiguration) RemoveDefaultMode() *SecretVolumeSourceApplyConfiguration {
	b.DefaultMode = nil
	return b
}

// GetDefaultMode gets the DefaultMode field from the declarative configuration.
func (b *SecretVolumeSourceApplyConfiguration) GetDefaultMode() (value int32, ok bool) {
	if v := b.DefaultMode; v != nil {
		return *v, true
	}
	return value, false
}

// SetOptional sets the Optional field in the declarative configuration to the given value.
func (b *SecretVolumeSourceApplyConfiguration) SetOptional(value bool) *SecretVolumeSourceApplyConfiguration {
	b.Optional = &value
	return b
}

// RemoveOptional removes the Optional field from the declarative configuration.
func (b *SecretVolumeSourceApplyConfiguration) RemoveOptional() *SecretVolumeSourceApplyConfiguration {
	b.Optional = nil
	return b
}

// GetOptional gets the Optional field from the declarative configuration.
func (b *SecretVolumeSourceApplyConfiguration) GetOptional() (value bool, ok bool) {
	if v := b.Optional; v != nil {
		return *v, true
	}
	return value, false
}

// SecretVolumeSourceList represents a listAlias of SecretVolumeSourceApplyConfiguration.
type SecretVolumeSourceList []*SecretVolumeSourceApplyConfiguration

// SecretVolumeSourceList represents a map of SecretVolumeSourceApplyConfiguration.
type SecretVolumeSourceMap map[string]SecretVolumeSourceApplyConfiguration

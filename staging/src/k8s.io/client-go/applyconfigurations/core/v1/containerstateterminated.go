/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ContainerStateTerminatedApplyConfiguration represents an declarative configuration of the ContainerStateTerminated type for use
// with apply.
type ContainerStateTerminatedApplyConfiguration struct {
	ExitCode    *int32   `json:"exitCode,omitempty"`
	Signal      *int32   `json:"signal,omitempty"`
	Reason      *string  `json:"reason,omitempty"`
	Message     *string  `json:"message,omitempty"`
	StartedAt   *v1.Time `json:"startedAt,omitempty"`
	FinishedAt  *v1.Time `json:"finishedAt,omitempty"`
	ContainerID *string  `json:"containerID,omitempty"`
}

// ContainerStateTerminatedApplyConfiguration constructs an declarative configuration of the ContainerStateTerminated type for use with
// apply.
func ContainerStateTerminated() *ContainerStateTerminatedApplyConfiguration {
	return &ContainerStateTerminatedApplyConfiguration{}
}

// SetExitCode sets the ExitCode field in the declarative configuration to the given value.
func (b *ContainerStateTerminatedApplyConfiguration) SetExitCode(value int32) *ContainerStateTerminatedApplyConfiguration {
	b.ExitCode = &value
	return b
}

// RemoveExitCode removes the ExitCode field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) RemoveExitCode() *ContainerStateTerminatedApplyConfiguration {
	b.ExitCode = nil
	return b
}

// GetExitCode gets the ExitCode field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) GetExitCode() (value int32, ok bool) {
	if v := b.ExitCode; v != nil {
		return *v, true
	}
	return value, false
}

// SetSignal sets the Signal field in the declarative configuration to the given value.
func (b *ContainerStateTerminatedApplyConfiguration) SetSignal(value int32) *ContainerStateTerminatedApplyConfiguration {
	b.Signal = &value
	return b
}

// RemoveSignal removes the Signal field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) RemoveSignal() *ContainerStateTerminatedApplyConfiguration {
	b.Signal = nil
	return b
}

// GetSignal gets the Signal field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) GetSignal() (value int32, ok bool) {
	if v := b.Signal; v != nil {
		return *v, true
	}
	return value, false
}

// SetReason sets the Reason field in the declarative configuration to the given value.
func (b *ContainerStateTerminatedApplyConfiguration) SetReason(value string) *ContainerStateTerminatedApplyConfiguration {
	b.Reason = &value
	return b
}

// RemoveReason removes the Reason field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) RemoveReason() *ContainerStateTerminatedApplyConfiguration {
	b.Reason = nil
	return b
}

// GetReason gets the Reason field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) GetReason() (value string, ok bool) {
	if v := b.Reason; v != nil {
		return *v, true
	}
	return value, false
}

// SetMessage sets the Message field in the declarative configuration to the given value.
func (b *ContainerStateTerminatedApplyConfiguration) SetMessage(value string) *ContainerStateTerminatedApplyConfiguration {
	b.Message = &value
	return b
}

// RemoveMessage removes the Message field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) RemoveMessage() *ContainerStateTerminatedApplyConfiguration {
	b.Message = nil
	return b
}

// GetMessage gets the Message field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) GetMessage() (value string, ok bool) {
	if v := b.Message; v != nil {
		return *v, true
	}
	return value, false
}

// SetStartedAt sets the StartedAt field in the declarative configuration to the given value.
func (b *ContainerStateTerminatedApplyConfiguration) SetStartedAt(value v1.Time) *ContainerStateTerminatedApplyConfiguration {
	b.StartedAt = &value
	return b
}

// RemoveStartedAt removes the StartedAt field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) RemoveStartedAt() *ContainerStateTerminatedApplyConfiguration {
	b.StartedAt = nil
	return b
}

// GetStartedAt gets the StartedAt field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) GetStartedAt() (value v1.Time, ok bool) {
	if v := b.StartedAt; v != nil {
		return *v, true
	}
	return value, false
}

// SetFinishedAt sets the FinishedAt field in the declarative configuration to the given value.
func (b *ContainerStateTerminatedApplyConfiguration) SetFinishedAt(value v1.Time) *ContainerStateTerminatedApplyConfiguration {
	b.FinishedAt = &value
	return b
}

// RemoveFinishedAt removes the FinishedAt field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) RemoveFinishedAt() *ContainerStateTerminatedApplyConfiguration {
	b.FinishedAt = nil
	return b
}

// GetFinishedAt gets the FinishedAt field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) GetFinishedAt() (value v1.Time, ok bool) {
	if v := b.FinishedAt; v != nil {
		return *v, true
	}
	return value, false
}

// SetContainerID sets the ContainerID field in the declarative configuration to the given value.
func (b *ContainerStateTerminatedApplyConfiguration) SetContainerID(value string) *ContainerStateTerminatedApplyConfiguration {
	b.ContainerID = &value
	return b
}

// RemoveContainerID removes the ContainerID field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) RemoveContainerID() *ContainerStateTerminatedApplyConfiguration {
	b.ContainerID = nil
	return b
}

// GetContainerID gets the ContainerID field from the declarative configuration.
func (b *ContainerStateTerminatedApplyConfiguration) GetContainerID() (value string, ok bool) {
	if v := b.ContainerID; v != nil {
		return *v, true
	}
	return value, false
}

// ContainerStateTerminatedList represents a listAlias of ContainerStateTerminatedApplyConfiguration.
type ContainerStateTerminatedList []*ContainerStateTerminatedApplyConfiguration

// ContainerStateTerminatedList represents a map of ContainerStateTerminatedApplyConfiguration.
type ContainerStateTerminatedMap map[string]ContainerStateTerminatedApplyConfiguration

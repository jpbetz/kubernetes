/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ContainerStateWaitingApplyConfiguration represents an declarative configuration of the ContainerStateWaiting type for use
// with apply.
type ContainerStateWaitingApplyConfiguration struct {
	Reason  *string `json:"reason,omitempty"`
	Message *string `json:"message,omitempty"`
}

// ContainerStateWaitingApplyConfiguration constructs an declarative configuration of the ContainerStateWaiting type for use with
// apply.
func ContainerStateWaiting() *ContainerStateWaitingApplyConfiguration {
	return &ContainerStateWaitingApplyConfiguration{}
}

// SetReason sets the Reason field in the declarative configuration to the given value.
func (b *ContainerStateWaitingApplyConfiguration) SetReason(value string) *ContainerStateWaitingApplyConfiguration {
	b.Reason = &value
	return b
}

// RemoveReason removes the Reason field from the declarative configuration.
func (b *ContainerStateWaitingApplyConfiguration) RemoveReason() *ContainerStateWaitingApplyConfiguration {
	b.Reason = nil
	return b
}

// GetReason gets the Reason field from the declarative configuration.
func (b *ContainerStateWaitingApplyConfiguration) GetReason() (value string, ok bool) {
	if v := b.Reason; v != nil {
		return *v, true
	}
	return value, false
}

// SetMessage sets the Message field in the declarative configuration to the given value.
func (b *ContainerStateWaitingApplyConfiguration) SetMessage(value string) *ContainerStateWaitingApplyConfiguration {
	b.Message = &value
	return b
}

// RemoveMessage removes the Message field from the declarative configuration.
func (b *ContainerStateWaitingApplyConfiguration) RemoveMessage() *ContainerStateWaitingApplyConfiguration {
	b.Message = nil
	return b
}

// GetMessage gets the Message field from the declarative configuration.
func (b *ContainerStateWaitingApplyConfiguration) GetMessage() (value string, ok bool) {
	if v := b.Message; v != nil {
		return *v, true
	}
	return value, false
}

// ContainerStateWaitingList represents a listAlias of ContainerStateWaitingApplyConfiguration.
type ContainerStateWaitingList []*ContainerStateWaitingApplyConfiguration

// ContainerStateWaitingList represents a map of ContainerStateWaitingApplyConfiguration.
type ContainerStateWaitingMap map[string]ContainerStateWaitingApplyConfiguration

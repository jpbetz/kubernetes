/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// NamespaceSpecApplyConfiguration represents an declarative configuration of the NamespaceSpec type for use
// with apply.
type NamespaceSpecApplyConfiguration struct {
	Finalizers *[]v1.FinalizerName `json:"finalizers,omitempty"`
}

// NamespaceSpecApplyConfiguration constructs an declarative configuration of the NamespaceSpec type for use with
// apply.
func NamespaceSpec() *NamespaceSpecApplyConfiguration {
	return &NamespaceSpecApplyConfiguration{}
}

// SetFinalizers sets the Finalizers field in the declarative configuration to the given value.
func (b *NamespaceSpecApplyConfiguration) SetFinalizers(value []v1.FinalizerName) *NamespaceSpecApplyConfiguration {
	b.Finalizers = &value
	return b
}

// RemoveFinalizers removes the Finalizers field from the declarative configuration.
func (b *NamespaceSpecApplyConfiguration) RemoveFinalizers() *NamespaceSpecApplyConfiguration {
	b.Finalizers = nil
	return b
}

// GetFinalizers gets the Finalizers field from the declarative configuration.
func (b *NamespaceSpecApplyConfiguration) GetFinalizers() (value []v1.FinalizerName, ok bool) {
	if v := b.Finalizers; v != nil {
		return *v, true
	}
	return value, false
}

// NamespaceSpecList represents a listAlias of NamespaceSpecApplyConfiguration.
type NamespaceSpecList []*NamespaceSpecApplyConfiguration

// NamespaceSpecList represents a map of NamespaceSpecApplyConfiguration.
type NamespaceSpecMap map[string]NamespaceSpecApplyConfiguration

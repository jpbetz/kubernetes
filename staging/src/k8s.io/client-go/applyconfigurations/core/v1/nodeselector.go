/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// NodeSelectorApplyConfiguration represents an declarative configuration of the NodeSelector type for use
// with apply.
type NodeSelectorApplyConfiguration struct {
	NodeSelectorTerms *NodeSelectorTermList `json:"nodeSelectorTerms,omitempty"`
}

// NodeSelectorApplyConfiguration constructs an declarative configuration of the NodeSelector type for use with
// apply.
func NodeSelector() *NodeSelectorApplyConfiguration {
	return &NodeSelectorApplyConfiguration{}
}

// SetNodeSelectorTerms sets the NodeSelectorTerms field in the declarative configuration to the given value.
func (b *NodeSelectorApplyConfiguration) SetNodeSelectorTerms(value NodeSelectorTermList) *NodeSelectorApplyConfiguration {
	b.NodeSelectorTerms = &value
	return b
}

// RemoveNodeSelectorTerms removes the NodeSelectorTerms field from the declarative configuration.
func (b *NodeSelectorApplyConfiguration) RemoveNodeSelectorTerms() *NodeSelectorApplyConfiguration {
	b.NodeSelectorTerms = nil
	return b
}

// GetNodeSelectorTerms gets the NodeSelectorTerms field from the declarative configuration.
func (b *NodeSelectorApplyConfiguration) GetNodeSelectorTerms() (value NodeSelectorTermList, ok bool) {
	if v := b.NodeSelectorTerms; v != nil {
		return *v, true
	}
	return value, false
}

// NodeSelectorList represents a listAlias of NodeSelectorApplyConfiguration.
type NodeSelectorList []*NodeSelectorApplyConfiguration

// NodeSelectorList represents a map of NodeSelectorApplyConfiguration.
type NodeSelectorMap map[string]NodeSelectorApplyConfiguration

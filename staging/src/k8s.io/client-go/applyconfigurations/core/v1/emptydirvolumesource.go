/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	v1 "k8s.io/api/core/v1"
	resource "k8s.io/apimachinery/pkg/api/resource"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// EmptyDirVolumeSourceApplyConfiguration represents an declarative configuration of the EmptyDirVolumeSource type for use
// with apply.
type EmptyDirVolumeSourceApplyConfiguration struct {
	fields emptyDirVolumeSourceFields
}

// EmptyDirVolumeSourceApplyConfiguration constructs an declarative configuration of the EmptyDirVolumeSource type for use with
// apply.
func EmptyDirVolumeSource() *EmptyDirVolumeSourceApplyConfiguration {
	return &EmptyDirVolumeSourceApplyConfiguration{}
}

// emptyDirVolumeSourceFields owns all fields except inlined fields.
// Inline fields are owned by their respective inline type in EmptyDirVolumeSourceApplyConfiguration.
// They are copied to this type before marshalling, and are copied out
// after unmarshalling. The inlined types cannot be embedded because they do
// not expose their fields directly.
type emptyDirVolumeSourceFields struct {
	Medium    *v1.StorageMedium  `json:"medium,omitempty"`
	SizeLimit *resource.Quantity `json:"sizeLimit,omitempty"`
}

// SetMedium sets the Medium field in the declarative configuration to the given value.
func (b *EmptyDirVolumeSourceApplyConfiguration) SetMedium(value v1.StorageMedium) *EmptyDirVolumeSourceApplyConfiguration {
	b.fields.Medium = &value
	return b
}

// RemoveMedium removes the Medium field from the declarative configuration.
func (b *EmptyDirVolumeSourceApplyConfiguration) RemoveMedium() *EmptyDirVolumeSourceApplyConfiguration {
	b.fields.Medium = nil
	return b
}

// GetMedium gets the Medium field from the declarative configuration.
func (b *EmptyDirVolumeSourceApplyConfiguration) GetMedium() (value v1.StorageMedium, ok bool) {
	if v := b.fields.Medium; v != nil {
		return *v, true
	}
	return value, false
}

// SetSizeLimit sets the SizeLimit field in the declarative configuration to the given value.
func (b *EmptyDirVolumeSourceApplyConfiguration) SetSizeLimit(value resource.Quantity) *EmptyDirVolumeSourceApplyConfiguration {
	b.fields.SizeLimit = &value
	return b
}

// RemoveSizeLimit removes the SizeLimit field from the declarative configuration.
func (b *EmptyDirVolumeSourceApplyConfiguration) RemoveSizeLimit() *EmptyDirVolumeSourceApplyConfiguration {
	b.fields.SizeLimit = nil
	return b
}

// GetSizeLimit gets the SizeLimit field from the declarative configuration.
func (b *EmptyDirVolumeSourceApplyConfiguration) GetSizeLimit() (value resource.Quantity, ok bool) {
	if v := b.fields.SizeLimit; v != nil {
		return *v, true
	}
	return value, false
}

// ToUnstructured converts EmptyDirVolumeSourceApplyConfiguration to unstructured.
func (b *EmptyDirVolumeSourceApplyConfiguration) ToUnstructured() interface{} {
	if b == nil {
		return nil
	}
	b.preMarshal()
	u, err := runtime.DefaultUnstructuredConverter.ToUnstructured(&b.fields)
	if err != nil {
		panic(err)
	}
	return u
}

// FromUnstructured converts unstructured to EmptyDirVolumeSourceApplyConfiguration, replacing the contents
// of EmptyDirVolumeSourceApplyConfiguration.
func (b *EmptyDirVolumeSourceApplyConfiguration) FromUnstructured(u map[string]interface{}) error {
	m := &emptyDirVolumeSourceFields{}
	err := runtime.DefaultUnstructuredConverter.FromUnstructured(u, m)
	if err != nil {
		return err
	}
	b.fields = *m
	b.postUnmarshal()
	return nil
}

// MarshalJSON marshals EmptyDirVolumeSourceApplyConfiguration to JSON.
func (b *EmptyDirVolumeSourceApplyConfiguration) MarshalJSON() ([]byte, error) {
	b.preMarshal()
	return json.Marshal(b.fields)
}

// UnmarshalJSON unmarshals JSON into EmptyDirVolumeSourceApplyConfiguration, replacing the contents of
// EmptyDirVolumeSourceApplyConfiguration.
func (b *EmptyDirVolumeSourceApplyConfiguration) UnmarshalJSON(data []byte) error {
	if err := json.Unmarshal(data, &b.fields); err != nil {
		return err
	}
	b.postUnmarshal()
	return nil
}

// EmptyDirVolumeSourceList represents a listAlias of EmptyDirVolumeSourceApplyConfiguration.
type EmptyDirVolumeSourceList []*EmptyDirVolumeSourceApplyConfiguration

// EmptyDirVolumeSourceList represents a map of EmptyDirVolumeSourceApplyConfiguration.
type EmptyDirVolumeSourceMap map[string]EmptyDirVolumeSourceApplyConfiguration

func (b *EmptyDirVolumeSourceApplyConfiguration) preMarshal() {
}
func (b *EmptyDirVolumeSourceApplyConfiguration) postUnmarshal() {
}

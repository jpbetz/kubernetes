/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PhotonPersistentDiskVolumeSourceApplyConfiguration represents an declarative configuration of the PhotonPersistentDiskVolumeSource type for use
// with apply.
type PhotonPersistentDiskVolumeSourceApplyConfiguration struct {
	PdID   *string `json:"pdID,omitempty"`
	FSType *string `json:"fsType,omitempty"`
}

// PhotonPersistentDiskVolumeSourceApplyConfiguration constructs an declarative configuration of the PhotonPersistentDiskVolumeSource type for use with
// apply.
func PhotonPersistentDiskVolumeSource() *PhotonPersistentDiskVolumeSourceApplyConfiguration {
	return &PhotonPersistentDiskVolumeSourceApplyConfiguration{}
}

// SetPdID sets the PdID field in the declarative configuration to the given value.
func (b *PhotonPersistentDiskVolumeSourceApplyConfiguration) SetPdID(value string) *PhotonPersistentDiskVolumeSourceApplyConfiguration {
	b.PdID = &value
	return b
}

// RemovePdID removes the PdID field from the declarative configuration.
func (b *PhotonPersistentDiskVolumeSourceApplyConfiguration) RemovePdID() *PhotonPersistentDiskVolumeSourceApplyConfiguration {
	b.PdID = nil
	return b
}

// GetPdID gets the PdID field from the declarative configuration.
func (b *PhotonPersistentDiskVolumeSourceApplyConfiguration) GetPdID() (value string, ok bool) {
	if v := b.PdID; v != nil {
		return *v, true
	}
	return value, false
}

// SetFSType sets the FSType field in the declarative configuration to the given value.
func (b *PhotonPersistentDiskVolumeSourceApplyConfiguration) SetFSType(value string) *PhotonPersistentDiskVolumeSourceApplyConfiguration {
	b.FSType = &value
	return b
}

// RemoveFSType removes the FSType field from the declarative configuration.
func (b *PhotonPersistentDiskVolumeSourceApplyConfiguration) RemoveFSType() *PhotonPersistentDiskVolumeSourceApplyConfiguration {
	b.FSType = nil
	return b
}

// GetFSType gets the FSType field from the declarative configuration.
func (b *PhotonPersistentDiskVolumeSourceApplyConfiguration) GetFSType() (value string, ok bool) {
	if v := b.FSType; v != nil {
		return *v, true
	}
	return value, false
}

// PhotonPersistentDiskVolumeSourceList represents a listAlias of PhotonPersistentDiskVolumeSourceApplyConfiguration.
type PhotonPersistentDiskVolumeSourceList []*PhotonPersistentDiskVolumeSourceApplyConfiguration

// PhotonPersistentDiskVolumeSourceList represents a map of PhotonPersistentDiskVolumeSourceApplyConfiguration.
type PhotonPersistentDiskVolumeSourceMap map[string]PhotonPersistentDiskVolumeSourceApplyConfiguration

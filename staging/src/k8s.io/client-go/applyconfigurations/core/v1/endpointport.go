/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// EndpointPortApplyConfiguration represents an declarative configuration of the EndpointPort type for use
// with apply.
type EndpointPortApplyConfiguration struct {
	Name        *string      `json:"name,omitempty"`
	Port        *int32       `json:"port,omitempty"`
	Protocol    *v1.Protocol `json:"protocol,omitempty"`
	AppProtocol *string      `json:"appProtocol,omitempty"`
}

// EndpointPortApplyConfiguration constructs an declarative configuration of the EndpointPort type for use with
// apply.
func EndpointPort() *EndpointPortApplyConfiguration {
	return &EndpointPortApplyConfiguration{}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b *EndpointPortApplyConfiguration) SetName(value string) *EndpointPortApplyConfiguration {
	b.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b *EndpointPortApplyConfiguration) RemoveName() *EndpointPortApplyConfiguration {
	b.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b *EndpointPortApplyConfiguration) GetName() (value string, ok bool) {
	if v := b.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetPort sets the Port field in the declarative configuration to the given value.
func (b *EndpointPortApplyConfiguration) SetPort(value int32) *EndpointPortApplyConfiguration {
	b.Port = &value
	return b
}

// RemovePort removes the Port field from the declarative configuration.
func (b *EndpointPortApplyConfiguration) RemovePort() *EndpointPortApplyConfiguration {
	b.Port = nil
	return b
}

// GetPort gets the Port field from the declarative configuration.
func (b *EndpointPortApplyConfiguration) GetPort() (value int32, ok bool) {
	if v := b.Port; v != nil {
		return *v, true
	}
	return value, false
}

// SetProtocol sets the Protocol field in the declarative configuration to the given value.
func (b *EndpointPortApplyConfiguration) SetProtocol(value v1.Protocol) *EndpointPortApplyConfiguration {
	b.Protocol = &value
	return b
}

// RemoveProtocol removes the Protocol field from the declarative configuration.
func (b *EndpointPortApplyConfiguration) RemoveProtocol() *EndpointPortApplyConfiguration {
	b.Protocol = nil
	return b
}

// GetProtocol gets the Protocol field from the declarative configuration.
func (b *EndpointPortApplyConfiguration) GetProtocol() (value v1.Protocol, ok bool) {
	if v := b.Protocol; v != nil {
		return *v, true
	}
	return value, false
}

// SetAppProtocol sets the AppProtocol field in the declarative configuration to the given value.
func (b *EndpointPortApplyConfiguration) SetAppProtocol(value string) *EndpointPortApplyConfiguration {
	b.AppProtocol = &value
	return b
}

// RemoveAppProtocol removes the AppProtocol field from the declarative configuration.
func (b *EndpointPortApplyConfiguration) RemoveAppProtocol() *EndpointPortApplyConfiguration {
	b.AppProtocol = nil
	return b
}

// GetAppProtocol gets the AppProtocol field from the declarative configuration.
func (b *EndpointPortApplyConfiguration) GetAppProtocol() (value string, ok bool) {
	if v := b.AppProtocol; v != nil {
		return *v, true
	}
	return value, false
}

// EndpointPortList represents a listAlias of EndpointPortApplyConfiguration.
type EndpointPortList []*EndpointPortApplyConfiguration

// EndpointPortList represents a map of EndpointPortApplyConfiguration.
type EndpointPortMap map[string]EndpointPortApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use
// with apply.
type KeyToPathApplyConfiguration struct {
	Key  *string `json:"key,omitempty"`
	Path *string `json:"path,omitempty"`
	Mode *int32  `json:"mode,omitempty"`
}

// KeyToPathApplyConfiguration constructs an declarative configuration of the KeyToPath type for use with
// apply.
func KeyToPath() *KeyToPathApplyConfiguration {
	return &KeyToPathApplyConfiguration{}
}

// SetKey sets the Key field in the declarative configuration to the given value.
func (b *KeyToPathApplyConfiguration) SetKey(value string) *KeyToPathApplyConfiguration {
	b.Key = &value
	return b
}

// SetPath sets the Path field in the declarative configuration to the given value.
func (b *KeyToPathApplyConfiguration) SetPath(value string) *KeyToPathApplyConfiguration {
	b.Path = &value
	return b
}

// SetMode sets the Mode field in the declarative configuration to the given value.
func (b *KeyToPathApplyConfiguration) SetMode(value int32) *KeyToPathApplyConfiguration {
	b.Mode = &value
	return b
}

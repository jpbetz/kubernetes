/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PodDNSConfigApplyConfiguration represents an declarative configuration of the PodDNSConfig type for use
// with apply.
type PodDNSConfigApplyConfiguration struct {
	Nameservers *[]string               `json:"nameservers,omitempty"`
	Searches    *[]string               `json:"searches,omitempty"`
	Options     *PodDNSConfigOptionList `json:"options,omitempty"`
}

// PodDNSConfigApplyConfiguration constructs an declarative configuration of the PodDNSConfig type for use with
// apply.
func PodDNSConfig() *PodDNSConfigApplyConfiguration {
	return &PodDNSConfigApplyConfiguration{}
}

// SetNameservers sets the Nameservers field in the declarative configuration to the given value.
func (b *PodDNSConfigApplyConfiguration) SetNameservers(value []string) *PodDNSConfigApplyConfiguration {
	b.Nameservers = &value
	return b
}

// RemoveNameservers removes the Nameservers field from the declarative configuration.
func (b *PodDNSConfigApplyConfiguration) RemoveNameservers() *PodDNSConfigApplyConfiguration {
	b.Nameservers = nil
	return b
}

// GetNameservers gets the Nameservers field from the declarative configuration.
func (b *PodDNSConfigApplyConfiguration) GetNameservers() (value []string, ok bool) {
	if v := b.Nameservers; v != nil {
		return *v, true
	}
	return value, false
}

// SetSearches sets the Searches field in the declarative configuration to the given value.
func (b *PodDNSConfigApplyConfiguration) SetSearches(value []string) *PodDNSConfigApplyConfiguration {
	b.Searches = &value
	return b
}

// RemoveSearches removes the Searches field from the declarative configuration.
func (b *PodDNSConfigApplyConfiguration) RemoveSearches() *PodDNSConfigApplyConfiguration {
	b.Searches = nil
	return b
}

// GetSearches gets the Searches field from the declarative configuration.
func (b *PodDNSConfigApplyConfiguration) GetSearches() (value []string, ok bool) {
	if v := b.Searches; v != nil {
		return *v, true
	}
	return value, false
}

// SetOptions sets the Options field in the declarative configuration to the given value.
func (b *PodDNSConfigApplyConfiguration) SetOptions(value PodDNSConfigOptionList) *PodDNSConfigApplyConfiguration {
	b.Options = &value
	return b
}

// RemoveOptions removes the Options field from the declarative configuration.
func (b *PodDNSConfigApplyConfiguration) RemoveOptions() *PodDNSConfigApplyConfiguration {
	b.Options = nil
	return b
}

// GetOptions gets the Options field from the declarative configuration.
func (b *PodDNSConfigApplyConfiguration) GetOptions() (value PodDNSConfigOptionList, ok bool) {
	if v := b.Options; v != nil {
		return *v, true
	}
	return value, false
}

// PodDNSConfigList represents a listAlias of PodDNSConfigApplyConfiguration.
type PodDNSConfigList []*PodDNSConfigApplyConfiguration

// PodDNSConfigList represents a map of PodDNSConfigApplyConfiguration.
type PodDNSConfigMap map[string]PodDNSConfigApplyConfiguration

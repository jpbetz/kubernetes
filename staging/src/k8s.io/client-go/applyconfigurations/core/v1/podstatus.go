/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// PodStatusApplyConfiguration represents an declarative configuration of the PodStatus type for use
// with apply.
type PodStatusApplyConfiguration struct {
	Phase                      *v1.PodPhase         `json:"phase,omitempty"`
	Conditions                 *PodConditionList    `json:"conditions,omitempty"`
	Message                    *string              `json:"message,omitempty"`
	Reason                     *string              `json:"reason,omitempty"`
	NominatedNodeName          *string              `json:"nominatedNodeName,omitempty"`
	HostIP                     *string              `json:"hostIP,omitempty"`
	PodIP                      *string              `json:"podIP,omitempty"`
	PodIPs                     *PodIPList           `json:"podIPs,omitempty"`
	StartTime                  *metav1.Time         `json:"startTime,omitempty"`
	InitContainerStatuses      *ContainerStatusList `json:"initContainerStatuses,omitempty"`
	ContainerStatuses          *ContainerStatusList `json:"containerStatuses,omitempty"`
	QOSClass                   *v1.PodQOSClass      `json:"qosClass,omitempty"`
	EphemeralContainerStatuses *ContainerStatusList `json:"ephemeralContainerStatuses,omitempty"`
}

// PodStatusApplyConfiguration constructs an declarative configuration of the PodStatus type for use with
// apply.
func PodStatus() *PodStatusApplyConfiguration {
	return &PodStatusApplyConfiguration{}
}

// SetPhase sets the Phase field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetPhase(value v1.PodPhase) *PodStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// RemovePhase removes the Phase field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemovePhase() *PodStatusApplyConfiguration {
	b.Phase = nil
	return b
}

// GetPhase gets the Phase field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetPhase() (value v1.PodPhase, ok bool) {
	if v := b.Phase; v != nil {
		return *v, true
	}
	return value, false
}

// SetConditions sets the Conditions field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetConditions(value PodConditionList) *PodStatusApplyConfiguration {
	b.Conditions = &value
	return b
}

// RemoveConditions removes the Conditions field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveConditions() *PodStatusApplyConfiguration {
	b.Conditions = nil
	return b
}

// GetConditions gets the Conditions field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetConditions() (value PodConditionList, ok bool) {
	if v := b.Conditions; v != nil {
		return *v, true
	}
	return value, false
}

// SetMessage sets the Message field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetMessage(value string) *PodStatusApplyConfiguration {
	b.Message = &value
	return b
}

// RemoveMessage removes the Message field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveMessage() *PodStatusApplyConfiguration {
	b.Message = nil
	return b
}

// GetMessage gets the Message field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetMessage() (value string, ok bool) {
	if v := b.Message; v != nil {
		return *v, true
	}
	return value, false
}

// SetReason sets the Reason field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetReason(value string) *PodStatusApplyConfiguration {
	b.Reason = &value
	return b
}

// RemoveReason removes the Reason field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveReason() *PodStatusApplyConfiguration {
	b.Reason = nil
	return b
}

// GetReason gets the Reason field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetReason() (value string, ok bool) {
	if v := b.Reason; v != nil {
		return *v, true
	}
	return value, false
}

// SetNominatedNodeName sets the NominatedNodeName field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetNominatedNodeName(value string) *PodStatusApplyConfiguration {
	b.NominatedNodeName = &value
	return b
}

// RemoveNominatedNodeName removes the NominatedNodeName field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveNominatedNodeName() *PodStatusApplyConfiguration {
	b.NominatedNodeName = nil
	return b
}

// GetNominatedNodeName gets the NominatedNodeName field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetNominatedNodeName() (value string, ok bool) {
	if v := b.NominatedNodeName; v != nil {
		return *v, true
	}
	return value, false
}

// SetHostIP sets the HostIP field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetHostIP(value string) *PodStatusApplyConfiguration {
	b.HostIP = &value
	return b
}

// RemoveHostIP removes the HostIP field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveHostIP() *PodStatusApplyConfiguration {
	b.HostIP = nil
	return b
}

// GetHostIP gets the HostIP field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetHostIP() (value string, ok bool) {
	if v := b.HostIP; v != nil {
		return *v, true
	}
	return value, false
}

// SetPodIP sets the PodIP field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetPodIP(value string) *PodStatusApplyConfiguration {
	b.PodIP = &value
	return b
}

// RemovePodIP removes the PodIP field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemovePodIP() *PodStatusApplyConfiguration {
	b.PodIP = nil
	return b
}

// GetPodIP gets the PodIP field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetPodIP() (value string, ok bool) {
	if v := b.PodIP; v != nil {
		return *v, true
	}
	return value, false
}

// SetPodIPs sets the PodIPs field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetPodIPs(value PodIPList) *PodStatusApplyConfiguration {
	b.PodIPs = &value
	return b
}

// RemovePodIPs removes the PodIPs field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemovePodIPs() *PodStatusApplyConfiguration {
	b.PodIPs = nil
	return b
}

// GetPodIPs gets the PodIPs field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetPodIPs() (value PodIPList, ok bool) {
	if v := b.PodIPs; v != nil {
		return *v, true
	}
	return value, false
}

// SetStartTime sets the StartTime field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetStartTime(value metav1.Time) *PodStatusApplyConfiguration {
	b.StartTime = &value
	return b
}

// RemoveStartTime removes the StartTime field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveStartTime() *PodStatusApplyConfiguration {
	b.StartTime = nil
	return b
}

// GetStartTime gets the StartTime field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetStartTime() (value metav1.Time, ok bool) {
	if v := b.StartTime; v != nil {
		return *v, true
	}
	return value, false
}

// SetInitContainerStatuses sets the InitContainerStatuses field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetInitContainerStatuses(value ContainerStatusList) *PodStatusApplyConfiguration {
	b.InitContainerStatuses = &value
	return b
}

// RemoveInitContainerStatuses removes the InitContainerStatuses field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveInitContainerStatuses() *PodStatusApplyConfiguration {
	b.InitContainerStatuses = nil
	return b
}

// GetInitContainerStatuses gets the InitContainerStatuses field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetInitContainerStatuses() (value ContainerStatusList, ok bool) {
	if v := b.InitContainerStatuses; v != nil {
		return *v, true
	}
	return value, false
}

// SetContainerStatuses sets the ContainerStatuses field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetContainerStatuses(value ContainerStatusList) *PodStatusApplyConfiguration {
	b.ContainerStatuses = &value
	return b
}

// RemoveContainerStatuses removes the ContainerStatuses field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveContainerStatuses() *PodStatusApplyConfiguration {
	b.ContainerStatuses = nil
	return b
}

// GetContainerStatuses gets the ContainerStatuses field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetContainerStatuses() (value ContainerStatusList, ok bool) {
	if v := b.ContainerStatuses; v != nil {
		return *v, true
	}
	return value, false
}

// SetQOSClass sets the QOSClass field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetQOSClass(value v1.PodQOSClass) *PodStatusApplyConfiguration {
	b.QOSClass = &value
	return b
}

// RemoveQOSClass removes the QOSClass field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveQOSClass() *PodStatusApplyConfiguration {
	b.QOSClass = nil
	return b
}

// GetQOSClass gets the QOSClass field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetQOSClass() (value v1.PodQOSClass, ok bool) {
	if v := b.QOSClass; v != nil {
		return *v, true
	}
	return value, false
}

// SetEphemeralContainerStatuses sets the EphemeralContainerStatuses field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetEphemeralContainerStatuses(value ContainerStatusList) *PodStatusApplyConfiguration {
	b.EphemeralContainerStatuses = &value
	return b
}

// RemoveEphemeralContainerStatuses removes the EphemeralContainerStatuses field from the declarative configuration.
func (b *PodStatusApplyConfiguration) RemoveEphemeralContainerStatuses() *PodStatusApplyConfiguration {
	b.EphemeralContainerStatuses = nil
	return b
}

// GetEphemeralContainerStatuses gets the EphemeralContainerStatuses field from the declarative configuration.
func (b *PodStatusApplyConfiguration) GetEphemeralContainerStatuses() (value ContainerStatusList, ok bool) {
	if v := b.EphemeralContainerStatuses; v != nil {
		return *v, true
	}
	return value, false
}

// PodStatusList represents a listAlias of PodStatusApplyConfiguration.
type PodStatusList []*PodStatusApplyConfiguration

// PodStatusList represents a map of PodStatusApplyConfiguration.
type PodStatusMap map[string]PodStatusApplyConfiguration

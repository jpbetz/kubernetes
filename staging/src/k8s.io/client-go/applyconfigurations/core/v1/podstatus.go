/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// PodStatusApplyConfiguration represents an declarative configuration of the PodStatus type for use
// with apply.
type PodStatusApplyConfiguration struct {
	Phase                      *v1.PodPhase                         `json:"phase,omitempty"`
	Conditions                 *[]PodConditionApplyConfiguration    `json:"conditions,omitempty"`
	Message                    *string                              `json:"message,omitempty"`
	Reason                     *string                              `json:"reason,omitempty"`
	NominatedNodeName          *string                              `json:"nominatedNodeName,omitempty"`
	HostIP                     *string                              `json:"hostIP,omitempty"`
	PodIP                      *string                              `json:"podIP,omitempty"`
	PodIPs                     *[]PodIPApplyConfiguration           `json:"podIPs,omitempty"`
	StartTime                  *metav1.Time                         `json:"startTime,omitempty"`
	InitContainerStatuses      *[]ContainerStatusApplyConfiguration `json:"initContainerStatuses,omitempty"`
	ContainerStatuses          *[]ContainerStatusApplyConfiguration `json:"containerStatuses,omitempty"`
	QOSClass                   *v1.PodQOSClass                      `json:"qosClass,omitempty"`
	EphemeralContainerStatuses *[]ContainerStatusApplyConfiguration `json:"ephemeralContainerStatuses,omitempty"`
}

// PodStatusApplyConfiguration constructs an declarative configuration of the PodStatus type for use with
// apply.
func PodStatus() *PodStatusApplyConfiguration {
	return &PodStatusApplyConfiguration{}
}

// SetPhase sets the Phase field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetPhase(value v1.PodPhase) *PodStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// SetConditions sets the Conditions field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetConditions(value []PodConditionApplyConfiguration) *PodStatusApplyConfiguration {
	b.Conditions = &value
	return b
}

// SetMessage sets the Message field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetMessage(value string) *PodStatusApplyConfiguration {
	b.Message = &value
	return b
}

// SetReason sets the Reason field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetReason(value string) *PodStatusApplyConfiguration {
	b.Reason = &value
	return b
}

// SetNominatedNodeName sets the NominatedNodeName field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetNominatedNodeName(value string) *PodStatusApplyConfiguration {
	b.NominatedNodeName = &value
	return b
}

// SetHostIP sets the HostIP field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetHostIP(value string) *PodStatusApplyConfiguration {
	b.HostIP = &value
	return b
}

// SetPodIP sets the PodIP field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetPodIP(value string) *PodStatusApplyConfiguration {
	b.PodIP = &value
	return b
}

// SetPodIPs sets the PodIPs field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetPodIPs(value []PodIPApplyConfiguration) *PodStatusApplyConfiguration {
	b.PodIPs = &value
	return b
}

// SetStartTime sets the StartTime field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetStartTime(value metav1.Time) *PodStatusApplyConfiguration {
	b.StartTime = &value
	return b
}

// SetInitContainerStatuses sets the InitContainerStatuses field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetInitContainerStatuses(value []ContainerStatusApplyConfiguration) *PodStatusApplyConfiguration {
	b.InitContainerStatuses = &value
	return b
}

// SetContainerStatuses sets the ContainerStatuses field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetContainerStatuses(value []ContainerStatusApplyConfiguration) *PodStatusApplyConfiguration {
	b.ContainerStatuses = &value
	return b
}

// SetQOSClass sets the QOSClass field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetQOSClass(value v1.PodQOSClass) *PodStatusApplyConfiguration {
	b.QOSClass = &value
	return b
}

// SetEphemeralContainerStatuses sets the EphemeralContainerStatuses field in the declarative configuration to the given value.
func (b *PodStatusApplyConfiguration) SetEphemeralContainerStatuses(value []ContainerStatusApplyConfiguration) *PodStatusApplyConfiguration {
	b.EphemeralContainerStatuses = &value
	return b
}

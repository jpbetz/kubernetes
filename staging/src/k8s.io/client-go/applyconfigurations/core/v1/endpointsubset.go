/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// EndpointSubsetApplyConfiguration represents an declarative configuration of the EndpointSubset type for use
// with apply.
type EndpointSubsetApplyConfiguration struct {
	Addresses         *EndpointAddressList `json:"addresses,omitempty"`
	NotReadyAddresses *EndpointAddressList `json:"notReadyAddresses,omitempty"`
	Ports             *EndpointPortList    `json:"ports,omitempty"`
}

// EndpointSubsetApplyConfiguration constructs an declarative configuration of the EndpointSubset type for use with
// apply.
func EndpointSubset() *EndpointSubsetApplyConfiguration {
	return &EndpointSubsetApplyConfiguration{}
}

// SetAddresses sets the Addresses field in the declarative configuration to the given value.
func (b *EndpointSubsetApplyConfiguration) SetAddresses(value EndpointAddressList) *EndpointSubsetApplyConfiguration {
	b.Addresses = &value
	return b
}

// RemoveAddresses removes the Addresses field from the declarative configuration.
func (b *EndpointSubsetApplyConfiguration) RemoveAddresses() *EndpointSubsetApplyConfiguration {
	b.Addresses = nil
	return b
}

// GetAddresses gets the Addresses field from the declarative configuration.
func (b *EndpointSubsetApplyConfiguration) GetAddresses() (value EndpointAddressList, ok bool) {
	if v := b.Addresses; v != nil {
		return *v, true
	}
	return value, false
}

// SetNotReadyAddresses sets the NotReadyAddresses field in the declarative configuration to the given value.
func (b *EndpointSubsetApplyConfiguration) SetNotReadyAddresses(value EndpointAddressList) *EndpointSubsetApplyConfiguration {
	b.NotReadyAddresses = &value
	return b
}

// RemoveNotReadyAddresses removes the NotReadyAddresses field from the declarative configuration.
func (b *EndpointSubsetApplyConfiguration) RemoveNotReadyAddresses() *EndpointSubsetApplyConfiguration {
	b.NotReadyAddresses = nil
	return b
}

// GetNotReadyAddresses gets the NotReadyAddresses field from the declarative configuration.
func (b *EndpointSubsetApplyConfiguration) GetNotReadyAddresses() (value EndpointAddressList, ok bool) {
	if v := b.NotReadyAddresses; v != nil {
		return *v, true
	}
	return value, false
}

// SetPorts sets the Ports field in the declarative configuration to the given value.
func (b *EndpointSubsetApplyConfiguration) SetPorts(value EndpointPortList) *EndpointSubsetApplyConfiguration {
	b.Ports = &value
	return b
}

// RemovePorts removes the Ports field from the declarative configuration.
func (b *EndpointSubsetApplyConfiguration) RemovePorts() *EndpointSubsetApplyConfiguration {
	b.Ports = nil
	return b
}

// GetPorts gets the Ports field from the declarative configuration.
func (b *EndpointSubsetApplyConfiguration) GetPorts() (value EndpointPortList, ok bool) {
	if v := b.Ports; v != nil {
		return *v, true
	}
	return value, false
}

// EndpointSubsetList represents a listAlias of EndpointSubsetApplyConfiguration.
type EndpointSubsetList []*EndpointSubsetApplyConfiguration

// EndpointSubsetList represents a map of EndpointSubsetApplyConfiguration.
type EndpointSubsetMap map[string]EndpointSubsetApplyConfiguration

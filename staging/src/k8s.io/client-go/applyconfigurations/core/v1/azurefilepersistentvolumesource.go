/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// AzureFilePersistentVolumeSourceApplyConfiguration represents an declarative configuration of the AzureFilePersistentVolumeSource type for use
// with apply.
type AzureFilePersistentVolumeSourceApplyConfiguration struct {
	SecretName      *string `json:"secretName,omitempty"`
	ShareName       *string `json:"shareName,omitempty"`
	ReadOnly        *bool   `json:"readOnly,omitempty"`
	SecretNamespace *string `json:"secretNamespace,omitempty"`
}

// AzureFilePersistentVolumeSourceApplyConfiguration constructs an declarative configuration of the AzureFilePersistentVolumeSource type for use with
// apply.
func AzureFilePersistentVolumeSource() *AzureFilePersistentVolumeSourceApplyConfiguration {
	return &AzureFilePersistentVolumeSourceApplyConfiguration{}
}

// SetSecretName sets the SecretName field in the declarative configuration to the given value.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) SetSecretName(value string) *AzureFilePersistentVolumeSourceApplyConfiguration {
	b.SecretName = &value
	return b
}

// RemoveSecretName removes the SecretName field from the declarative configuration.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) RemoveSecretName() *AzureFilePersistentVolumeSourceApplyConfiguration {
	b.SecretName = nil
	return b
}

// GetSecretName gets the SecretName field from the declarative configuration.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) GetSecretName() (value string, ok bool) {
	if v := b.SecretName; v != nil {
		return *v, true
	}
	return value, false
}

// SetShareName sets the ShareName field in the declarative configuration to the given value.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) SetShareName(value string) *AzureFilePersistentVolumeSourceApplyConfiguration {
	b.ShareName = &value
	return b
}

// RemoveShareName removes the ShareName field from the declarative configuration.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) RemoveShareName() *AzureFilePersistentVolumeSourceApplyConfiguration {
	b.ShareName = nil
	return b
}

// GetShareName gets the ShareName field from the declarative configuration.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) GetShareName() (value string, ok bool) {
	if v := b.ShareName; v != nil {
		return *v, true
	}
	return value, false
}

// SetReadOnly sets the ReadOnly field in the declarative configuration to the given value.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) SetReadOnly(value bool) *AzureFilePersistentVolumeSourceApplyConfiguration {
	b.ReadOnly = &value
	return b
}

// RemoveReadOnly removes the ReadOnly field from the declarative configuration.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) RemoveReadOnly() *AzureFilePersistentVolumeSourceApplyConfiguration {
	b.ReadOnly = nil
	return b
}

// GetReadOnly gets the ReadOnly field from the declarative configuration.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) GetReadOnly() (value bool, ok bool) {
	if v := b.ReadOnly; v != nil {
		return *v, true
	}
	return value, false
}

// SetSecretNamespace sets the SecretNamespace field in the declarative configuration to the given value.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) SetSecretNamespace(value string) *AzureFilePersistentVolumeSourceApplyConfiguration {
	b.SecretNamespace = &value
	return b
}

// RemoveSecretNamespace removes the SecretNamespace field from the declarative configuration.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) RemoveSecretNamespace() *AzureFilePersistentVolumeSourceApplyConfiguration {
	b.SecretNamespace = nil
	return b
}

// GetSecretNamespace gets the SecretNamespace field from the declarative configuration.
func (b *AzureFilePersistentVolumeSourceApplyConfiguration) GetSecretNamespace() (value string, ok bool) {
	if v := b.SecretNamespace; v != nil {
		return *v, true
	}
	return value, false
}

// AzureFilePersistentVolumeSourceList represents a listAlias of AzureFilePersistentVolumeSourceApplyConfiguration.
type AzureFilePersistentVolumeSourceList []*AzureFilePersistentVolumeSourceApplyConfiguration

// AzureFilePersistentVolumeSourceList represents a map of AzureFilePersistentVolumeSourceApplyConfiguration.
type AzureFilePersistentVolumeSourceMap map[string]AzureFilePersistentVolumeSourceApplyConfiguration

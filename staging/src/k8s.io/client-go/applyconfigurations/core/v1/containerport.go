/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use
// with apply.
type ContainerPortApplyConfiguration struct {
	Name          *string      `json:"name,omitempty"`
	HostPort      *int32       `json:"hostPort,omitempty"`
	ContainerPort *int32       `json:"containerPort,omitempty"`
	Protocol      *v1.Protocol `json:"protocol,omitempty"`
	HostIP        *string      `json:"hostIP,omitempty"`
}

// ContainerPortApplyConfiguration constructs an declarative configuration of the ContainerPort type for use with
// apply.
func ContainerPort() *ContainerPortApplyConfiguration {
	return &ContainerPortApplyConfiguration{}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b *ContainerPortApplyConfiguration) SetName(value string) *ContainerPortApplyConfiguration {
	b.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) RemoveName() *ContainerPortApplyConfiguration {
	b.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) GetName() (value string, ok bool) {
	if v := b.Name; v != nil {
		return *v, true
	}
	return value, false
}

// SetHostPort sets the HostPort field in the declarative configuration to the given value.
func (b *ContainerPortApplyConfiguration) SetHostPort(value int32) *ContainerPortApplyConfiguration {
	b.HostPort = &value
	return b
}

// RemoveHostPort removes the HostPort field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) RemoveHostPort() *ContainerPortApplyConfiguration {
	b.HostPort = nil
	return b
}

// GetHostPort gets the HostPort field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) GetHostPort() (value int32, ok bool) {
	if v := b.HostPort; v != nil {
		return *v, true
	}
	return value, false
}

// SetContainerPort sets the ContainerPort field in the declarative configuration to the given value.
func (b *ContainerPortApplyConfiguration) SetContainerPort(value int32) *ContainerPortApplyConfiguration {
	b.ContainerPort = &value
	return b
}

// RemoveContainerPort removes the ContainerPort field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) RemoveContainerPort() *ContainerPortApplyConfiguration {
	b.ContainerPort = nil
	return b
}

// GetContainerPort gets the ContainerPort field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) GetContainerPort() (value int32, ok bool) {
	if v := b.ContainerPort; v != nil {
		return *v, true
	}
	return value, false
}

// SetProtocol sets the Protocol field in the declarative configuration to the given value.
func (b *ContainerPortApplyConfiguration) SetProtocol(value v1.Protocol) *ContainerPortApplyConfiguration {
	b.Protocol = &value
	return b
}

// RemoveProtocol removes the Protocol field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) RemoveProtocol() *ContainerPortApplyConfiguration {
	b.Protocol = nil
	return b
}

// GetProtocol gets the Protocol field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) GetProtocol() (value v1.Protocol, ok bool) {
	if v := b.Protocol; v != nil {
		return *v, true
	}
	return value, false
}

// SetHostIP sets the HostIP field in the declarative configuration to the given value.
func (b *ContainerPortApplyConfiguration) SetHostIP(value string) *ContainerPortApplyConfiguration {
	b.HostIP = &value
	return b
}

// RemoveHostIP removes the HostIP field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) RemoveHostIP() *ContainerPortApplyConfiguration {
	b.HostIP = nil
	return b
}

// GetHostIP gets the HostIP field from the declarative configuration.
func (b *ContainerPortApplyConfiguration) GetHostIP() (value string, ok bool) {
	if v := b.HostIP; v != nil {
		return *v, true
	}
	return value, false
}

// ContainerPortList represents a listAlias of ContainerPortApplyConfiguration.
type ContainerPortList []*ContainerPortApplyConfiguration

// ContainerPortList represents a map of ContainerPortApplyConfiguration.
type ContainerPortMap map[string]ContainerPortApplyConfiguration

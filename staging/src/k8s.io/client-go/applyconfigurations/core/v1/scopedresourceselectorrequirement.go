/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// ScopedResourceSelectorRequirementApplyConfiguration represents an declarative configuration of the ScopedResourceSelectorRequirement type for use
// with apply.
type ScopedResourceSelectorRequirementApplyConfiguration struct {
	ScopeName *v1.ResourceQuotaScope    `json:"scopeName,omitempty"`
	Operator  *v1.ScopeSelectorOperator `json:"operator,omitempty"`
	Values    *[]string                 `json:"values,omitempty"`
}

// ScopedResourceSelectorRequirementApplyConfiguration constructs an declarative configuration of the ScopedResourceSelectorRequirement type for use with
// apply.
func ScopedResourceSelectorRequirement() *ScopedResourceSelectorRequirementApplyConfiguration {
	return &ScopedResourceSelectorRequirementApplyConfiguration{}
}

// SetScopeName sets the ScopeName field in the declarative configuration to the given value.
func (b *ScopedResourceSelectorRequirementApplyConfiguration) SetScopeName(value v1.ResourceQuotaScope) *ScopedResourceSelectorRequirementApplyConfiguration {
	b.ScopeName = &value
	return b
}

// SetOperator sets the Operator field in the declarative configuration to the given value.
func (b *ScopedResourceSelectorRequirementApplyConfiguration) SetOperator(value v1.ScopeSelectorOperator) *ScopedResourceSelectorRequirementApplyConfiguration {
	b.Operator = &value
	return b
}

// SetValues sets the Values field in the declarative configuration to the given value.
func (b *ScopedResourceSelectorRequirementApplyConfiguration) SetValues(value []string) *ScopedResourceSelectorRequirementApplyConfiguration {
	b.Values = &value
	return b
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// TypedLocalObjectReferenceApplyConfiguration represents an declarative configuration of the TypedLocalObjectReference type for use
// with apply.
type TypedLocalObjectReferenceApplyConfiguration struct {
	APIGroup *string `json:"apiGroup,omitempty"`
	Kind     *string `json:"kind,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// TypedLocalObjectReferenceApplyConfiguration constructs an declarative configuration of the TypedLocalObjectReference type for use with
// apply.
func TypedLocalObjectReference() *TypedLocalObjectReferenceApplyConfiguration {
	return &TypedLocalObjectReferenceApplyConfiguration{}
}

// SetAPIGroup sets the APIGroup field in the declarative configuration to the given value.
func (b *TypedLocalObjectReferenceApplyConfiguration) SetAPIGroup(value string) *TypedLocalObjectReferenceApplyConfiguration {
	b.APIGroup = &value
	return b
}

// RemoveAPIGroup removes the APIGroup field from the declarative configuration.
func (b *TypedLocalObjectReferenceApplyConfiguration) RemoveAPIGroup() *TypedLocalObjectReferenceApplyConfiguration {
	b.APIGroup = nil
	return b
}

// GetAPIGroup gets the APIGroup field from the declarative configuration.
func (b *TypedLocalObjectReferenceApplyConfiguration) GetAPIGroup() (value string, ok bool) {
	if v := b.APIGroup; v != nil {
		return *v, true
	}
	return value, false
}

// SetKind sets the Kind field in the declarative configuration to the given value.
func (b *TypedLocalObjectReferenceApplyConfiguration) SetKind(value string) *TypedLocalObjectReferenceApplyConfiguration {
	b.Kind = &value
	return b
}

// RemoveKind removes the Kind field from the declarative configuration.
func (b *TypedLocalObjectReferenceApplyConfiguration) RemoveKind() *TypedLocalObjectReferenceApplyConfiguration {
	b.Kind = nil
	return b
}

// GetKind gets the Kind field from the declarative configuration.
func (b *TypedLocalObjectReferenceApplyConfiguration) GetKind() (value string, ok bool) {
	if v := b.Kind; v != nil {
		return *v, true
	}
	return value, false
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b *TypedLocalObjectReferenceApplyConfiguration) SetName(value string) *TypedLocalObjectReferenceApplyConfiguration {
	b.Name = &value
	return b
}

// RemoveName removes the Name field from the declarative configuration.
func (b *TypedLocalObjectReferenceApplyConfiguration) RemoveName() *TypedLocalObjectReferenceApplyConfiguration {
	b.Name = nil
	return b
}

// GetName gets the Name field from the declarative configuration.
func (b *TypedLocalObjectReferenceApplyConfiguration) GetName() (value string, ok bool) {
	if v := b.Name; v != nil {
		return *v, true
	}
	return value, false
}

// TypedLocalObjectReferenceList represents a listAlias of TypedLocalObjectReferenceApplyConfiguration.
type TypedLocalObjectReferenceList []*TypedLocalObjectReferenceApplyConfiguration

// TypedLocalObjectReferenceList represents a map of TypedLocalObjectReferenceApplyConfiguration.
type TypedLocalObjectReferenceMap map[string]TypedLocalObjectReferenceApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// VsphereVirtualDiskVolumeSourceApplyConfiguration represents an declarative configuration of the VsphereVirtualDiskVolumeSource type for use
// with apply.
type VsphereVirtualDiskVolumeSourceApplyConfiguration struct {
	VolumePath        *string `json:"volumePath,omitempty"`
	FSType            *string `json:"fsType,omitempty"`
	StoragePolicyName *string `json:"storagePolicyName,omitempty"`
	StoragePolicyID   *string `json:"storagePolicyID,omitempty"`
}

// VsphereVirtualDiskVolumeSourceApplyConfiguration constructs an declarative configuration of the VsphereVirtualDiskVolumeSource type for use with
// apply.
func VsphereVirtualDiskVolumeSource() *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	return &VsphereVirtualDiskVolumeSourceApplyConfiguration{}
}

// SetVolumePath sets the VolumePath field in the declarative configuration to the given value.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) SetVolumePath(value string) *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	b.VolumePath = &value
	return b
}

// RemoveVolumePath removes the VolumePath field from the declarative configuration.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) RemoveVolumePath() *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	b.VolumePath = nil
	return b
}

// GetVolumePath gets the VolumePath field from the declarative configuration.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) GetVolumePath() (value string, ok bool) {
	if v := b.VolumePath; v != nil {
		return *v, true
	}
	return value, false
}

// SetFSType sets the FSType field in the declarative configuration to the given value.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) SetFSType(value string) *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	b.FSType = &value
	return b
}

// RemoveFSType removes the FSType field from the declarative configuration.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) RemoveFSType() *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	b.FSType = nil
	return b
}

// GetFSType gets the FSType field from the declarative configuration.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) GetFSType() (value string, ok bool) {
	if v := b.FSType; v != nil {
		return *v, true
	}
	return value, false
}

// SetStoragePolicyName sets the StoragePolicyName field in the declarative configuration to the given value.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) SetStoragePolicyName(value string) *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	b.StoragePolicyName = &value
	return b
}

// RemoveStoragePolicyName removes the StoragePolicyName field from the declarative configuration.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) RemoveStoragePolicyName() *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	b.StoragePolicyName = nil
	return b
}

// GetStoragePolicyName gets the StoragePolicyName field from the declarative configuration.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) GetStoragePolicyName() (value string, ok bool) {
	if v := b.StoragePolicyName; v != nil {
		return *v, true
	}
	return value, false
}

// SetStoragePolicyID sets the StoragePolicyID field in the declarative configuration to the given value.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) SetStoragePolicyID(value string) *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	b.StoragePolicyID = &value
	return b
}

// RemoveStoragePolicyID removes the StoragePolicyID field from the declarative configuration.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) RemoveStoragePolicyID() *VsphereVirtualDiskVolumeSourceApplyConfiguration {
	b.StoragePolicyID = nil
	return b
}

// GetStoragePolicyID gets the StoragePolicyID field from the declarative configuration.
func (b *VsphereVirtualDiskVolumeSourceApplyConfiguration) GetStoragePolicyID() (value string, ok bool) {
	if v := b.StoragePolicyID; v != nil {
		return *v, true
	}
	return value, false
}

// VsphereVirtualDiskVolumeSourceList represents a listAlias of VsphereVirtualDiskVolumeSourceApplyConfiguration.
type VsphereVirtualDiskVolumeSourceList []*VsphereVirtualDiskVolumeSourceApplyConfiguration

// VsphereVirtualDiskVolumeSourceList represents a map of VsphereVirtualDiskVolumeSourceApplyConfiguration.
type VsphereVirtualDiskVolumeSourceMap map[string]VsphereVirtualDiskVolumeSourceApplyConfiguration

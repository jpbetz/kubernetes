/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// NodeSpecApplyConfiguration represents an declarative configuration of the NodeSpec type for use
// with apply.
type NodeSpecApplyConfiguration struct {
	PodCIDR            *string                             `json:"podCIDR,omitempty"`
	PodCIDRs           *[]string                           `json:"podCIDRs,omitempty"`
	ProviderID         *string                             `json:"providerID,omitempty"`
	Unschedulable      *bool                               `json:"unschedulable,omitempty"`
	Taints             *[]TaintApplyConfiguration          `json:"taints,omitempty"`
	ConfigSource       *NodeConfigSourceApplyConfiguration `json:"configSource,omitempty"`
	DoNotUseExternalID *string                             `json:"externalID,omitempty"`
}

// NodeSpecApplyConfiguration constructs an declarative configuration of the NodeSpec type for use with
// apply.
func NodeSpec() *NodeSpecApplyConfiguration {
	return &NodeSpecApplyConfiguration{}
}

// SetPodCIDR sets the PodCIDR field in the declarative configuration to the given value.
func (b *NodeSpecApplyConfiguration) SetPodCIDR(value string) *NodeSpecApplyConfiguration {
	b.PodCIDR = &value
	return b
}

// SetPodCIDRs sets the PodCIDRs field in the declarative configuration to the given value.
func (b *NodeSpecApplyConfiguration) SetPodCIDRs(value []string) *NodeSpecApplyConfiguration {
	b.PodCIDRs = &value
	return b
}

// SetProviderID sets the ProviderID field in the declarative configuration to the given value.
func (b *NodeSpecApplyConfiguration) SetProviderID(value string) *NodeSpecApplyConfiguration {
	b.ProviderID = &value
	return b
}

// SetUnschedulable sets the Unschedulable field in the declarative configuration to the given value.
func (b *NodeSpecApplyConfiguration) SetUnschedulable(value bool) *NodeSpecApplyConfiguration {
	b.Unschedulable = &value
	return b
}

// SetTaints sets the Taints field in the declarative configuration to the given value.
func (b *NodeSpecApplyConfiguration) SetTaints(value []TaintApplyConfiguration) *NodeSpecApplyConfiguration {
	b.Taints = &value
	return b
}

// SetConfigSource sets the ConfigSource field in the declarative configuration to the given value.
func (b *NodeSpecApplyConfiguration) SetConfigSource(value *NodeConfigSourceApplyConfiguration) *NodeSpecApplyConfiguration {
	b.ConfigSource = value
	return b
}

// SetDoNotUseExternalID sets the DoNotUseExternalID field in the declarative configuration to the given value.
func (b *NodeSpecApplyConfiguration) SetDoNotUseExternalID(value string) *NodeSpecApplyConfiguration {
	b.DoNotUseExternalID = &value
	return b
}

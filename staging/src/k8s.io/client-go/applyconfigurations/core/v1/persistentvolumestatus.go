/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// PersistentVolumeStatusApplyConfiguration represents an declarative configuration of the PersistentVolumeStatus type for use
// with apply.
type PersistentVolumeStatusApplyConfiguration struct {
	Phase   *v1.PersistentVolumePhase `json:"phase,omitempty"`
	Message *string                   `json:"message,omitempty"`
	Reason  *string                   `json:"reason,omitempty"`
}

// PersistentVolumeStatusApplyConfiguration constructs an declarative configuration of the PersistentVolumeStatus type for use with
// apply.
func PersistentVolumeStatus() *PersistentVolumeStatusApplyConfiguration {
	return &PersistentVolumeStatusApplyConfiguration{}
}

// SetPhase sets the Phase field in the declarative configuration to the given value.
func (b *PersistentVolumeStatusApplyConfiguration) SetPhase(value v1.PersistentVolumePhase) *PersistentVolumeStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// RemovePhase removes the Phase field from the declarative configuration.
func (b *PersistentVolumeStatusApplyConfiguration) RemovePhase() *PersistentVolumeStatusApplyConfiguration {
	b.Phase = nil
	return b
}

// GetPhase gets the Phase field from the declarative configuration.
func (b *PersistentVolumeStatusApplyConfiguration) GetPhase() (value v1.PersistentVolumePhase, ok bool) {
	if v := b.Phase; v != nil {
		return *v, true
	}
	return value, false
}

// SetMessage sets the Message field in the declarative configuration to the given value.
func (b *PersistentVolumeStatusApplyConfiguration) SetMessage(value string) *PersistentVolumeStatusApplyConfiguration {
	b.Message = &value
	return b
}

// RemoveMessage removes the Message field from the declarative configuration.
func (b *PersistentVolumeStatusApplyConfiguration) RemoveMessage() *PersistentVolumeStatusApplyConfiguration {
	b.Message = nil
	return b
}

// GetMessage gets the Message field from the declarative configuration.
func (b *PersistentVolumeStatusApplyConfiguration) GetMessage() (value string, ok bool) {
	if v := b.Message; v != nil {
		return *v, true
	}
	return value, false
}

// SetReason sets the Reason field in the declarative configuration to the given value.
func (b *PersistentVolumeStatusApplyConfiguration) SetReason(value string) *PersistentVolumeStatusApplyConfiguration {
	b.Reason = &value
	return b
}

// RemoveReason removes the Reason field from the declarative configuration.
func (b *PersistentVolumeStatusApplyConfiguration) RemoveReason() *PersistentVolumeStatusApplyConfiguration {
	b.Reason = nil
	return b
}

// GetReason gets the Reason field from the declarative configuration.
func (b *PersistentVolumeStatusApplyConfiguration) GetReason() (value string, ok bool) {
	if v := b.Reason; v != nil {
		return *v, true
	}
	return value, false
}

// PersistentVolumeStatusList represents a listAlias of PersistentVolumeStatusApplyConfiguration.
type PersistentVolumeStatusList []*PersistentVolumeStatusApplyConfiguration

// PersistentVolumeStatusList represents a map of PersistentVolumeStatusApplyConfiguration.
type PersistentVolumeStatusMap map[string]PersistentVolumeStatusApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

import (
	v1beta2 "k8s.io/api/apps/v1beta2"
	corev1 "k8s.io/client-go/applyconfigurations/core/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// StatefulSetSpecApplyConfiguration represents an declarative configuration of the StatefulSetSpec type for use
// with apply.
type StatefulSetSpecApplyConfiguration struct {
	Replicas             *int32                                            `json:"replicas,omitempty"`
	Selector             *v1.LabelSelectorApplyConfiguration               `json:"selector,omitempty"`
	Template             *corev1.PodTemplateSpecApplyConfiguration         `json:"template,omitempty"`
	VolumeClaimTemplates *[]corev1.PersistentVolumeClaimApplyConfiguration `json:"volumeClaimTemplates,omitempty"`
	ServiceName          *string                                           `json:"serviceName,omitempty"`
	PodManagementPolicy  *v1beta2.PodManagementPolicyType                  `json:"podManagementPolicy,omitempty"`
	UpdateStrategy       *StatefulSetUpdateStrategyApplyConfiguration      `json:"updateStrategy,omitempty"`
	RevisionHistoryLimit *int32                                            `json:"revisionHistoryLimit,omitempty"`
}

// StatefulSetSpecApplyConfiguration constructs an declarative configuration of the StatefulSetSpec type for use with
// apply.
func StatefulSetSpec() *StatefulSetSpecApplyConfiguration {
	return &StatefulSetSpecApplyConfiguration{}
}

// SetReplicas sets the Replicas field in the declarative configuration to the given value.
func (b *StatefulSetSpecApplyConfiguration) SetReplicas(value int32) *StatefulSetSpecApplyConfiguration {
	b.Replicas = &value
	return b
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b *StatefulSetSpecApplyConfiguration) SetSelector(value *v1.LabelSelectorApplyConfiguration) *StatefulSetSpecApplyConfiguration {
	b.Selector = value
	return b
}

// SetTemplate sets the Template field in the declarative configuration to the given value.
func (b *StatefulSetSpecApplyConfiguration) SetTemplate(value *corev1.PodTemplateSpecApplyConfiguration) *StatefulSetSpecApplyConfiguration {
	b.Template = value
	return b
}

// SetVolumeClaimTemplates sets the VolumeClaimTemplates field in the declarative configuration to the given value.
func (b *StatefulSetSpecApplyConfiguration) SetVolumeClaimTemplates(value []corev1.PersistentVolumeClaimApplyConfiguration) *StatefulSetSpecApplyConfiguration {
	b.VolumeClaimTemplates = &value
	return b
}

// SetServiceName sets the ServiceName field in the declarative configuration to the given value.
func (b *StatefulSetSpecApplyConfiguration) SetServiceName(value string) *StatefulSetSpecApplyConfiguration {
	b.ServiceName = &value
	return b
}

// SetPodManagementPolicy sets the PodManagementPolicy field in the declarative configuration to the given value.
func (b *StatefulSetSpecApplyConfiguration) SetPodManagementPolicy(value v1beta2.PodManagementPolicyType) *StatefulSetSpecApplyConfiguration {
	b.PodManagementPolicy = &value
	return b
}

// SetUpdateStrategy sets the UpdateStrategy field in the declarative configuration to the given value.
func (b *StatefulSetSpecApplyConfiguration) SetUpdateStrategy(value *StatefulSetUpdateStrategyApplyConfiguration) *StatefulSetSpecApplyConfiguration {
	b.UpdateStrategy = value
	return b
}

// SetRevisionHistoryLimit sets the RevisionHistoryLimit field in the declarative configuration to the given value.
func (b *StatefulSetSpecApplyConfiguration) SetRevisionHistoryLimit(value int32) *StatefulSetSpecApplyConfiguration {
	b.RevisionHistoryLimit = &value
	return b
}

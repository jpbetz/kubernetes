/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ControllerRevisionApplyConfiguration represents an declarative configuration of the ControllerRevision type for use
// with apply.
type ControllerRevisionApplyConfiguration struct {
	v1.TypeMetaApplyConfiguration   `json:",inline"`
	v1.ObjectMetaApplyConfiguration `json:"metadata,omitempty"`
	Data                            *runtime.RawExtension `json:"data,omitempty"`
	Revision                        *int64                `json:"revision,omitempty"`
}

// ControllerRevisionApplyConfiguration constructs an declarative configuration of the ControllerRevision type for use with
// apply.
func ControllerRevision(name, namespace string) *ControllerRevisionApplyConfiguration {
	b := &ControllerRevisionApplyConfiguration{}
	b.SetName(name)
	b.SetNamespace(namespace)
	b.SetKind("ControllerRevision")
	b.SetAPIVersion("apps/v1beta1")
	return b
}

// SetData sets the Data field in the declarative configuration to the given value.
func (b *ControllerRevisionApplyConfiguration) SetData(value runtime.RawExtension) *ControllerRevisionApplyConfiguration {
	b.Data = &value
	return b
}

// SetRevision sets the Revision field in the declarative configuration to the given value.
func (b *ControllerRevisionApplyConfiguration) SetRevision(value int64) *ControllerRevisionApplyConfiguration {
	b.Revision = &value
	return b
}

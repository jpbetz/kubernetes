/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	corev1 "k8s.io/client-go/applyconfigurations/core/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// DeploymentSpecApplyConfiguration represents an declarative configuration of the DeploymentSpec type for use
// with apply.
type DeploymentSpecApplyConfiguration struct {
	Replicas                *int32                                    `json:"replicas,omitempty"`
	Selector                *v1.LabelSelectorApplyConfiguration       `json:"selector,omitempty"`
	Template                *corev1.PodTemplateSpecApplyConfiguration `json:"template,omitempty"`
	Strategy                *DeploymentStrategyApplyConfiguration     `json:"strategy,omitempty"`
	MinReadySeconds         *int32                                    `json:"minReadySeconds,omitempty"`
	RevisionHistoryLimit    *int32                                    `json:"revisionHistoryLimit,omitempty"`
	Paused                  *bool                                     `json:"paused,omitempty"`
	RollbackTo              *RollbackConfigApplyConfiguration         `json:"rollbackTo,omitempty"`
	ProgressDeadlineSeconds *int32                                    `json:"progressDeadlineSeconds,omitempty"`
}

// DeploymentSpecApplyConfiguration constructs an declarative configuration of the DeploymentSpec type for use with
// apply.
func DeploymentSpec() *DeploymentSpecApplyConfiguration {
	return &DeploymentSpecApplyConfiguration{}
}

// SetReplicas sets the Replicas field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetReplicas(value int32) *DeploymentSpecApplyConfiguration {
	b.Replicas = &value
	return b
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetSelector(value *v1.LabelSelectorApplyConfiguration) *DeploymentSpecApplyConfiguration {
	b.Selector = value
	return b
}

// SetTemplate sets the Template field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetTemplate(value *corev1.PodTemplateSpecApplyConfiguration) *DeploymentSpecApplyConfiguration {
	b.Template = value
	return b
}

// SetStrategy sets the Strategy field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetStrategy(value *DeploymentStrategyApplyConfiguration) *DeploymentSpecApplyConfiguration {
	b.Strategy = value
	return b
}

// SetMinReadySeconds sets the MinReadySeconds field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetMinReadySeconds(value int32) *DeploymentSpecApplyConfiguration {
	b.MinReadySeconds = &value
	return b
}

// SetRevisionHistoryLimit sets the RevisionHistoryLimit field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetRevisionHistoryLimit(value int32) *DeploymentSpecApplyConfiguration {
	b.RevisionHistoryLimit = &value
	return b
}

// SetPaused sets the Paused field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetPaused(value bool) *DeploymentSpecApplyConfiguration {
	b.Paused = &value
	return b
}

// SetRollbackTo sets the RollbackTo field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetRollbackTo(value *RollbackConfigApplyConfiguration) *DeploymentSpecApplyConfiguration {
	b.RollbackTo = value
	return b
}

// SetProgressDeadlineSeconds sets the ProgressDeadlineSeconds field in the declarative configuration to the given value.
func (b *DeploymentSpecApplyConfiguration) SetProgressDeadlineSeconds(value int32) *DeploymentSpecApplyConfiguration {
	b.ProgressDeadlineSeconds = &value
	return b
}

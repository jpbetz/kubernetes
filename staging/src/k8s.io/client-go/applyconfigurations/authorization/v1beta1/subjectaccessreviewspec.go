/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	authorizationv1beta1 "k8s.io/api/authorization/v1beta1"
)

// SubjectAccessReviewSpecApplyConfiguration represents an declarative configuration of the SubjectAccessReviewSpec type for use
// with apply.
type SubjectAccessReviewSpecApplyConfiguration struct {
	ResourceAttributes    *ResourceAttributesApplyConfiguration       `json:"resourceAttributes,omitempty"`
	NonResourceAttributes *NonResourceAttributesApplyConfiguration    `json:"nonResourceAttributes,omitempty"`
	User                  *string                                     `json:"user,omitempty"`
	Groups                *[]string                                   `json:"group,omitempty"`
	Extra                 *map[string]authorizationv1beta1.ExtraValue `json:"extra,omitempty"`
	UID                   *string                                     `json:"uid,omitempty"`
}

// SubjectAccessReviewSpecApplyConfiguration constructs an declarative configuration of the SubjectAccessReviewSpec type for use with
// apply.
func SubjectAccessReviewSpec() *SubjectAccessReviewSpecApplyConfiguration {
	return &SubjectAccessReviewSpecApplyConfiguration{}
}

// SetResourceAttributes sets the ResourceAttributes field in the declarative configuration to the given value.
func (b *SubjectAccessReviewSpecApplyConfiguration) SetResourceAttributes(value *ResourceAttributesApplyConfiguration) *SubjectAccessReviewSpecApplyConfiguration {
	b.ResourceAttributes = value
	return b
}

// RemoveResourceAttributes removes the ResourceAttributes field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) RemoveResourceAttributes() *SubjectAccessReviewSpecApplyConfiguration {
	b.ResourceAttributes = nil
	return b
}

// GetResourceAttributes gets the ResourceAttributes field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) GetResourceAttributes() (value *ResourceAttributesApplyConfiguration, ok bool) {
	return b.ResourceAttributes, b.ResourceAttributes != nil
}

// SetNonResourceAttributes sets the NonResourceAttributes field in the declarative configuration to the given value.
func (b *SubjectAccessReviewSpecApplyConfiguration) SetNonResourceAttributes(value *NonResourceAttributesApplyConfiguration) *SubjectAccessReviewSpecApplyConfiguration {
	b.NonResourceAttributes = value
	return b
}

// RemoveNonResourceAttributes removes the NonResourceAttributes field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) RemoveNonResourceAttributes() *SubjectAccessReviewSpecApplyConfiguration {
	b.NonResourceAttributes = nil
	return b
}

// GetNonResourceAttributes gets the NonResourceAttributes field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) GetNonResourceAttributes() (value *NonResourceAttributesApplyConfiguration, ok bool) {
	return b.NonResourceAttributes, b.NonResourceAttributes != nil
}

// SetUser sets the User field in the declarative configuration to the given value.
func (b *SubjectAccessReviewSpecApplyConfiguration) SetUser(value string) *SubjectAccessReviewSpecApplyConfiguration {
	b.User = &value
	return b
}

// RemoveUser removes the User field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) RemoveUser() *SubjectAccessReviewSpecApplyConfiguration {
	b.User = nil
	return b
}

// GetUser gets the User field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) GetUser() (value string, ok bool) {
	if v := b.User; v != nil {
		return *v, true
	}
	return value, false
}

// SetGroups sets the Groups field in the declarative configuration to the given value.
func (b *SubjectAccessReviewSpecApplyConfiguration) SetGroups(value []string) *SubjectAccessReviewSpecApplyConfiguration {
	b.Groups = &value
	return b
}

// RemoveGroups removes the Groups field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) RemoveGroups() *SubjectAccessReviewSpecApplyConfiguration {
	b.Groups = nil
	return b
}

// GetGroups gets the Groups field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) GetGroups() (value []string, ok bool) {
	if v := b.Groups; v != nil {
		return *v, true
	}
	return value, false
}

// SetExtra sets the Extra field in the declarative configuration to the given value.
func (b *SubjectAccessReviewSpecApplyConfiguration) SetExtra(value map[string]authorizationv1beta1.ExtraValue) *SubjectAccessReviewSpecApplyConfiguration {
	b.Extra = &value
	return b
}

// RemoveExtra removes the Extra field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) RemoveExtra() *SubjectAccessReviewSpecApplyConfiguration {
	b.Extra = nil
	return b
}

// GetExtra gets the Extra field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) GetExtra() (value map[string]authorizationv1beta1.ExtraValue, ok bool) {
	if v := b.Extra; v != nil {
		return *v, true
	}
	return value, false
}

// SetUID sets the UID field in the declarative configuration to the given value.
func (b *SubjectAccessReviewSpecApplyConfiguration) SetUID(value string) *SubjectAccessReviewSpecApplyConfiguration {
	b.UID = &value
	return b
}

// RemoveUID removes the UID field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) RemoveUID() *SubjectAccessReviewSpecApplyConfiguration {
	b.UID = nil
	return b
}

// GetUID gets the UID field from the declarative configuration.
func (b *SubjectAccessReviewSpecApplyConfiguration) GetUID() (value string, ok bool) {
	if v := b.UID; v != nil {
		return *v, true
	}
	return value, false
}

// SubjectAccessReviewSpecList represents a listAlias of SubjectAccessReviewSpecApplyConfiguration.
type SubjectAccessReviewSpecList []*SubjectAccessReviewSpecApplyConfiguration

// SubjectAccessReviewSpecList represents a map of SubjectAccessReviewSpecApplyConfiguration.
type SubjectAccessReviewSpecMap map[string]SubjectAccessReviewSpecApplyConfiguration

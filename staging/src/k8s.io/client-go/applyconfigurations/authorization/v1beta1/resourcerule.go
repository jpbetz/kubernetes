/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// ResourceRuleApplyConfiguration represents an declarative configuration of the ResourceRule type for use
// with apply.
type ResourceRuleApplyConfiguration struct {
	Verbs         *[]string `json:"verbs,omitempty"`
	APIGroups     *[]string `json:"apiGroups,omitempty"`
	Resources     *[]string `json:"resources,omitempty"`
	ResourceNames *[]string `json:"resourceNames,omitempty"`
}

// ResourceRuleApplyConfiguration constructs an declarative configuration of the ResourceRule type for use with
// apply.
func ResourceRule() *ResourceRuleApplyConfiguration {
	return &ResourceRuleApplyConfiguration{}
}

// SetVerbs sets the Verbs field in the declarative configuration to the given value.
func (b *ResourceRuleApplyConfiguration) SetVerbs(value []string) *ResourceRuleApplyConfiguration {
	b.Verbs = &value
	return b
}

// RemoveVerbs removes the Verbs field from the declarative configuration.
func (b *ResourceRuleApplyConfiguration) RemoveVerbs() *ResourceRuleApplyConfiguration {
	b.Verbs = nil
	return b
}

// GetVerbs gets the Verbs field from the declarative configuration.
func (b *ResourceRuleApplyConfiguration) GetVerbs() (value []string, ok bool) {
	if v := b.Verbs; v != nil {
		return *v, true
	}
	return value, false
}

// SetAPIGroups sets the APIGroups field in the declarative configuration to the given value.
func (b *ResourceRuleApplyConfiguration) SetAPIGroups(value []string) *ResourceRuleApplyConfiguration {
	b.APIGroups = &value
	return b
}

// RemoveAPIGroups removes the APIGroups field from the declarative configuration.
func (b *ResourceRuleApplyConfiguration) RemoveAPIGroups() *ResourceRuleApplyConfiguration {
	b.APIGroups = nil
	return b
}

// GetAPIGroups gets the APIGroups field from the declarative configuration.
func (b *ResourceRuleApplyConfiguration) GetAPIGroups() (value []string, ok bool) {
	if v := b.APIGroups; v != nil {
		return *v, true
	}
	return value, false
}

// SetResources sets the Resources field in the declarative configuration to the given value.
func (b *ResourceRuleApplyConfiguration) SetResources(value []string) *ResourceRuleApplyConfiguration {
	b.Resources = &value
	return b
}

// RemoveResources removes the Resources field from the declarative configuration.
func (b *ResourceRuleApplyConfiguration) RemoveResources() *ResourceRuleApplyConfiguration {
	b.Resources = nil
	return b
}

// GetResources gets the Resources field from the declarative configuration.
func (b *ResourceRuleApplyConfiguration) GetResources() (value []string, ok bool) {
	if v := b.Resources; v != nil {
		return *v, true
	}
	return value, false
}

// SetResourceNames sets the ResourceNames field in the declarative configuration to the given value.
func (b *ResourceRuleApplyConfiguration) SetResourceNames(value []string) *ResourceRuleApplyConfiguration {
	b.ResourceNames = &value
	return b
}

// RemoveResourceNames removes the ResourceNames field from the declarative configuration.
func (b *ResourceRuleApplyConfiguration) RemoveResourceNames() *ResourceRuleApplyConfiguration {
	b.ResourceNames = nil
	return b
}

// GetResourceNames gets the ResourceNames field from the declarative configuration.
func (b *ResourceRuleApplyConfiguration) GetResourceNames() (value []string, ok bool) {
	if v := b.ResourceNames; v != nil {
		return *v, true
	}
	return value, false
}

// ResourceRuleList represents a listAlias of ResourceRuleApplyConfiguration.
type ResourceRuleList []*ResourceRuleApplyConfiguration

// ResourceRuleList represents a map of ResourceRuleApplyConfiguration.
type ResourceRuleMap map[string]ResourceRuleApplyConfiguration

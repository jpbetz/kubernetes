/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// SubjectRulesReviewStatusApplyConfiguration represents an declarative configuration of the SubjectRulesReviewStatus type for use
// with apply.
type SubjectRulesReviewStatusApplyConfiguration struct {
	ResourceRules    *ResourceRuleList    `json:"resourceRules,omitempty"`
	NonResourceRules *NonResourceRuleList `json:"nonResourceRules,omitempty"`
	Incomplete       *bool                `json:"incomplete,omitempty"`
	EvaluationError  *string              `json:"evaluationError,omitempty"`
}

// SubjectRulesReviewStatusApplyConfiguration constructs an declarative configuration of the SubjectRulesReviewStatus type for use with
// apply.
func SubjectRulesReviewStatus() *SubjectRulesReviewStatusApplyConfiguration {
	return &SubjectRulesReviewStatusApplyConfiguration{}
}

// SetResourceRules sets the ResourceRules field in the declarative configuration to the given value.
func (b *SubjectRulesReviewStatusApplyConfiguration) SetResourceRules(value ResourceRuleList) *SubjectRulesReviewStatusApplyConfiguration {
	b.ResourceRules = &value
	return b
}

// RemoveResourceRules removes the ResourceRules field from the declarative configuration.
func (b *SubjectRulesReviewStatusApplyConfiguration) RemoveResourceRules() *SubjectRulesReviewStatusApplyConfiguration {
	b.ResourceRules = nil
	return b
}

// GetResourceRules gets the ResourceRules field from the declarative configuration.
func (b *SubjectRulesReviewStatusApplyConfiguration) GetResourceRules() (value ResourceRuleList, ok bool) {
	if v := b.ResourceRules; v != nil {
		return *v, true
	}
	return value, false
}

// SetNonResourceRules sets the NonResourceRules field in the declarative configuration to the given value.
func (b *SubjectRulesReviewStatusApplyConfiguration) SetNonResourceRules(value NonResourceRuleList) *SubjectRulesReviewStatusApplyConfiguration {
	b.NonResourceRules = &value
	return b
}

// RemoveNonResourceRules removes the NonResourceRules field from the declarative configuration.
func (b *SubjectRulesReviewStatusApplyConfiguration) RemoveNonResourceRules() *SubjectRulesReviewStatusApplyConfiguration {
	b.NonResourceRules = nil
	return b
}

// GetNonResourceRules gets the NonResourceRules field from the declarative configuration.
func (b *SubjectRulesReviewStatusApplyConfiguration) GetNonResourceRules() (value NonResourceRuleList, ok bool) {
	if v := b.NonResourceRules; v != nil {
		return *v, true
	}
	return value, false
}

// SetIncomplete sets the Incomplete field in the declarative configuration to the given value.
func (b *SubjectRulesReviewStatusApplyConfiguration) SetIncomplete(value bool) *SubjectRulesReviewStatusApplyConfiguration {
	b.Incomplete = &value
	return b
}

// RemoveIncomplete removes the Incomplete field from the declarative configuration.
func (b *SubjectRulesReviewStatusApplyConfiguration) RemoveIncomplete() *SubjectRulesReviewStatusApplyConfiguration {
	b.Incomplete = nil
	return b
}

// GetIncomplete gets the Incomplete field from the declarative configuration.
func (b *SubjectRulesReviewStatusApplyConfiguration) GetIncomplete() (value bool, ok bool) {
	if v := b.Incomplete; v != nil {
		return *v, true
	}
	return value, false
}

// SetEvaluationError sets the EvaluationError field in the declarative configuration to the given value.
func (b *SubjectRulesReviewStatusApplyConfiguration) SetEvaluationError(value string) *SubjectRulesReviewStatusApplyConfiguration {
	b.EvaluationError = &value
	return b
}

// RemoveEvaluationError removes the EvaluationError field from the declarative configuration.
func (b *SubjectRulesReviewStatusApplyConfiguration) RemoveEvaluationError() *SubjectRulesReviewStatusApplyConfiguration {
	b.EvaluationError = nil
	return b
}

// GetEvaluationError gets the EvaluationError field from the declarative configuration.
func (b *SubjectRulesReviewStatusApplyConfiguration) GetEvaluationError() (value string, ok bool) {
	if v := b.EvaluationError; v != nil {
		return *v, true
	}
	return value, false
}

// SubjectRulesReviewStatusList represents a listAlias of SubjectRulesReviewStatusApplyConfiguration.
type SubjectRulesReviewStatusList []*SubjectRulesReviewStatusApplyConfiguration

// SubjectRulesReviewStatusList represents a map of SubjectRulesReviewStatusApplyConfiguration.
type SubjectRulesReviewStatusMap map[string]SubjectRulesReviewStatusApplyConfiguration

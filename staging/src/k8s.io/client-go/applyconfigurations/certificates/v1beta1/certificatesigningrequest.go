/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// CertificateSigningRequestApplyConfiguration represents an declarative configuration of the CertificateSigningRequest type for use
// with apply.
type CertificateSigningRequestApplyConfiguration struct {
	v1.TypeMetaApplyConfiguration `json:",inline"`
	ObjectMeta                    *v1.ObjectMetaApplyConfiguration                   `json:"metadata,omitempty"`
	Spec                          *CertificateSigningRequestSpecApplyConfiguration   `json:"spec,omitempty"`
	Status                        *CertificateSigningRequestStatusApplyConfiguration `json:"status,omitempty"`
}

// CertificateSigningRequestApplyConfiguration constructs an declarative configuration of the CertificateSigningRequest type for use with
// apply.
func CertificateSigningRequest() *CertificateSigningRequestApplyConfiguration {
	return &CertificateSigningRequestApplyConfiguration{}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b *CertificateSigningRequestApplyConfiguration) SetTypeMeta(value *v1.TypeMetaApplyConfiguration) *CertificateSigningRequestApplyConfiguration {
	if value != nil {
		b.TypeMetaApplyConfiguration = *value
	}
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b *CertificateSigningRequestApplyConfiguration) GetTypeMeta() (value *v1.TypeMetaApplyConfiguration, ok bool) {
	return &b.TypeMetaApplyConfiguration, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b *CertificateSigningRequestApplyConfiguration) SetObjectMeta(value *v1.ObjectMetaApplyConfiguration) *CertificateSigningRequestApplyConfiguration {
	b.ObjectMeta = value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b *CertificateSigningRequestApplyConfiguration) RemoveObjectMeta() *CertificateSigningRequestApplyConfiguration {
	b.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b *CertificateSigningRequestApplyConfiguration) GetObjectMeta() (value *v1.ObjectMetaApplyConfiguration, ok bool) {
	return b.ObjectMeta, b.ObjectMeta != nil
}

// SetSpec sets the Spec field in the declarative configuration to the given value.
func (b *CertificateSigningRequestApplyConfiguration) SetSpec(value *CertificateSigningRequestSpecApplyConfiguration) *CertificateSigningRequestApplyConfiguration {
	b.Spec = value
	return b
}

// RemoveSpec removes the Spec field from the declarative configuration.
func (b *CertificateSigningRequestApplyConfiguration) RemoveSpec() *CertificateSigningRequestApplyConfiguration {
	b.Spec = nil
	return b
}

// GetSpec gets the Spec field from the declarative configuration.
func (b *CertificateSigningRequestApplyConfiguration) GetSpec() (value *CertificateSigningRequestSpecApplyConfiguration, ok bool) {
	return b.Spec, b.Spec != nil
}

// SetStatus sets the Status field in the declarative configuration to the given value.
func (b *CertificateSigningRequestApplyConfiguration) SetStatus(value *CertificateSigningRequestStatusApplyConfiguration) *CertificateSigningRequestApplyConfiguration {
	b.Status = value
	return b
}

// RemoveStatus removes the Status field from the declarative configuration.
func (b *CertificateSigningRequestApplyConfiguration) RemoveStatus() *CertificateSigningRequestApplyConfiguration {
	b.Status = nil
	return b
}

// GetStatus gets the Status field from the declarative configuration.
func (b *CertificateSigningRequestApplyConfiguration) GetStatus() (value *CertificateSigningRequestStatusApplyConfiguration, ok bool) {
	return b.Status, b.Status != nil
}

// CertificateSigningRequestList represents a listAlias of CertificateSigningRequestApplyConfiguration.
type CertificateSigningRequestList []*CertificateSigningRequestApplyConfiguration

// CertificateSigningRequestList represents a map of CertificateSigningRequestApplyConfiguration.
type CertificateSigningRequestMap map[string]CertificateSigningRequestApplyConfiguration

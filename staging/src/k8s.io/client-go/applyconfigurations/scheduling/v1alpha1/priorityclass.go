/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// PriorityClassApplyConfiguration represents an declarative configuration of the PriorityClass type for use
// with apply.
type PriorityClassApplyConfiguration struct {
	v1.TypeMetaApplyConfiguration   `json:",inline"`
	v1.ObjectMetaApplyConfiguration `json:"metadata,omitempty"`
	Value                           *int32                   `json:"value,omitempty"`
	GlobalDefault                   *bool                    `json:"globalDefault,omitempty"`
	Description                     *string                  `json:"description,omitempty"`
	PreemptionPolicy                *corev1.PreemptionPolicy `json:"preemptionPolicy,omitempty"`
}

// PriorityClassApplyConfiguration constructs an declarative configuration of the PriorityClass type for use with
// apply.
func PriorityClass(name string) *PriorityClassApplyConfiguration {
	b := &PriorityClassApplyConfiguration{}
	b.SetName(name)
	b.SetKind("PriorityClass")
	b.SetAPIVersion("scheduling/v1alpha1")
	return b
}

// SetValue sets the Value field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetValue(value int32) *PriorityClassApplyConfiguration {
	b.Value = &value
	return b
}

// SetGlobalDefault sets the GlobalDefault field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetGlobalDefault(value bool) *PriorityClassApplyConfiguration {
	b.GlobalDefault = &value
	return b
}

// SetDescription sets the Description field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetDescription(value string) *PriorityClassApplyConfiguration {
	b.Description = &value
	return b
}

// SetPreemptionPolicy sets the PreemptionPolicy field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetPreemptionPolicy(value corev1.PreemptionPolicy) *PriorityClassApplyConfiguration {
	b.PreemptionPolicy = &value
	return b
}

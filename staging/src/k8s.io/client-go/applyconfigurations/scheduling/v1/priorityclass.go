/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// PriorityClassApplyConfiguration represents an declarative configuration of the PriorityClass type for use
// with apply.
type PriorityClassApplyConfiguration struct {
	v1.TypeMetaApplyConfiguration `json:",inline"`
	ObjectMeta                    *v1.ObjectMetaApplyConfiguration `json:"metadata,omitempty"`
	Value                         *int32                           `json:"value,omitempty"`
	GlobalDefault                 *bool                            `json:"globalDefault,omitempty"`
	Description                   *string                          `json:"description,omitempty"`
	PreemptionPolicy              *corev1.PreemptionPolicy         `json:"preemptionPolicy,omitempty"`
}

// PriorityClassApplyConfiguration constructs an declarative configuration of the PriorityClass type for use with
// apply.
func PriorityClass() *PriorityClassApplyConfiguration {
	return &PriorityClassApplyConfiguration{}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetTypeMeta(value *v1.TypeMetaApplyConfiguration) *PriorityClassApplyConfiguration {
	if value != nil {
		b.TypeMetaApplyConfiguration = *value
	}
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) GetTypeMeta() (value *v1.TypeMetaApplyConfiguration, ok bool) {
	return &b.TypeMetaApplyConfiguration, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetObjectMeta(value *v1.ObjectMetaApplyConfiguration) *PriorityClassApplyConfiguration {
	b.ObjectMeta = value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) RemoveObjectMeta() *PriorityClassApplyConfiguration {
	b.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) GetObjectMeta() (value *v1.ObjectMetaApplyConfiguration, ok bool) {
	return b.ObjectMeta, b.ObjectMeta != nil
}

// SetValue sets the Value field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetValue(value int32) *PriorityClassApplyConfiguration {
	b.Value = &value
	return b
}

// RemoveValue removes the Value field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) RemoveValue() *PriorityClassApplyConfiguration {
	b.Value = nil
	return b
}

// GetValue gets the Value field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) GetValue() (value int32, ok bool) {
	if v := b.Value; v != nil {
		return *v, true
	}
	return value, false
}

// SetGlobalDefault sets the GlobalDefault field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetGlobalDefault(value bool) *PriorityClassApplyConfiguration {
	b.GlobalDefault = &value
	return b
}

// RemoveGlobalDefault removes the GlobalDefault field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) RemoveGlobalDefault() *PriorityClassApplyConfiguration {
	b.GlobalDefault = nil
	return b
}

// GetGlobalDefault gets the GlobalDefault field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) GetGlobalDefault() (value bool, ok bool) {
	if v := b.GlobalDefault; v != nil {
		return *v, true
	}
	return value, false
}

// SetDescription sets the Description field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetDescription(value string) *PriorityClassApplyConfiguration {
	b.Description = &value
	return b
}

// RemoveDescription removes the Description field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) RemoveDescription() *PriorityClassApplyConfiguration {
	b.Description = nil
	return b
}

// GetDescription gets the Description field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) GetDescription() (value string, ok bool) {
	if v := b.Description; v != nil {
		return *v, true
	}
	return value, false
}

// SetPreemptionPolicy sets the PreemptionPolicy field in the declarative configuration to the given value.
func (b *PriorityClassApplyConfiguration) SetPreemptionPolicy(value corev1.PreemptionPolicy) *PriorityClassApplyConfiguration {
	b.PreemptionPolicy = &value
	return b
}

// RemovePreemptionPolicy removes the PreemptionPolicy field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) RemovePreemptionPolicy() *PriorityClassApplyConfiguration {
	b.PreemptionPolicy = nil
	return b
}

// GetPreemptionPolicy gets the PreemptionPolicy field from the declarative configuration.
func (b *PriorityClassApplyConfiguration) GetPreemptionPolicy() (value corev1.PreemptionPolicy, ok bool) {
	if v := b.PreemptionPolicy; v != nil {
		return *v, true
	}
	return value, false
}

// PriorityClassList represents a listAlias of PriorityClassApplyConfiguration.
type PriorityClassList []*PriorityClassApplyConfiguration

// PriorityClassList represents a map of PriorityClassApplyConfiguration.
type PriorityClassMap map[string]PriorityClassApplyConfiguration

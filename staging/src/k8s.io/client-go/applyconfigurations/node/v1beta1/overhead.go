/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1 "k8s.io/api/core/v1"
)

// OverheadApplyConfiguration represents an declarative configuration of the Overhead type for use
// with apply.
type OverheadApplyConfiguration struct {
	PodFixed *v1.ResourceList `json:"podFixed,omitempty"`
}

// OverheadApplyConfiguration constructs an declarative configuration of the Overhead type for use with
// apply.
func Overhead() *OverheadApplyConfiguration {
	return &OverheadApplyConfiguration{}
}

// SetPodFixed sets the PodFixed field in the declarative configuration to the given value.
func (b *OverheadApplyConfiguration) SetPodFixed(value v1.ResourceList) *OverheadApplyConfiguration {
	b.PodFixed = &value
	return b
}

// RemovePodFixed removes the PodFixed field from the declarative configuration.
func (b *OverheadApplyConfiguration) RemovePodFixed() *OverheadApplyConfiguration {
	b.PodFixed = nil
	return b
}

// GetPodFixed gets the PodFixed field from the declarative configuration.
func (b *OverheadApplyConfiguration) GetPodFixed() (value v1.ResourceList, ok bool) {
	if v := b.PodFixed; v != nil {
		return *v, true
	}
	return value, false
}

// OverheadList represents a listAlias of OverheadApplyConfiguration.
type OverheadList []*OverheadApplyConfiguration

// OverheadList represents a map of OverheadApplyConfiguration.
type OverheadMap map[string]OverheadApplyConfiguration

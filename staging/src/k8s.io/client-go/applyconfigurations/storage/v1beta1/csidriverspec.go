/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "k8s.io/api/storage/v1beta1"
)

// CSIDriverSpecApplyConfiguration represents an declarative configuration of the CSIDriverSpec type for use
// with apply.
type CSIDriverSpecApplyConfiguration struct {
	AttachRequired       *bool                             `json:"attachRequired,omitempty"`
	PodInfoOnMount       *bool                             `json:"podInfoOnMount,omitempty"`
	VolumeLifecycleModes *[]v1beta1.VolumeLifecycleMode    `json:"volumeLifecycleModes,omitempty"`
	StorageCapacity      *bool                             `json:"storageCapacity,omitempty"`
	FSGroupPolicy        *v1beta1.FSGroupPolicy            `json:"fsGroupPolicy,omitempty"`
	TokenRequests        *[]TokenRequestApplyConfiguration `json:"tokenRequests,omitempty"`
	RequiresRepublish    *bool                             `json:"requiresRepublish,omitempty"`
}

// CSIDriverSpecApplyConfiguration constructs an declarative configuration of the CSIDriverSpec type for use with
// apply.
func CSIDriverSpec() *CSIDriverSpecApplyConfiguration {
	return &CSIDriverSpecApplyConfiguration{}
}

// SetAttachRequired sets the AttachRequired field in the declarative configuration to the given value.
func (b *CSIDriverSpecApplyConfiguration) SetAttachRequired(value bool) *CSIDriverSpecApplyConfiguration {
	b.AttachRequired = &value
	return b
}

// SetPodInfoOnMount sets the PodInfoOnMount field in the declarative configuration to the given value.
func (b *CSIDriverSpecApplyConfiguration) SetPodInfoOnMount(value bool) *CSIDriverSpecApplyConfiguration {
	b.PodInfoOnMount = &value
	return b
}

// SetVolumeLifecycleModes sets the VolumeLifecycleModes field in the declarative configuration to the given value.
func (b *CSIDriverSpecApplyConfiguration) SetVolumeLifecycleModes(value []v1beta1.VolumeLifecycleMode) *CSIDriverSpecApplyConfiguration {
	b.VolumeLifecycleModes = &value
	return b
}

// SetStorageCapacity sets the StorageCapacity field in the declarative configuration to the given value.
func (b *CSIDriverSpecApplyConfiguration) SetStorageCapacity(value bool) *CSIDriverSpecApplyConfiguration {
	b.StorageCapacity = &value
	return b
}

// SetFSGroupPolicy sets the FSGroupPolicy field in the declarative configuration to the given value.
func (b *CSIDriverSpecApplyConfiguration) SetFSGroupPolicy(value v1beta1.FSGroupPolicy) *CSIDriverSpecApplyConfiguration {
	b.FSGroupPolicy = &value
	return b
}

// SetTokenRequests sets the TokenRequests field in the declarative configuration to the given value.
func (b *CSIDriverSpecApplyConfiguration) SetTokenRequests(value []TokenRequestApplyConfiguration) *CSIDriverSpecApplyConfiguration {
	b.TokenRequests = &value
	return b
}

// SetRequiresRepublish sets the RequiresRepublish field in the declarative configuration to the given value.
func (b *CSIDriverSpecApplyConfiguration) SetRequiresRepublish(value bool) *CSIDriverSpecApplyConfiguration {
	b.RequiresRepublish = &value
	return b
}

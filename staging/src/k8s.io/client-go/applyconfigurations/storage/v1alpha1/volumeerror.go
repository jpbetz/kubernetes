/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// VolumeErrorApplyConfiguration represents an declarative configuration of the VolumeError type for use
// with apply.
type VolumeErrorApplyConfiguration struct {
	Time    *v1.Time `json:"time,omitempty"`
	Message *string  `json:"message,omitempty"`
}

// VolumeErrorApplyConfiguration constructs an declarative configuration of the VolumeError type for use with
// apply.
func VolumeError() *VolumeErrorApplyConfiguration {
	return &VolumeErrorApplyConfiguration{}
}

// SetTime sets the Time field in the declarative configuration to the given value.
func (b *VolumeErrorApplyConfiguration) SetTime(value v1.Time) *VolumeErrorApplyConfiguration {
	b.Time = &value
	return b
}

// RemoveTime removes the Time field from the declarative configuration.
func (b *VolumeErrorApplyConfiguration) RemoveTime() *VolumeErrorApplyConfiguration {
	b.Time = nil
	return b
}

// GetTime gets the Time field from the declarative configuration.
func (b *VolumeErrorApplyConfiguration) GetTime() (value v1.Time, ok bool) {
	if v := b.Time; v != nil {
		return *v, true
	}
	return value, false
}

// SetMessage sets the Message field in the declarative configuration to the given value.
func (b *VolumeErrorApplyConfiguration) SetMessage(value string) *VolumeErrorApplyConfiguration {
	b.Message = &value
	return b
}

// RemoveMessage removes the Message field from the declarative configuration.
func (b *VolumeErrorApplyConfiguration) RemoveMessage() *VolumeErrorApplyConfiguration {
	b.Message = nil
	return b
}

// GetMessage gets the Message field from the declarative configuration.
func (b *VolumeErrorApplyConfiguration) GetMessage() (value string, ok bool) {
	if v := b.Message; v != nil {
		return *v, true
	}
	return value, false
}

// VolumeErrorList represents a listAlias of VolumeErrorApplyConfiguration.
type VolumeErrorList []*VolumeErrorApplyConfiguration

// VolumeErrorList represents a map of VolumeErrorApplyConfiguration.
type VolumeErrorMap map[string]VolumeErrorApplyConfiguration

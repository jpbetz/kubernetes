/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// RoleBindingApplyConfiguration represents an declarative configuration of the RoleBinding type for use
// with apply.
type RoleBindingApplyConfiguration struct {
	v1.TypeMetaApplyConfiguration `json:",inline"`
	ObjectMeta                    *v1.ObjectMetaApplyConfiguration `json:"metadata,omitempty"`
	Subjects                      *SubjectList                     `json:"subjects,omitempty"`
	RoleRef                       *RoleRefApplyConfiguration       `json:"roleRef,omitempty"`
}

// RoleBindingApplyConfiguration constructs an declarative configuration of the RoleBinding type for use with
// apply.
func RoleBinding() *RoleBindingApplyConfiguration {
	return &RoleBindingApplyConfiguration{}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b *RoleBindingApplyConfiguration) SetTypeMeta(value *v1.TypeMetaApplyConfiguration) *RoleBindingApplyConfiguration {
	if value != nil {
		b.TypeMetaApplyConfiguration = *value
	}
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b *RoleBindingApplyConfiguration) GetTypeMeta() (value *v1.TypeMetaApplyConfiguration, ok bool) {
	return &b.TypeMetaApplyConfiguration, true
}

// SetObjectMeta sets the ObjectMeta field in the declarative configuration to the given value.
func (b *RoleBindingApplyConfiguration) SetObjectMeta(value *v1.ObjectMetaApplyConfiguration) *RoleBindingApplyConfiguration {
	b.ObjectMeta = value
	return b
}

// RemoveObjectMeta removes the ObjectMeta field from the declarative configuration.
func (b *RoleBindingApplyConfiguration) RemoveObjectMeta() *RoleBindingApplyConfiguration {
	b.ObjectMeta = nil
	return b
}

// GetObjectMeta gets the ObjectMeta field from the declarative configuration.
func (b *RoleBindingApplyConfiguration) GetObjectMeta() (value *v1.ObjectMetaApplyConfiguration, ok bool) {
	return b.ObjectMeta, b.ObjectMeta != nil
}

// SetSubjects sets the Subjects field in the declarative configuration to the given value.
func (b *RoleBindingApplyConfiguration) SetSubjects(value SubjectList) *RoleBindingApplyConfiguration {
	b.Subjects = &value
	return b
}

// RemoveSubjects removes the Subjects field from the declarative configuration.
func (b *RoleBindingApplyConfiguration) RemoveSubjects() *RoleBindingApplyConfiguration {
	b.Subjects = nil
	return b
}

// GetSubjects gets the Subjects field from the declarative configuration.
func (b *RoleBindingApplyConfiguration) GetSubjects() (value SubjectList, ok bool) {
	if v := b.Subjects; v != nil {
		return *v, true
	}
	return value, false
}

// SetRoleRef sets the RoleRef field in the declarative configuration to the given value.
func (b *RoleBindingApplyConfiguration) SetRoleRef(value *RoleRefApplyConfiguration) *RoleBindingApplyConfiguration {
	b.RoleRef = value
	return b
}

// RemoveRoleRef removes the RoleRef field from the declarative configuration.
func (b *RoleBindingApplyConfiguration) RemoveRoleRef() *RoleBindingApplyConfiguration {
	b.RoleRef = nil
	return b
}

// GetRoleRef gets the RoleRef field from the declarative configuration.
func (b *RoleBindingApplyConfiguration) GetRoleRef() (value *RoleRefApplyConfiguration, ok bool) {
	return b.RoleRef, b.RoleRef != nil
}

// RoleBindingList represents a listAlias of RoleBindingApplyConfiguration.
type RoleBindingList []*RoleBindingApplyConfiguration

// RoleBindingList represents a map of RoleBindingApplyConfiguration.
type RoleBindingMap map[string]RoleBindingApplyConfiguration

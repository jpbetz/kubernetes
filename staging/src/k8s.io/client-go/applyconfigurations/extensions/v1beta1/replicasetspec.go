/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	corev1 "k8s.io/client-go/applyconfigurations/core/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ReplicaSetSpecApplyConfiguration represents an declarative configuration of the ReplicaSetSpec type for use
// with apply.
type ReplicaSetSpecApplyConfiguration struct {
	Replicas        *int32                                    `json:"replicas,omitempty"`
	MinReadySeconds *int32                                    `json:"minReadySeconds,omitempty"`
	Selector        *v1.LabelSelectorApplyConfiguration       `json:"selector,omitempty"`
	Template        *corev1.PodTemplateSpecApplyConfiguration `json:"template,omitempty"`
}

// ReplicaSetSpecApplyConfiguration constructs an declarative configuration of the ReplicaSetSpec type for use with
// apply.
func ReplicaSetSpec() *ReplicaSetSpecApplyConfiguration {
	return &ReplicaSetSpecApplyConfiguration{}
}

// SetReplicas sets the Replicas field in the declarative configuration to the given value.
func (b *ReplicaSetSpecApplyConfiguration) SetReplicas(value int32) *ReplicaSetSpecApplyConfiguration {
	b.Replicas = &value
	return b
}

// RemoveReplicas removes the Replicas field from the declarative configuration.
func (b *ReplicaSetSpecApplyConfiguration) RemoveReplicas() *ReplicaSetSpecApplyConfiguration {
	b.Replicas = nil
	return b
}

// GetReplicas gets the Replicas field from the declarative configuration.
func (b *ReplicaSetSpecApplyConfiguration) GetReplicas() (value int32, ok bool) {
	if v := b.Replicas; v != nil {
		return *v, true
	}
	return value, false
}

// SetMinReadySeconds sets the MinReadySeconds field in the declarative configuration to the given value.
func (b *ReplicaSetSpecApplyConfiguration) SetMinReadySeconds(value int32) *ReplicaSetSpecApplyConfiguration {
	b.MinReadySeconds = &value
	return b
}

// RemoveMinReadySeconds removes the MinReadySeconds field from the declarative configuration.
func (b *ReplicaSetSpecApplyConfiguration) RemoveMinReadySeconds() *ReplicaSetSpecApplyConfiguration {
	b.MinReadySeconds = nil
	return b
}

// GetMinReadySeconds gets the MinReadySeconds field from the declarative configuration.
func (b *ReplicaSetSpecApplyConfiguration) GetMinReadySeconds() (value int32, ok bool) {
	if v := b.MinReadySeconds; v != nil {
		return *v, true
	}
	return value, false
}

// SetSelector sets the Selector field in the declarative configuration to the given value.
func (b *ReplicaSetSpecApplyConfiguration) SetSelector(value *v1.LabelSelectorApplyConfiguration) *ReplicaSetSpecApplyConfiguration {
	b.Selector = value
	return b
}

// RemoveSelector removes the Selector field from the declarative configuration.
func (b *ReplicaSetSpecApplyConfiguration) RemoveSelector() *ReplicaSetSpecApplyConfiguration {
	b.Selector = nil
	return b
}

// GetSelector gets the Selector field from the declarative configuration.
func (b *ReplicaSetSpecApplyConfiguration) GetSelector() (value *v1.LabelSelectorApplyConfiguration, ok bool) {
	return b.Selector, b.Selector != nil
}

// SetTemplate sets the Template field in the declarative configuration to the given value.
func (b *ReplicaSetSpecApplyConfiguration) SetTemplate(value *corev1.PodTemplateSpecApplyConfiguration) *ReplicaSetSpecApplyConfiguration {
	b.Template = value
	return b
}

// RemoveTemplate removes the Template field from the declarative configuration.
func (b *ReplicaSetSpecApplyConfiguration) RemoveTemplate() *ReplicaSetSpecApplyConfiguration {
	b.Template = nil
	return b
}

// GetTemplate gets the Template field from the declarative configuration.
func (b *ReplicaSetSpecApplyConfiguration) GetTemplate() (value *corev1.PodTemplateSpecApplyConfiguration, ok bool) {
	return b.Template, b.Template != nil
}

// ReplicaSetSpecList represents a listAlias of ReplicaSetSpecApplyConfiguration.
type ReplicaSetSpecList []*ReplicaSetSpecApplyConfiguration

// ReplicaSetSpecList represents a map of ReplicaSetSpecApplyConfiguration.
type ReplicaSetSpecMap map[string]ReplicaSetSpecApplyConfiguration

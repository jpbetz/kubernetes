/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1 "k8s.io/api/core/v1"
	v1beta1 "k8s.io/api/extensions/v1beta1"
)

// PodSecurityPolicySpecApplyConfiguration represents an declarative configuration of the PodSecurityPolicySpec type for use
// with apply.
type PodSecurityPolicySpecApplyConfiguration struct {
	Privileged                      *bool                                                `json:"privileged,omitempty"`
	DefaultAddCapabilities          *[]v1.Capability                                     `json:"defaultAddCapabilities,omitempty"`
	RequiredDropCapabilities        *[]v1.Capability                                     `json:"requiredDropCapabilities,omitempty"`
	AllowedCapabilities             *[]v1.Capability                                     `json:"allowedCapabilities,omitempty"`
	Volumes                         *[]v1beta1.FSType                                    `json:"volumes,omitempty"`
	HostNetwork                     *bool                                                `json:"hostNetwork,omitempty"`
	HostPorts                       *[]HostPortRangeApplyConfiguration                   `json:"hostPorts,omitempty"`
	HostPID                         *bool                                                `json:"hostPID,omitempty"`
	HostIPC                         *bool                                                `json:"hostIPC,omitempty"`
	SELinux                         *SELinuxStrategyOptionsApplyConfiguration            `json:"seLinux,omitempty"`
	RunAsUser                       *RunAsUserStrategyOptionsApplyConfiguration          `json:"runAsUser,omitempty"`
	RunAsGroup                      *RunAsGroupStrategyOptionsApplyConfiguration         `json:"runAsGroup,omitempty"`
	SupplementalGroups              *SupplementalGroupsStrategyOptionsApplyConfiguration `json:"supplementalGroups,omitempty"`
	FSGroup                         *FSGroupStrategyOptionsApplyConfiguration            `json:"fsGroup,omitempty"`
	ReadOnlyRootFilesystem          *bool                                                `json:"readOnlyRootFilesystem,omitempty"`
	DefaultAllowPrivilegeEscalation *bool                                                `json:"defaultAllowPrivilegeEscalation,omitempty"`
	AllowPrivilegeEscalation        *bool                                                `json:"allowPrivilegeEscalation,omitempty"`
	AllowedHostPaths                *[]AllowedHostPathApplyConfiguration                 `json:"allowedHostPaths,omitempty"`
	AllowedFlexVolumes              *[]AllowedFlexVolumeApplyConfiguration               `json:"allowedFlexVolumes,omitempty"`
	AllowedCSIDrivers               *[]AllowedCSIDriverApplyConfiguration                `json:"allowedCSIDrivers,omitempty"`
	AllowedUnsafeSysctls            *[]string                                            `json:"allowedUnsafeSysctls,omitempty"`
	ForbiddenSysctls                *[]string                                            `json:"forbiddenSysctls,omitempty"`
	AllowedProcMountTypes           *[]v1.ProcMountType                                  `json:"allowedProcMountTypes,omitempty"`
	RuntimeClass                    *RuntimeClassStrategyOptionsApplyConfiguration       `json:"runtimeClass,omitempty"`
}

// PodSecurityPolicySpecApplyConfiguration constructs an declarative configuration of the PodSecurityPolicySpec type for use with
// apply.
func PodSecurityPolicySpec() *PodSecurityPolicySpecApplyConfiguration {
	return &PodSecurityPolicySpecApplyConfiguration{}
}

// SetPrivileged sets the Privileged field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetPrivileged(value bool) *PodSecurityPolicySpecApplyConfiguration {
	b.Privileged = &value
	return b
}

// SetDefaultAddCapabilities sets the DefaultAddCapabilities field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetDefaultAddCapabilities(value []v1.Capability) *PodSecurityPolicySpecApplyConfiguration {
	b.DefaultAddCapabilities = &value
	return b
}

// SetRequiredDropCapabilities sets the RequiredDropCapabilities field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetRequiredDropCapabilities(value []v1.Capability) *PodSecurityPolicySpecApplyConfiguration {
	b.RequiredDropCapabilities = &value
	return b
}

// SetAllowedCapabilities sets the AllowedCapabilities field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetAllowedCapabilities(value []v1.Capability) *PodSecurityPolicySpecApplyConfiguration {
	b.AllowedCapabilities = &value
	return b
}

// SetVolumes sets the Volumes field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetVolumes(value []v1beta1.FSType) *PodSecurityPolicySpecApplyConfiguration {
	b.Volumes = &value
	return b
}

// SetHostNetwork sets the HostNetwork field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetHostNetwork(value bool) *PodSecurityPolicySpecApplyConfiguration {
	b.HostNetwork = &value
	return b
}

// SetHostPorts sets the HostPorts field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetHostPorts(value []HostPortRangeApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.HostPorts = &value
	return b
}

// SetHostPID sets the HostPID field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetHostPID(value bool) *PodSecurityPolicySpecApplyConfiguration {
	b.HostPID = &value
	return b
}

// SetHostIPC sets the HostIPC field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetHostIPC(value bool) *PodSecurityPolicySpecApplyConfiguration {
	b.HostIPC = &value
	return b
}

// SetSELinux sets the SELinux field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetSELinux(value *SELinuxStrategyOptionsApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.SELinux = value
	return b
}

// SetRunAsUser sets the RunAsUser field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetRunAsUser(value *RunAsUserStrategyOptionsApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.RunAsUser = value
	return b
}

// SetRunAsGroup sets the RunAsGroup field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetRunAsGroup(value *RunAsGroupStrategyOptionsApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.RunAsGroup = value
	return b
}

// SetSupplementalGroups sets the SupplementalGroups field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetSupplementalGroups(value *SupplementalGroupsStrategyOptionsApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.SupplementalGroups = value
	return b
}

// SetFSGroup sets the FSGroup field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetFSGroup(value *FSGroupStrategyOptionsApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.FSGroup = value
	return b
}

// SetReadOnlyRootFilesystem sets the ReadOnlyRootFilesystem field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetReadOnlyRootFilesystem(value bool) *PodSecurityPolicySpecApplyConfiguration {
	b.ReadOnlyRootFilesystem = &value
	return b
}

// SetDefaultAllowPrivilegeEscalation sets the DefaultAllowPrivilegeEscalation field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetDefaultAllowPrivilegeEscalation(value bool) *PodSecurityPolicySpecApplyConfiguration {
	b.DefaultAllowPrivilegeEscalation = &value
	return b
}

// SetAllowPrivilegeEscalation sets the AllowPrivilegeEscalation field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetAllowPrivilegeEscalation(value bool) *PodSecurityPolicySpecApplyConfiguration {
	b.AllowPrivilegeEscalation = &value
	return b
}

// SetAllowedHostPaths sets the AllowedHostPaths field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetAllowedHostPaths(value []AllowedHostPathApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.AllowedHostPaths = &value
	return b
}

// SetAllowedFlexVolumes sets the AllowedFlexVolumes field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetAllowedFlexVolumes(value []AllowedFlexVolumeApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.AllowedFlexVolumes = &value
	return b
}

// SetAllowedCSIDrivers sets the AllowedCSIDrivers field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetAllowedCSIDrivers(value []AllowedCSIDriverApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.AllowedCSIDrivers = &value
	return b
}

// SetAllowedUnsafeSysctls sets the AllowedUnsafeSysctls field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetAllowedUnsafeSysctls(value []string) *PodSecurityPolicySpecApplyConfiguration {
	b.AllowedUnsafeSysctls = &value
	return b
}

// SetForbiddenSysctls sets the ForbiddenSysctls field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetForbiddenSysctls(value []string) *PodSecurityPolicySpecApplyConfiguration {
	b.ForbiddenSysctls = &value
	return b
}

// SetAllowedProcMountTypes sets the AllowedProcMountTypes field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetAllowedProcMountTypes(value []v1.ProcMountType) *PodSecurityPolicySpecApplyConfiguration {
	b.AllowedProcMountTypes = &value
	return b
}

// SetRuntimeClass sets the RuntimeClass field in the declarative configuration to the given value.
func (b *PodSecurityPolicySpecApplyConfiguration) SetRuntimeClass(value *RuntimeClassStrategyOptionsApplyConfiguration) *PodSecurityPolicySpecApplyConfiguration {
	b.RuntimeClass = value
	return b
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// DaemonSetStatusApplyConfiguration represents an declarative configuration of the DaemonSetStatus type for use
// with apply.
type DaemonSetStatusApplyConfiguration struct {
	CurrentNumberScheduled *int32                                  `json:"currentNumberScheduled,omitempty"`
	NumberMisscheduled     *int32                                  `json:"numberMisscheduled,omitempty"`
	DesiredNumberScheduled *int32                                  `json:"desiredNumberScheduled,omitempty"`
	NumberReady            *int32                                  `json:"numberReady,omitempty"`
	ObservedGeneration     *int64                                  `json:"observedGeneration,omitempty"`
	UpdatedNumberScheduled *int32                                  `json:"updatedNumberScheduled,omitempty"`
	NumberAvailable        *int32                                  `json:"numberAvailable,omitempty"`
	NumberUnavailable      *int32                                  `json:"numberUnavailable,omitempty"`
	CollisionCount         *int32                                  `json:"collisionCount,omitempty"`
	Conditions             *[]DaemonSetConditionApplyConfiguration `json:"conditions,omitempty"`
}

// DaemonSetStatusApplyConfiguration constructs an declarative configuration of the DaemonSetStatus type for use with
// apply.
func DaemonSetStatus() *DaemonSetStatusApplyConfiguration {
	return &DaemonSetStatusApplyConfiguration{}
}

// SetCurrentNumberScheduled sets the CurrentNumberScheduled field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetCurrentNumberScheduled(value int32) *DaemonSetStatusApplyConfiguration {
	b.CurrentNumberScheduled = &value
	return b
}

// SetNumberMisscheduled sets the NumberMisscheduled field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetNumberMisscheduled(value int32) *DaemonSetStatusApplyConfiguration {
	b.NumberMisscheduled = &value
	return b
}

// SetDesiredNumberScheduled sets the DesiredNumberScheduled field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetDesiredNumberScheduled(value int32) *DaemonSetStatusApplyConfiguration {
	b.DesiredNumberScheduled = &value
	return b
}

// SetNumberReady sets the NumberReady field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetNumberReady(value int32) *DaemonSetStatusApplyConfiguration {
	b.NumberReady = &value
	return b
}

// SetObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetObservedGeneration(value int64) *DaemonSetStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// SetUpdatedNumberScheduled sets the UpdatedNumberScheduled field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetUpdatedNumberScheduled(value int32) *DaemonSetStatusApplyConfiguration {
	b.UpdatedNumberScheduled = &value
	return b
}

// SetNumberAvailable sets the NumberAvailable field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetNumberAvailable(value int32) *DaemonSetStatusApplyConfiguration {
	b.NumberAvailable = &value
	return b
}

// SetNumberUnavailable sets the NumberUnavailable field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetNumberUnavailable(value int32) *DaemonSetStatusApplyConfiguration {
	b.NumberUnavailable = &value
	return b
}

// SetCollisionCount sets the CollisionCount field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetCollisionCount(value int32) *DaemonSetStatusApplyConfiguration {
	b.CollisionCount = &value
	return b
}

// SetConditions sets the Conditions field in the declarative configuration to the given value.
func (b *DaemonSetStatusApplyConfiguration) SetConditions(value []DaemonSetConditionApplyConfiguration) *DaemonSetStatusApplyConfiguration {
	b.Conditions = &value
	return b
}

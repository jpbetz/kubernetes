/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// RuntimeClassStrategyOptionsApplyConfiguration represents an declarative configuration of the RuntimeClassStrategyOptions type for use
// with apply.
type RuntimeClassStrategyOptionsApplyConfiguration struct {
	AllowedRuntimeClassNames *[]string `json:"allowedRuntimeClassNames,omitempty"`
	DefaultRuntimeClassName  *string   `json:"defaultRuntimeClassName,omitempty"`
}

// RuntimeClassStrategyOptionsApplyConfiguration constructs an declarative configuration of the RuntimeClassStrategyOptions type for use with
// apply.
func RuntimeClassStrategyOptions() *RuntimeClassStrategyOptionsApplyConfiguration {
	return &RuntimeClassStrategyOptionsApplyConfiguration{}
}

// SetAllowedRuntimeClassNames sets the AllowedRuntimeClassNames field in the declarative configuration to the given value.
func (b *RuntimeClassStrategyOptionsApplyConfiguration) SetAllowedRuntimeClassNames(value []string) *RuntimeClassStrategyOptionsApplyConfiguration {
	b.AllowedRuntimeClassNames = &value
	return b
}

// RemoveAllowedRuntimeClassNames removes the AllowedRuntimeClassNames field from the declarative configuration.
func (b *RuntimeClassStrategyOptionsApplyConfiguration) RemoveAllowedRuntimeClassNames() *RuntimeClassStrategyOptionsApplyConfiguration {
	b.AllowedRuntimeClassNames = nil
	return b
}

// GetAllowedRuntimeClassNames gets the AllowedRuntimeClassNames field from the declarative configuration.
func (b *RuntimeClassStrategyOptionsApplyConfiguration) GetAllowedRuntimeClassNames() (value []string, ok bool) {
	if v := b.AllowedRuntimeClassNames; v != nil {
		return *v, true
	}
	return value, false
}

// SetDefaultRuntimeClassName sets the DefaultRuntimeClassName field in the declarative configuration to the given value.
func (b *RuntimeClassStrategyOptionsApplyConfiguration) SetDefaultRuntimeClassName(value string) *RuntimeClassStrategyOptionsApplyConfiguration {
	b.DefaultRuntimeClassName = &value
	return b
}

// RemoveDefaultRuntimeClassName removes the DefaultRuntimeClassName field from the declarative configuration.
func (b *RuntimeClassStrategyOptionsApplyConfiguration) RemoveDefaultRuntimeClassName() *RuntimeClassStrategyOptionsApplyConfiguration {
	b.DefaultRuntimeClassName = nil
	return b
}

// GetDefaultRuntimeClassName gets the DefaultRuntimeClassName field from the declarative configuration.
func (b *RuntimeClassStrategyOptionsApplyConfiguration) GetDefaultRuntimeClassName() (value string, ok bool) {
	if v := b.DefaultRuntimeClassName; v != nil {
		return *v, true
	}
	return value, false
}

// RuntimeClassStrategyOptionsList represents a listAlias of RuntimeClassStrategyOptionsApplyConfiguration.
type RuntimeClassStrategyOptionsList []*RuntimeClassStrategyOptionsApplyConfiguration

// RuntimeClassStrategyOptionsList represents a map of RuntimeClassStrategyOptionsApplyConfiguration.
type RuntimeClassStrategyOptionsMap map[string]RuntimeClassStrategyOptionsApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DeleteOptionsApplyConfiguration represents an declarative configuration of the DeleteOptions type for use
// with apply.
type DeleteOptionsApplyConfiguration struct {
	TypeMetaApplyConfiguration `json:",inline"`
	GracePeriodSeconds         *int64                           `json:"gracePeriodSeconds,omitempty"`
	Preconditions              *PreconditionsApplyConfiguration `json:"preconditions,omitempty"`
	OrphanDependents           *bool                            `json:"orphanDependents,omitempty"`
	PropagationPolicy          *metav1.DeletionPropagation      `json:"propagationPolicy,omitempty"`
	DryRun                     *[]string                        `json:"dryRun,omitempty"`
}

// DeleteOptionsApplyConfiguration constructs an declarative configuration of the DeleteOptions type for use with
// apply.
func DeleteOptions() *DeleteOptionsApplyConfiguration {
	return &DeleteOptionsApplyConfiguration{}
}

// SetTypeMeta sets the TypeMeta field in the declarative configuration to the given value.
func (b *DeleteOptionsApplyConfiguration) SetTypeMeta(value *TypeMetaApplyConfiguration) *DeleteOptionsApplyConfiguration {
	if value != nil {
		b.TypeMetaApplyConfiguration = *value
	}
	return b
}

// GetTypeMeta gets the TypeMeta field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) GetTypeMeta() (value *TypeMetaApplyConfiguration, ok bool) {
	return &b.TypeMetaApplyConfiguration, true
}

// SetGracePeriodSeconds sets the GracePeriodSeconds field in the declarative configuration to the given value.
func (b *DeleteOptionsApplyConfiguration) SetGracePeriodSeconds(value int64) *DeleteOptionsApplyConfiguration {
	b.GracePeriodSeconds = &value
	return b
}

// RemoveGracePeriodSeconds removes the GracePeriodSeconds field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) RemoveGracePeriodSeconds() *DeleteOptionsApplyConfiguration {
	b.GracePeriodSeconds = nil
	return b
}

// GetGracePeriodSeconds gets the GracePeriodSeconds field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) GetGracePeriodSeconds() (value int64, ok bool) {
	if v := b.GracePeriodSeconds; v != nil {
		return *v, true
	}
	return value, false
}

// SetPreconditions sets the Preconditions field in the declarative configuration to the given value.
func (b *DeleteOptionsApplyConfiguration) SetPreconditions(value *PreconditionsApplyConfiguration) *DeleteOptionsApplyConfiguration {
	b.Preconditions = value
	return b
}

// RemovePreconditions removes the Preconditions field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) RemovePreconditions() *DeleteOptionsApplyConfiguration {
	b.Preconditions = nil
	return b
}

// GetPreconditions gets the Preconditions field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) GetPreconditions() (value *PreconditionsApplyConfiguration, ok bool) {
	return b.Preconditions, b.Preconditions != nil
}

// SetOrphanDependents sets the OrphanDependents field in the declarative configuration to the given value.
func (b *DeleteOptionsApplyConfiguration) SetOrphanDependents(value bool) *DeleteOptionsApplyConfiguration {
	b.OrphanDependents = &value
	return b
}

// RemoveOrphanDependents removes the OrphanDependents field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) RemoveOrphanDependents() *DeleteOptionsApplyConfiguration {
	b.OrphanDependents = nil
	return b
}

// GetOrphanDependents gets the OrphanDependents field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) GetOrphanDependents() (value bool, ok bool) {
	if v := b.OrphanDependents; v != nil {
		return *v, true
	}
	return value, false
}

// SetPropagationPolicy sets the PropagationPolicy field in the declarative configuration to the given value.
func (b *DeleteOptionsApplyConfiguration) SetPropagationPolicy(value metav1.DeletionPropagation) *DeleteOptionsApplyConfiguration {
	b.PropagationPolicy = &value
	return b
}

// RemovePropagationPolicy removes the PropagationPolicy field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) RemovePropagationPolicy() *DeleteOptionsApplyConfiguration {
	b.PropagationPolicy = nil
	return b
}

// GetPropagationPolicy gets the PropagationPolicy field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) GetPropagationPolicy() (value metav1.DeletionPropagation, ok bool) {
	if v := b.PropagationPolicy; v != nil {
		return *v, true
	}
	return value, false
}

// SetDryRun sets the DryRun field in the declarative configuration to the given value.
func (b *DeleteOptionsApplyConfiguration) SetDryRun(value []string) *DeleteOptionsApplyConfiguration {
	b.DryRun = &value
	return b
}

// RemoveDryRun removes the DryRun field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) RemoveDryRun() *DeleteOptionsApplyConfiguration {
	b.DryRun = nil
	return b
}

// GetDryRun gets the DryRun field from the declarative configuration.
func (b *DeleteOptionsApplyConfiguration) GetDryRun() (value []string, ok bool) {
	if v := b.DryRun; v != nil {
		return *v, true
	}
	return value, false
}

// DeleteOptionsList represents a listAlias of DeleteOptionsApplyConfiguration.
type DeleteOptionsList []*DeleteOptionsApplyConfiguration

// DeleteOptionsList represents a map of DeleteOptionsApplyConfiguration.
type DeleteOptionsMap map[string]DeleteOptionsApplyConfiguration

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// TypeMetaApplyConfiguration represents an declarative configuration of the TypeMeta type for use
// with apply.
type TypeMetaApplyConfiguration struct {
	Kind       *string `json:"kind,omitempty"`
	APIVersion *string `json:"apiVersion,omitempty"`
}

// TypeMetaApplyConfiguration constructs an declarative configuration of the TypeMeta type for use with
// apply.
func TypeMeta() *TypeMetaApplyConfiguration {
	return &TypeMetaApplyConfiguration{}
}

// SetKind sets the Kind field in the declarative configuration to the given value.
func (b *TypeMetaApplyConfiguration) SetKind(value string) *TypeMetaApplyConfiguration {
	b.Kind = &value
	return b
}

// RemoveKind removes the Kind field from the declarative configuration.
func (b *TypeMetaApplyConfiguration) RemoveKind() *TypeMetaApplyConfiguration {
	b.Kind = nil
	return b
}

// GetKind gets the Kind field from the declarative configuration.
func (b *TypeMetaApplyConfiguration) GetKind() (value string, ok bool) {
	if v := b.Kind; v != nil {
		return *v, true
	}
	return value, false
}

// SetAPIVersion sets the APIVersion field in the declarative configuration to the given value.
func (b *TypeMetaApplyConfiguration) SetAPIVersion(value string) *TypeMetaApplyConfiguration {
	b.APIVersion = &value
	return b
}

// RemoveAPIVersion removes the APIVersion field from the declarative configuration.
func (b *TypeMetaApplyConfiguration) RemoveAPIVersion() *TypeMetaApplyConfiguration {
	b.APIVersion = nil
	return b
}

// GetAPIVersion gets the APIVersion field from the declarative configuration.
func (b *TypeMetaApplyConfiguration) GetAPIVersion() (value string, ok bool) {
	if v := b.APIVersion; v != nil {
		return *v, true
	}
	return value, false
}

// TypeMetaList represents a listAlias of TypeMetaApplyConfiguration.
type TypeMetaList []*TypeMetaApplyConfiguration

// TypeMetaList represents a map of TypeMetaApplyConfiguration.
type TypeMetaMap map[string]TypeMetaApplyConfiguration

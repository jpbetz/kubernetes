/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
)

// ObjectMetaApplyConfiguration represents an declarative configuration of the ObjectMeta type for use
// with apply.
type ObjectMetaApplyConfiguration struct {
	Name                       *string                                 `json:"name,omitempty"`
	GenerateName               *string                                 `json:"generateName,omitempty"`
	Namespace                  *string                                 `json:"namespace,omitempty"`
	SelfLink                   *string                                 `json:"selfLink,omitempty"`
	UID                        *types.UID                              `json:"uid,omitempty"`
	ResourceVersion            *string                                 `json:"resourceVersion,omitempty"`
	Generation                 *int64                                  `json:"generation,omitempty"`
	CreationTimestamp          *v1.Time                                `json:"creationTimestamp,omitempty"`
	DeletionTimestamp          *v1.Time                                `json:"deletionTimestamp,omitempty"`
	DeletionGracePeriodSeconds *int64                                  `json:"deletionGracePeriodSeconds,omitempty"`
	Labels                     *map[string]string                      `json:"labels,omitempty"`
	Annotations                *map[string]string                      `json:"annotations,omitempty"`
	OwnerReferences            *[]OwnerReferenceApplyConfiguration     `json:"ownerReferences,omitempty"`
	Finalizers                 *[]string                               `json:"finalizers,omitempty"`
	ClusterName                *string                                 `json:"clusterName,omitempty"`
	ManagedFields              *[]ManagedFieldsEntryApplyConfiguration `json:"managedFields,omitempty"`
}

// ObjectMetaApplyConfiguration constructs an declarative configuration of the ObjectMeta type for use with
// apply.
func ObjectMeta() *ObjectMetaApplyConfiguration {
	return &ObjectMetaApplyConfiguration{}
}

// SetName sets the Name field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetName(value string) *ObjectMetaApplyConfiguration {
	b.Name = &value
	return b
}

// SetGenerateName sets the GenerateName field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetGenerateName(value string) *ObjectMetaApplyConfiguration {
	b.GenerateName = &value
	return b
}

// SetNamespace sets the Namespace field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetNamespace(value string) *ObjectMetaApplyConfiguration {
	b.Namespace = &value
	return b
}

// SetSelfLink sets the SelfLink field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetSelfLink(value string) *ObjectMetaApplyConfiguration {
	b.SelfLink = &value
	return b
}

// SetUID sets the UID field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetUID(value types.UID) *ObjectMetaApplyConfiguration {
	b.UID = &value
	return b
}

// SetResourceVersion sets the ResourceVersion field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetResourceVersion(value string) *ObjectMetaApplyConfiguration {
	b.ResourceVersion = &value
	return b
}

// SetGeneration sets the Generation field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetGeneration(value int64) *ObjectMetaApplyConfiguration {
	b.Generation = &value
	return b
}

// SetCreationTimestamp sets the CreationTimestamp field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetCreationTimestamp(value v1.Time) *ObjectMetaApplyConfiguration {
	b.CreationTimestamp = &value
	return b
}

// SetDeletionTimestamp sets the DeletionTimestamp field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetDeletionTimestamp(value v1.Time) *ObjectMetaApplyConfiguration {
	b.DeletionTimestamp = &value
	return b
}

// SetDeletionGracePeriodSeconds sets the DeletionGracePeriodSeconds field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetDeletionGracePeriodSeconds(value int64) *ObjectMetaApplyConfiguration {
	b.DeletionGracePeriodSeconds = &value
	return b
}

// SetLabels sets the Labels field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetLabels(value map[string]string) *ObjectMetaApplyConfiguration {
	b.Labels = &value
	return b
}

// SetAnnotations sets the Annotations field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetAnnotations(value map[string]string) *ObjectMetaApplyConfiguration {
	b.Annotations = &value
	return b
}

// SetOwnerReferences sets the OwnerReferences field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetOwnerReferences(value []OwnerReferenceApplyConfiguration) *ObjectMetaApplyConfiguration {
	b.OwnerReferences = &value
	return b
}

// SetFinalizers sets the Finalizers field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetFinalizers(value []string) *ObjectMetaApplyConfiguration {
	b.Finalizers = &value
	return b
}

// SetClusterName sets the ClusterName field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetClusterName(value string) *ObjectMetaApplyConfiguration {
	b.ClusterName = &value
	return b
}

// SetManagedFields sets the ManagedFields field in the declarative configuration to the given value.
func (b *ObjectMetaApplyConfiguration) SetManagedFields(value []ManagedFieldsEntryApplyConfiguration) *ObjectMetaApplyConfiguration {
	b.ManagedFields = &value
	return b
}

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// LeaseSpecApplyConfiguration represents an declarative configuration of the LeaseSpec type for use
// with apply.
type LeaseSpecApplyConfiguration struct {
	HolderIdentity       *string       `json:"holderIdentity,omitempty"`
	LeaseDurationSeconds *int32        `json:"leaseDurationSeconds,omitempty"`
	AcquireTime          *v1.MicroTime `json:"acquireTime,omitempty"`
	RenewTime            *v1.MicroTime `json:"renewTime,omitempty"`
	LeaseTransitions     *int32        `json:"leaseTransitions,omitempty"`
}

// LeaseSpecApplyConfiguration constructs an declarative configuration of the LeaseSpec type for use with
// apply.
func LeaseSpec() *LeaseSpecApplyConfiguration {
	return &LeaseSpecApplyConfiguration{}
}

// SetHolderIdentity sets the HolderIdentity field in the declarative configuration to the given value.
func (b *LeaseSpecApplyConfiguration) SetHolderIdentity(value string) *LeaseSpecApplyConfiguration {
	b.HolderIdentity = &value
	return b
}

// SetLeaseDurationSeconds sets the LeaseDurationSeconds field in the declarative configuration to the given value.
func (b *LeaseSpecApplyConfiguration) SetLeaseDurationSeconds(value int32) *LeaseSpecApplyConfiguration {
	b.LeaseDurationSeconds = &value
	return b
}

// SetAcquireTime sets the AcquireTime field in the declarative configuration to the given value.
func (b *LeaseSpecApplyConfiguration) SetAcquireTime(value v1.MicroTime) *LeaseSpecApplyConfiguration {
	b.AcquireTime = &value
	return b
}

// SetRenewTime sets the RenewTime field in the declarative configuration to the given value.
func (b *LeaseSpecApplyConfiguration) SetRenewTime(value v1.MicroTime) *LeaseSpecApplyConfiguration {
	b.RenewTime = &value
	return b
}

// SetLeaseTransitions sets the LeaseTransitions field in the declarative configuration to the given value.
func (b *LeaseSpecApplyConfiguration) SetLeaseTransitions(value int32) *LeaseSpecApplyConfiguration {
	b.LeaseTransitions = &value
	return b
}

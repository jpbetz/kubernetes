/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	corev1 "k8s.io/client-go/applyconfigurations/core/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// EventApplyConfiguration represents an declarative configuration of the Event type for use
// with apply.
type EventApplyConfiguration struct {
	v1.TypeMetaApplyConfiguration   `json:",inline"`
	v1.ObjectMetaApplyConfiguration `json:"metadata,omitempty"`
	EventTime                       *metav1.MicroTime                         `json:"eventTime,omitempty"`
	Series                          *EventSeriesApplyConfiguration            `json:"series,omitempty"`
	ReportingController             *string                                   `json:"reportingController,omitempty"`
	ReportingInstance               *string                                   `json:"reportingInstance,omitempty"`
	Action                          *string                                   `json:"action,omitempty"`
	Reason                          *string                                   `json:"reason,omitempty"`
	Regarding                       *corev1.ObjectReferenceApplyConfiguration `json:"regarding,omitempty"`
	Related                         *corev1.ObjectReferenceApplyConfiguration `json:"related,omitempty"`
	Note                            *string                                   `json:"note,omitempty"`
	Type                            *string                                   `json:"type,omitempty"`
	DeprecatedSource                *corev1.EventSourceApplyConfiguration     `json:"deprecatedSource,omitempty"`
	DeprecatedFirstTimestamp        *metav1.Time                              `json:"deprecatedFirstTimestamp,omitempty"`
	DeprecatedLastTimestamp         *metav1.Time                              `json:"deprecatedLastTimestamp,omitempty"`
	DeprecatedCount                 *int32                                    `json:"deprecatedCount,omitempty"`
}

// EventApplyConfiguration constructs an declarative configuration of the Event type for use with
// apply.
func Event(name, namespace string) *EventApplyConfiguration {
	b := &EventApplyConfiguration{}
	b.SetName(name)
	b.SetNamespace(namespace)
	b.SetKind("Event")
	b.SetAPIVersion("events/v1")
	return b
}

// SetEventTime sets the EventTime field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetEventTime(value metav1.MicroTime) *EventApplyConfiguration {
	b.EventTime = &value
	return b
}

// SetSeries sets the Series field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetSeries(value *EventSeriesApplyConfiguration) *EventApplyConfiguration {
	b.Series = value
	return b
}

// SetReportingController sets the ReportingController field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetReportingController(value string) *EventApplyConfiguration {
	b.ReportingController = &value
	return b
}

// SetReportingInstance sets the ReportingInstance field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetReportingInstance(value string) *EventApplyConfiguration {
	b.ReportingInstance = &value
	return b
}

// SetAction sets the Action field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetAction(value string) *EventApplyConfiguration {
	b.Action = &value
	return b
}

// SetReason sets the Reason field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetReason(value string) *EventApplyConfiguration {
	b.Reason = &value
	return b
}

// SetRegarding sets the Regarding field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetRegarding(value *corev1.ObjectReferenceApplyConfiguration) *EventApplyConfiguration {
	b.Regarding = value
	return b
}

// SetRelated sets the Related field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetRelated(value *corev1.ObjectReferenceApplyConfiguration) *EventApplyConfiguration {
	b.Related = value
	return b
}

// SetNote sets the Note field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetNote(value string) *EventApplyConfiguration {
	b.Note = &value
	return b
}

// SetType sets the Type field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetType(value string) *EventApplyConfiguration {
	b.Type = &value
	return b
}

// SetDeprecatedSource sets the DeprecatedSource field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetDeprecatedSource(value *corev1.EventSourceApplyConfiguration) *EventApplyConfiguration {
	b.DeprecatedSource = value
	return b
}

// SetDeprecatedFirstTimestamp sets the DeprecatedFirstTimestamp field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetDeprecatedFirstTimestamp(value metav1.Time) *EventApplyConfiguration {
	b.DeprecatedFirstTimestamp = &value
	return b
}

// SetDeprecatedLastTimestamp sets the DeprecatedLastTimestamp field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetDeprecatedLastTimestamp(value metav1.Time) *EventApplyConfiguration {
	b.DeprecatedLastTimestamp = &value
	return b
}

// SetDeprecatedCount sets the DeprecatedCount field in the declarative configuration to the given value.
func (b *EventApplyConfiguration) SetDeprecatedCount(value int32) *EventApplyConfiguration {
	b.DeprecatedCount = &value
	return b
}
